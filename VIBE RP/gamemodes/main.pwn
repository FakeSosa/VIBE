/* ------------------------- [ INFORMACIJE ] -------------------------------- //

- Ime : Vibe Roleplay
- Vlasnik : Sosa
- Skripter : Sosa
- Zasluge servera : Y-Less, Blue-G, samp-incognito etc.

// -------------------------------------------------------------------------- */

// - > Main Includes
#define		YSI_YES_HEAP_MALLOC
#define 	CGEN_MEMORY  	60000
#define 	BCRYPT_COST 	12

// - > Includes
#include 		< open.mp >
#include        < a_mysql >
#include 		< Pawn.RakNet >
#include 		< weapon-config >
#include        < YSI_Data\y_iterate >
#include        < YSI_Coding\y_va >
#include        < YSI_Coding\y_timers >
#include        < streamer >
#include        < sscanf2 >
#include        < izcmd >
#include        < mapfix >
#include        < easyDialog >
#include        < mSelection >
#include 		< bcrypt >

// - > MySQL
const MYSQL_CONNECT = (0);

#if MYSQL_CONNECT == 0

	static const MYSQL_HOST[10] = "localhost";
	static const MYSQL_USER[5] = "root";
	static const MYSQL_PASS[1] = "";
	static const MYSQL_DB[8] = "vibe_db";

#elseif MYSQL_CONNECT == 1

    static const MYSQL_HOST[1] = "";
	static const MYSQL_USER[1] = "";
	static const MYSQL_PASS[1] = "";
	static const MYSQL_DB[1] =  "";

#endif

static MySQL:SQL;

// - > Limits
#undef MAX_PLAYERS
#define MAX_PLAYERS 					  100

#undef MAX_VEHICLES
#define MAX_VEHICLES                      2000

#define MAX_VOZILA  					  1000
#define MAX_ATM                           40
#define MAX_KUCA 						  1000
#define MAX_STANOVA 					  1000
#define MAX_PORT                          100
#define MAX_RENT                          30
#define MAX_FIRMI 						  1000
#define MAX_PITANJA 					  31
#define MAX_ORG                           20
#define MAX_ULICA                         30
#define MAX_ZADATAKA                      25
#define MAX_RADARA						  30
#define MAX_PLANTAZA					  20
#define MAX_SLUTS						  20
#define MAX_TERITORIJA                    50

// - > Statics
static Ulogovan[MAX_PLAYERS],
    IncorrectPassword[MAX_PLAYERS],
	bool:CorrectPassword[MAX_PLAYERS],
	bool:InputPassword[MAX_PLAYERS],
	InputMail[MAX_PLAYERS],
	InputAge[MAX_PLAYERS],
	ChooseCountry[MAX_PLAYERS],
	InputSex[MAX_PLAYERS],
	DobioPay[MAX_PLAYERS],
	chat = 1,
	AdminDuty[MAX_PLAYERS],
	JetpackUsed[MAX_PLAYERS],
	LoginTimer[MAX_PLAYERS],
	PlayerTimer[MAX_PLAYERS],
	AdminVozilo[MAX_PLAYERS],
	vozilo1,
	Text3D:StaffVeh[MAX_VEHICLES],
	KomeSalje[MAX_PLAYERS],
	Fuel[MAX_VEHICLES],
	SpecaID[MAX_PLAYERS],
	SpecTip[MAX_PLAYERS],
 	brojbankomate = 0,
 	brojkuce = 0,
 	brojstanova = 0,
 	brojportova = 0,
	brojrent = 0,
	brojfirma = 0,
	brojvozila = 0,
	brojorg = 0,
	brojulica = 0,
	brojradara = 0,
	brojplant = 0,
	brojprostitutki = 0,
	brojteritorija = 0,
	PozvaoPojacanje,
	satinfo = 0,
 	bool:PuniGorivo[MAX_PLAYERS],
 	Lociranje[MAX_PLAYERS],
 	skinlist = mS_INVALID_LISTID,
 	IzmenaFirme[MAX_PLAYERS],
 	bool:SNaocare[MAX_PLAYERS],
 	Zavezan[MAX_PLAYERS],
 	bool:TelefonZvoni[MAX_PLAYERS],
 	TelefonRazgovor[MAX_PLAYERS],
 	MobilniCenaRazgovora[MAX_PLAYERS],
	VoziloSlot[MAX_PLAYERS],
	RadioAktiviran[MAX_PLAYERS],
	CijenaProdaje[MAX_PLAYERS],
	KomeProdaje[MAX_PLAYERS],
	PonudioIgrac[MAX_PLAYERS],
	DaoOglas,
	UsaoAutoProdaja[MAX_PLAYERS],
	UsaoTuningGaraza[MAX_PLAYERS],
	Koristio_Uslugu[MAX_PLAYERS],
	Reklama_Poslana,
	OZSpam[MAX_PLAYERS],
	Koristio_Megafon[MAX_PLAYERS],
	Slot_Pitanja[MAX_PLAYERS],
	IzabraniAskQ[MAX_PLAYERS],
	VehUlazi[MAX_PLAYERS],
	PozvanOrg[MAX_PLAYERS],
	vPD[39],
	vSAJ[18],
	vGSF[13],
	vBallas[11],
	vMS13[8],
	vBDT[13],
	vLCN[16],
	kapijapd,
	pdrampa,
	pdvrata,
	ozpdkapija = 0,
	ozpdrampa = 0,
	pdvrataoz = 0,
	sajkapija,
	sajkapijaoz = 0,
	pijacakapija,
	pijacakapijaoz = 0,
	bdtkapija,
	bdtkapijaoz = 0,
	StavljeneLisice[MAX_PLAYERS],
	Trazeni_Level[MAX_PLAYERS],
	TazerTimer[MAX_PLAYERS],
	Tazer[MAX_PLAYERS],
	IgracTazovan[MAX_PLAYERS],
	PolicijaDuznost[MAX_PLAYERS],
	soprema = 0,
	VuciTimer[MAX_PLAYERS],
	VuceIgraca[MAX_PLAYERS],
	KaznuNapisao[MAX_PLAYERS],
	CenaKazne[MAX_PLAYERS],
	Pojas[MAX_PLAYERS],
	PljackaBanku[MAX_PLAYERS],
	PljackaBankuVrijeme[MAX_PLAYERS],
	PljackaZlataru[MAX_PLAYERS],
	PljackaZlataruVrijeme[MAX_PLAYERS],
	PBSefTimer[MAX_PLAYERS],
	vanrednostanje,
	bool:gPlayerUsingLoopingAnim[MAX_PLAYERS],
	gPlayerAnimLibsPreloaded[MAX_PLAYERS],
	KosacTraveCP[MAX_PLAYERS],
	Kosac_Vozilo[MAX_PLAYERS],
	Uber_Vozilo[MAX_PLAYERS],
	Polaganje_Vozilo[MAX_PLAYERS],
	Polaganje_Greske[MAX_PLAYERS],
	Polaganje_CP[MAX_PLAYERS],
	PosaoUniforma[MAX_PLAYERS],
	PosaoUberCP[MAX_PLAYERS],
	Pilot_Vozilo[MAX_PLAYERS],
	PilotCP[MAX_PLAYERS],
	Masinovodja_Vozilo[MAX_PLAYERS],
	Masinovodja_CP[MAX_PLAYERS],
	Radar_Timer[MAX_PLAYERS],
	Radar_Promjena[MAX_PLAYERS],
 	Radar_Uhvacen[MAX_PLAYERS],
 	Ima_Radar_TD[MAX_PLAYERS],
 	SvercMaterijala[MAX_PLAYERS],
 	AktorDiler,
 	KoristiDrogu[MAX_PLAYERS],
	Zauzimanje_ID[MAX_PLAYERS],
 	Zauzimanje_Time[MAX_PLAYERS],
	Zauzimanje_Timer[MAX_PLAYERS],
	Zauzimanje_CP[MAX_PLAYERS],
	Kreira_Teritoriju_ID[MAX_PLAYERS],
	Edituje_Teritoriju[MAX_PLAYERS],
	Kreira_Teritoriju_IDID[MAX_PLAYERS],
	Float:KreiranjaPos[MAX_PLAYERS][4],
	BrojanjeAktivirano = 0,
	BrojanjeVreme,
	BrojanjeTimer,
	RespawnVozila = 0;
	
static ZabranjeneReci[][] =
{
	"CroHerze",
	"Balkan Underground",
	"Balkan-Underground",
	"YUB",
	"Yunited Balkan",
	"YunitedBalkan",
	"Yunited-Balkan",
	"Y-U-B",
	"Y.U.B",
	"Dream World",
	"Dream-World",
	"DreamWorld",
	"City Of Angels",
	"City-Of-Angels",
	"CityOfAngels",
	"Faction Game",
	"Faction-Game",
	"FactionGame",
	"NooBot",
	"Balkan Extazy",
	"Balkan-Extazy",
	"Balkan.Extazy",
	"BalkanExtazy",
	"Skill Arena",
	"Skill-Arena",
	"Skill.Arena",
	"SkillArena",
	"Balkan School",
	"Balkan-School",
	"Balkan.School",
	"BalkanSchool",
	"Arcane",
	"Meanwhile",
	"Black School",
	"Black-School",
	"Black.School",
	"BlackSchool",
	"Old School",
	"Old-School",
	"Old.School",
	"OldSchool",
	"Black Jack",
	"Black-Jack",
	"Black.Jack",
	"BlackJack",
	"Venezuela"
};
	
// - > TextDraws
new Text:InGameTD[52];
new PlayerText:BankaTD[MAX_PLAYERS];
new PlayerText:ZlatoTD[MAX_PLAYERS];
new PlayerText:LoginTD[MAX_PLAYERS][5];
new PlayerText:BrzinaTD[MAX_PLAYERS][12];
new PlayerText:Radar_PTD[MAX_PLAYERS];

// - > Clear Chat
#define ClearChat(%0,%1)  				for(new c = 0; c < %1; c ++) SendClientMessage(%0, -1, " ")

// - > Server Version
#define SERVER_VERSION                  "v0.1 - RC"

// - > Enums
enum E_PLAYERS_DATA
{
	SQLID,
	Password[64],
	Email[50],
	Skin,
	Admin,
	Level,
	Respekti,
	SatiIgre,
	Novac,
	Pol,
	Drzava,
	Godine,
	NovacBanka,
	Zlato,
	Banovan,
	BRazlog[40],
	Kartica,
	KarticaPin,
	Warn,
	ADozvola,
	KamionDozvola,
	MotorDozvola,
	AvionDozvola,
	BrodDozvola,
	Kuca,
	Rent,
	Spawn,
	Droga,
	Mats,
	Hrana,
	Stan,
	IznosKredita,
	IznosRate,
	PreostaloZaOtplatu,
	Vip,
	Mutiran,
	Firma,
	BorbeniStil,
	Mobilni,
	Imenik,
	MobKredit,
	Cigare,
	Upaljac,
	Kanap,
	Naocare,
	Sat,
	Vozilo1,
	Vozilo2,
	Vozilo3,
	Produkti,
	Lider,
	Clan,
	Rank,
	RankIme[15],
	OrgKazna,
	LastLogin[30],
	Zatvor,
	OruzijeDozvola,
	ZatvorVreme,
	Posao,
	TDBoja,
	MTeam,
	LottoBroj,
	LottoNovac,
	PosadioBDroge,
	Seme,
	NeoDroga,
	DrogaUzeoPuta,
	DrogaOvisan,
	ZVreme,
	Akcenat
}
static PI[MAX_PLAYERS][E_PLAYERS_DATA];

enum _:E_SPAWN_TYPES
{
	SPAWN_NORMAL = 1,
	SPAWN_KUCA,
	SPAWN_RENTKUCA,
	SPAWN_STAN,
	SPAWN_ORGANIZACIJA
};

enum _:E_JOBS_DATA
{
	POSAO_KOSACTRAVE = 1,
	POSAO_UBER,
	POSAO_PILOT,
	POSAO_MASINOVODJA
};

#define ATM_OBJEKAT  2942
enum E_ATM_DATA
{
	SQLID,
    aPostavljen,
    Float:aX,
    Float:aY,
    Float:aZ,
    Float:aAngle,
    aObjekat,
    aInt,
    aVW,
    Text3D:aAtmLabel
}
new AtmInfo[MAX_ATM][E_ATM_DATA];
new eData[MAX_PLAYERS];

enum
{
	MALA_KUCA = 1,
    SREDNJA_KUCA,
    VELIKA_KUCA,
    VILLA
};

enum E_PORT_DATA
{
	SQLID,
	PortKreiran,
	PortIme[35],
	Float:PozicijaX,
	Float:PozicijaY,
	Float:PozicijaZ,
 	PortVrsta
};
new PortInfo[MAX_PORT][E_PORT_DATA],
    Port_Lokacija[MAX_PLAYERS],
    Port_Lista[MAX_PLAYERS][999];

enum E_HOUSES_DATA
{
	SQLID,
	kProveraVlasnika,
	kVlasnik[MAX_PLAYER_NAME],
	kVrsta,
	Float:kUlazX,
	Float:kUlazY,
	Float:kUlazZ,
	Float:kIzlazX,
	Float:kIzlazY,
	Float:kIzlazZ,
	kLevel,
	kCena,
    kNovac,
	kInt,
	kZatvoreno,
	kVW,
	kOruzije,
	kMunicija,
	kRent,
	kCenaRenta,
	kZvono,
	kFrizder,
	kMats,
	kDroga,
	kOdjeca,
	kVrstaIntKuce,
	kHrana
};
new KucaInfo[MAX_KUCA][E_HOUSES_DATA];
new KucaPickup[sizeof(KucaInfo)];
new Text3D:KucaLabel[sizeof(KucaInfo)];

enum E_APARTMENTS_ENUM
{
    SQLID,
	sProveraVlasnika,
	sVlasnik[MAX_PLAYER_NAME],
	Float:sUlazX,
	Float:sUlazY,
	Float:sUlazZ,
	Float:sIzlazX,
	Float:sIzlazY,
	Float:sIzlazZ,
	sLevel,
	sCena,
    sNovac,
	sInt,
	sZatvoreno,
	sVW,
	sOruzije,
	sMunicija
};
new StanInfo[MAX_STANOVA][E_APARTMENTS_ENUM];
new StanPickup[sizeof(StanInfo)];
new Text3D:StanLabel[sizeof(StanInfo)];

enum E_RENT_ENUM
{
	SQLID,
	Float:ObjekatX,
	Float:ObjekatY,
	Float:ObjekatZ,
	Float:ObjekatR,
	Float:PickupX,
	Float:PickupY,
	Float:PickupZ,
	Float:VoziloX,
	Float:VoziloY,
	Float:VoziloZ,
	Float:VoziloR,
};

new RentInfo[MAX_RENT][E_RENT_ENUM],
    RentObjekat[sizeof(RentInfo)],
    RentPickup[sizeof(RentInfo)],
    Text3D:RentLabel[sizeof(RentInfo)],	
    IznajmioVozilo[MAX_PLAYERS],
	RentVeh[MAX_PLAYERS],
	RentTimer[MAX_PLAYERS],
	Text3D:RentVehLabel[MAX_VEHICLES],
	TipVozila[MAX_VEHICLES],
    RentEdit[MAX_PLAYERS];
    
enum E_BUSINESS_ENUM
{
	SQLID,
	fImaVlasnika,
	fVlasnik[MAX_PLAYER_NAME],
	fVrsta,
	fNaziv[64],
	Float:fUlazX,
	Float:fUlazY,
	Float:fUlazZ,
	Float:fIzlazX,
	Float:fIzlazY,
	Float:fIzlazZ,
	fLevel,
	fCena,
	fKasa,
	fInt,
	fZatvoreno,
	fVW,
	fProdukti
};
new FirmaInfo[MAX_FIRMI][E_BUSINESS_ENUM],
	UsaoFirma[MAX_PLAYERS],
	FirmaPickup[sizeof(FirmaInfo)],
	Text3D:FirmaLabel[sizeof(FirmaInfo)];

enum E_RADARS_ENUM
{
	SQLID,
	raPostavljen,
	Float:raPozX,
	Float:raPozY,
	Float:raPozZ,
	Float:raRot_X,
	Float:raRot_Y,
	Float:raRot_Z,
	raBrzina,
	Float:raDistanca,
	raObjekat
};
new RadarInfo[MAX_RADARA][E_RADARS_ENUM];
new Text3D:Radar_3D[MAX_RADARA];
#define RADAR_OBJEKAT					18880

enum E_TICKETS_ENUM
{
	ParID,
 	Par[200],
  	Odigrao,
   	Float:Kvota,
    Rezultat
};
new kojautakmica[MAX_PLAYERS],
	TiketInfo[MAX_PLAYERS][15][E_TICKETS_ENUM],
	tikettime[MAX_PLAYERS];

enum E_MATCHS_ENUM
{
	ParID,
 	Par[200],
  	Float:Kvota[6]
};
new UtakmicaInfo[MAX_PLAYERS][15][E_MATCHS_ENUM];

new izabraotekmu[MAX_PLAYERS];
new biltenstr[MAX_PLAYERS];
new bool:sastavljatiket[MAX_PLAYERS];
new PlayerText:biltentd[MAX_PLAYERS][222];
#define biltendatum[%0][%1] biltentd[%0][%1+17]
#define biltenklub[%0][%1] biltentd[%0][%1+32]
#define biltenid[%0][%1] biltentd[%0][%1+56]
#define biltenkvota1[%0][%1] biltentd[%0][%1+73]
#define biltenkvotaX[%0][%1] biltentd[%0][%1+93]
#define biltenkvota2[%0][%1] biltentd[%0][%1+109]
#define biltenkvota3plus[%0][%1] biltentd[%0][%1+125]
#define biltenkvota4plus[%0][%1] biltentd[%0][%1+142]
#define biltenkvotagg[%0][%1] biltentd[%0][%1+159]
#define biltentiket[%0][%1] biltentd[%0][%1+177]

enum E_VEHICLE_ENUM
{
	SQLID,
	vModel,
    Float:vPozX,
    Float:vPozY,
    Float:vPozZ,
    Float:vPozA,
    vBoja1,
    vBoja2,
    vVlasnik[MAX_PLAYER_NAME],
    vImaVlasnika,
	vID,
	vZakljucan,
	vDroga,
	vMats,
	vOruzije,
	vMunicija,
	vRadio,
	vCena,
	vKomponenta1,
	vKomponenta2,
	vKomponenta3,
	vKomponenta4,
	vKomponenta5,
	vKomponenta6,
	vKomponenta7,
	vKomponenta8,
	vKomponenta9,
	vKomponenta10,
	vKomponenta11,
	vKomponenta12,
	vKomponenta13,
	vPaintJob,
	vNaPijaci,
	vInt,
	vVW,
	Text3D:v3DText
}
new VoziloInfo[MAX_VOZILA][E_VEHICLE_ENUM];

enum E_ZONES_ENUM
{
	SQLID,
	t_Zauzeta,
	t_ID,
	t_Org_ID,
	t_Time,
	t_Datum[20],
	Float:t_MaxX,
	Float:t_MinX,
	Float:t_MaxY,
	Float:t_MinY,
	t_Boja[24],
    Text3D:t_Label,
    t_Pickup,
	Float:t_PickupPos[3],
    t_RectAngle,
    t_Novac,
    t_Droga,
    t_Mats
};
new TeritorijeInfo[MAX_TERITORIJA][E_ZONES_ENUM];


enum E_QUESTIONS_ENUM
{
    bool:pPostavio,
    pIme_Igraca[MAX_PLAYER_NAME],
    pID_Igraca,
	pPitanje_Text[128]
};
new PitanjaInfo[MAX_PITANJA][E_QUESTIONS_ENUM];

enum E_ANSWERS_ENUM
{
	bool:Postavio_Pitanje,
    bool:pOdgovorio,
    pOdgovorio_Ime[MAX_PLAYER_NAME],
	pOdgovor_Text[128]
};
new OdgovoriInfo[MAX_PLAYERS][E_ANSWERS_ENUM];

enum E_WANTED_ENUM
{
	zPocinio[MAX_PLAYER_NAME],
	zPrijavio[MAX_PLAYER_NAME],
	zZlocin[64]
};
new ZlocinInfo[MAX_PLAYERS][E_WANTED_ENUM];

enum E_SERVER_ENUM
{
	sRegistracija,
	sKupovinaVozila,
	sPitanja,
	sReport,
	sDupliRespekti,
	sOglas,
	sRekord
};
new ServerInfo[E_SERVER_ENUM];

enum E_JOBV_ENUM
{
	bool: jveh_Created,
	jveh_ID,
	Text3D: jveh_Veh3D
};
new Job_Vehicle[MAX_PLAYERS][E_JOBV_ENUM];

enum E_STREET_ENUM
{
	SQLID,
	uPostavljena,
	uIme[35],
	Float:uX,
	Float:uY,
	Float:uZ
};
new UliceInfo[MAX_ULICA][E_STREET_ENUM],
	UlicaPickup[MAX_ULICA],
	Text3D:Ulica3D[MAX_ULICA];

enum E_ORG_ENUM
{
	SQLID,
	oIme[32],
	oSkin1,
	oSkin2,
	oSkin3,
	oSkin4,
	oSkin5,
	oSkin6,
	oZSkin,
	Float:oPozExtX,
	Float:oPozExtY,
	Float:oPozExtZ,
	Float:oPozIntX,
	Float:oPozIntY,
	Float:oPozIntZ,
	Float:oIntAngle,
	Float:oExtAngle,
	oInt,
	oVw,
	oSef,
	oDrzavni_Sef,
	Float:oSefPozX,
	Float:oSefPozY,
	Float:oSefPozZ,
	oSefNovac,
	Float:oPozSpawnX,
	Float:oPozSpawnY,
	Float:oPozSpawnZ,
	oBazaOZ,
	oSefDroga,
	oSefMats
};
new OrgInfo[MAX_ORG][E_ORG_ENUM];
new OrgPickup[MAX_ORG];
new OrgSefPickup[MAX_ORG];
new OrgIzlazPickup[MAX_ORG];
new Text3D:Org3D[MAX_ORG];
new Text3D:OrgSefLabel[MAX_ORG];
new Text3D:OrgIzlaz3D[MAX_ORG];

enum E_PLANT_ENUM
{
	SQLID,
	PlantazaPosadio[MAX_PLAYER_NAME],
	Float:PlantazaX,
	Float:PlantazaY,
	Float:PlantazaZ,
	PlantazaVreme
};
new PlantazaInfo[MAX_PLANTAZA][E_PLANT_ENUM],
	Text3D:Plantaza3D[sizeof(PlantazaInfo)],
	PlantazaObjekat[sizeof(PlantazaInfo)];


enum E_TUTORIAL_ENUM
{
    bool:quest_done[MAX_ZADATAKA]
}
new QuestInfo[MAX_PLAYERS][E_TUTORIAL_ENUM];

enum E_SLUTS_ENUM
{
	SQLID,
	Float:PozX,
	Float:PozY,
	Float:PozZ,
	Ime[32],
	Skin
};
new ProstitutkaInfo[MAX_SLUTS][E_SLUTS_ENUM],
	Text3D:Prostituka3D[sizeof(ProstitutkaInfo)],
	ProstitutkaAktor[sizeof(ProstitutkaInfo)],
	ProstitutkaVrsi[sizeof(ProstitutkaInfo)];
	
new matka,
	dobitak,
	ranbroj[4],

Korijeni[][] =
{
	{36, 6},
	{49, 7},
	{81, 9},
	{144, 12},
	{225, 15},
	{16, 4},
	{169, 13},
	{196, 14},
	{256, 16},
	{9, 3},
	{4, 2},
	{100, 10},
	{1, 1},
	{144, 12},
	{25, 5},
	{64, 8},
	{121, 11}
};

enum
{
	VRSTA_MARKET = 1,
	VRSTA_BURG,
	VRSTA_CLUCKIN,
	VRSTA_PIZZA,
	VRSTA_PIGPEN,
	VRSTA_BAR,
	VRSTA_GYM,
	VRSTA_SEXSHOP,
	VRSTA_BINCO,
	VRSTA_GUNSHOP,
	VRSTA_DISCO,
	VRSTA_RESTORAN,
	VRSTA_ZIP,
	VRSTA_VICTIM,
	VRSTA_SUBURBAN,
	VRSTA_KLADIONICA,
	VRSTA_POSAO
};

new uberActor[MAX_PLAYERS];

enum E_UBER_DATA
{
	Float:uberPutnikX,
	Float:uberPutnikY,
	Float:uberPutnikZ,
	Float:uberPutnikA,
	uberPutnikSkin
}
new uberPutnikPos[22][E_UBER_DATA] = {
	//POZICIJA													//SKIN
    {{1859.9891}, {-1064.8330}, {23.8281}, {225.2607}, 			11},
    {{1997.5363}, {-1049.0889}, {24.5780}, {136.8099}, 			19},
    {{2175.6357}, {-1112.4258}, {25.3356}, {170.3474}, 			22},
    {{2171.4282}, {-1390.3838}, {23.9844}, {10.4166}, 			7},
    {{2119.7585}, {-1392.0189}, {23.9930}, {76.9062},			9},
    {{1994.3925}, {-1444.2729}, {13.5661}, {97.0461},			12},
    {{1777.1531}, {-1456.6461}, {13.5469}, {22.5109},			15},
    {{1588.8387}, {-1291.9135}, {17.5246}, {182.8561},			18},
    {{1422.3931}, {-1637.1660}, {13.5469}, {276.9651},			26},
    {{1323.0824}, {-1739.2087}, {13.5469}, {28.4750},			29},
    {{1334.7795}, {-1414.9144}, {13.5519}, {322.4942},			55},
    {{1285.1680}, {-1381.9304}, {13.5451}, {104.8980},			56},
    {{1149.8275}, {-1388.8518}, {13.8324}, {177.7135},			58},
    {{976.2339}, {-1313.5206}, {13.5298}, {191.7454},			59},
    {{968.4011}, {-1155.9991}, {23.8493}, {6.9686},				69},
    {{1063.8440}, {-1133.7581}, {23.8281}, {186.0560},			79},
    {{1038.4362}, {-946.4205}, {42.7692}, {191.7885},			90},
    {{771.1581}, {-1040.1145}, {24.1100}, {189.4339},			91},
    {{620.9304}, {-1299.5890}, {15.1206}, {269.4071},			136},
    {{663.6447}, {-1760.5327}, {13.6231}, {346.2188},			137},
    {{433.5820}, {-1779.4293}, {5.5469}, {2.7461},				154},
    {{265.7579}, {-1740.7675}, {4.2613}, {355.6270},			177}
};

static Float:uberPutnikHomePos[][3] = {
    {1679.7350, -2118.9468, 13.5469},
    {1858.6698, -2045.7493, 13.5469},
    {2465.2346, -2017.1334, 13.5469},
    {2520.2266, -2002.7635, 13.5469},
    {2489.1438, -1953.6691, 13.4233},
    {2653.5313, -1995.9801, 13.5547},
    {2646.2280, -2022.1116, 13.5469},
    {2776.8606, -1971.1808, 13.5419},
    {2744.9734, -1401.3511, 35.6938},
    {2744.0776, -1223.6433, 64.0152},
    {2715.0764, -1227.9386, 63.2551},
    {2598.3694, -1249.2747, 47.4448},
    {2505.5706, -1249.0613, 35.0547},
    {2443.4448, -1303.7654, 24.0000},
    {2239.6870, -1226.3049, 23.9690},
    {2146.3425, -1295.4978, 23.9792},
    {2007.4325, -1130.2563, 25.2921},
    {1345.5444, -1065.4747, 26.1449},
    {1254.5010, -1098.4070, 25.9161},
    {1232.1757, -1025.7750, 32.4078},
    {1155.2968, -1100.3542, 25.1939},
    {1063.2871, -1469.5795, 13.5479},
    {910.1512, -1474.8025, 13.5488},
    {540.9529, -1200.9355, 44.3809},
    {475.2441, -1176.5809, 63.2028},
    {569.8581, -1133.2944, 50.4884},
    {689.9090, -1022.0699, 51.4822},
    {785.1899, -807.6539, 65.3884},
    {921.3284, -672.5261, 117.9474},
    {1057.6736, -623.3417, 116.4565},
    {1349.5824, -618.7880, 109.1328},
    {1497.0015, -700.8770, 94.7500},
    {1511.6466, -772.4894, 80.9420},
    {1524.2065, -812.6230, 71.2968},
    {1425.6833, -878.1877, 50.3836},
    {834.2838, -868.4387, 68.9199}
};

new ImenaVozila[212][] =
{
	{"Landstal"},{"Bravura"},{"Buffalo"},{"Linerunner"},{"Perrenial"},{"Sentinel"}, {"Dumper"},{"Firetruck"},{"Trashmaster"},{"Stretch"},{"Manana"},{"Infernus"},{"Voodoo"},{"Pony"},{"Mule"},{"Cheetah"},{"Ambulance"},{"Leviathan"},{"Moonbeam"},{"Esperanto"},{"Taxi"},
	{"Washington"},{"Bobcat"},{"Whoopee"},{"BF-INJ"},{"Hunter"},{"Premier"},{"Enforcer"},{"Securicar"},{"Banshee"},{"Predator"},{"Bus"},{"Rhino"},{"Barracks"},{"Hotknife"},{"Article TR"},{"Previon"},{"Coach"},{"Cabbie"},{"Stallion"},{"Rumpo"},{"RC Bandit"},{"Romero"},{"Packer"},{"Monster"},
	{"Admiral"},{"Squalo"},{"Seasparrow"},{"Pizzaboy"},{"Tram"},{"Article TR2"},{"Turismo"},{"Speeder"},{"Reefer"},{"Tropic"},{"Flatbed"},{"Yankee"},{"Caddy"},{"Solair"},{"Berkley's RC"},{"Skimmer"},{"PCJ-600"},{"Faggio"},{"Freeway"},{"RC Baron"},{"RC Raider"},{"Glendale"},{"Oceanic"},{"Sanchez"},
	{"Sparrow"},{"Patriot"},{"Quad"},{"Coastguard"},{"Dinghy"},{"Hermes"},{"Sabre"},{"Rustler"},{"ZR-350"},{"Walton"},{"Regina"},{"Comet"},{"BMX"},{"Burrito"},{"Camper"},{"Marquis"},{"Baggage"},{"Dozer"},{"Maverick"},{"Chopper"},{"Rancher"},{"FBI - Ra"},{"Virgo"},{"Greenwood"},{"Jetmax"},{"Hotring"},
	{"Sandking"},{"Blista Compact"},{"Police Maverick"},{"Boxville"},{"Benson"},{"Mesa"},{"RC Goblin"},{"HR - A"},{"HR - B"},{"Bloodring Banger"},{"Rancher"},{"Super GT"},{"Elegant"},{"Journey"},{"Bike"},{"Mountain Bike"},{"Beagle"},{"Cropdust"},{"Stuntplane"},{"Tanker"},{"Roadtrain"},
	{"Nebula"},{"Majestic"},{"Buccaneer"},{"Shamal"},{"Hydra"},{"FCR-900"},{"NRG-500"},{"HPV1000"},{"Cement Truck"},{"Tow Truck"},{"Fortune"},{"Cadrona"},{"FBI Truck"},{"Willard"},{"Forklift"},{"Tractor"},{"Combine"},{"Feltzer"},{"Remington"},{"Slamvan"},{"Blade"},{"Freight"},{"Streak"},{"Vortex"},
	{"Vincent"},{"Bullet"},{"Clover"},{"Sadler"},{"Firetruck LA"},{"Hustler"},{"Intruder"},{"Primo"},{"Cargobob"},{"Tampa"},{"Sunrise"},{"Merit"},{"Utility"},{"Nevada"},{"Yosemite"},{"Windsor"},{"Monster A"},{"Monster B"},{"Uranus"},{"Jester"},{"Sultan"},{"Stratum"},{"Elegy"},{"Raindance"},
	{"RC Tiger"},{"Flash"},{"Tahoma"},{"Savanna"},{"Bandito"},{"Freight Flat"},{"Streak Carriage"},{"Kart"},{"Mower"},{"Dunerider"},{"Sweeper"},{"Broadway"},{"Tornado"},{"AT-400"},{"DFT-30"},{"Huntley"},{"Stafford"},{"BF-400"},{"Newsvan"},{"Tug"},{"Article Trailer 3"},{"Emperor"},{"Wayfarer"},{"Euros"},{"Mobile Hotdog"},
	{"Club"},{"Carriage"},{"Trailer 3"},{"Andromada"},{"Dodo"},{"RC Cam"},{"Launch"},{"Police"},{"Police"},{"Police"},{"LSDP-Ranger"},{"Picador"},{"SWAT Van"},{"Alpha"},{"Phoenix"},{"Glendale"},{"Sadler"},{"Luggage TR A"},{"Luggage TR B"},{"Stair Trailer"},
	{"Boxville"},{"Farm Plow"},{"Utility TR"}
};

new RandomSPoruke[][] =
{
	"spisak_svih_komandi_imate_na_/komande",
	"developer_servera_je_sosa",
	"vlasnici_servera_su_markoni_i_sosa",
	"za_listu_admina_kucajte_/admini",
	"ukoliko_primetite_citera_/report",
	"ukoliko_vam_je_potrebna_pomoc_/pitaj",
	"za_listu_lidera_kucajte_/lideri",
	"za_ulazak_u_organizaciju_potreban_je_level_2",
	"trenutna_verzija_moda_je_"SERVER_VERSION"_by_sosa",
	"da_promenite_boju_textdravova_/tdboja",
	"ukoliko_ne_znate_dobro_lokacije_servera_kucajte_/gps",
	"za_listu_zadataka_kucajte_/zadaci",
	"komande_/askq_i_/report_mozete_koristiti_svakih_2_minuta",
	"listu_svih_dostupnih_animacija_pogledajte_na_/anim_list",
	"maksimalan_broj_slotova_za_vozila_je_3",
	"da_vidite_top_listu_/toplista",
	"lotto_se_izvlaci_na_svakih_sat_vremena"
};

// - > Floats
static Float:RandomSpawn[3][4] =
{
	{824.9390,		-1368.1731,		-0.5015,	319.2446},
	{828.5801,		-1371.9122,		-0.5015,	315.1644},
	{833.1729,		-1372.6681,		-0.5015,	44.8589}
};

static Float:RandomAutoSpawn[5][4] =
{
    {1976.9907,		-2003.8221,		13.2759,	269.3868},
	{1976.5178,		-1998.6370,		13.2758,	268.0515},
	{1976.0785,		-1993.0104,		13.2757,	270.6033},
	{1976.5721,		-1988.2574,		13.2759,	269.6763},
	{1976.3555,		-1983.4897,		13.2761,	270.6229}
};

static Float:RandomPijacaSpawn[11][4] =
{
	{1080.3497,		-1757.7966,		13.3160,	89.9281},
    {1081.2457,		-1763.8544,		13.3008,	89.5795},
    {1080.1282,		-1769.6903,		13.2884,	89.3010},
    {1096.0266,		-1769.6832,		13.2831,	89.7014},
    {1096.2709,		-1763.8328,		13.2816,	90.6015},
    {1096.6667,		-1754.9828,		13.2873,	90.5059},
    {1064.5410,		-1740.2729,		13.3977,	270.1348},
    {1064.7875,		-1749.1405,		13.3686,	270.3674},
    {1064.0505,		-1757.9886,		13.3487,	269.6569},
    {1064.6689,		-1766.7233,		13.3113,	268.9655},
    {1065.0005,		-1772.5736,		13.2922,	270.3416}
};

static Float:RandomZatvor[2][3] =
{
	{700.77887, 	-2739.83179, 	12.02200},
	{709.39679, 	-2677.67236, 	12.02200}
};

main() { }

public OnGameModeInit()
{
	// - > Server Varijable
	SetGameModeText("VIBE "SERVER_VERSION"");
	SendRconCommand("language #NA_RA_VNO");
	SendRconCommand("game.map San Andreas");
	SendRconCommand("website www.vibe-ogc.samp.info");
	DisableInteriorEnterExits();
	ManualVehicleEngineAndLights();
	ShowPlayerMarkers(PLAYER_MARKERS_MODE_OFF);
	SetNameTagDrawDistance(20.0);
	LimitGlobalChatRadius(20.0);
	AllowInteriorWeapons(true);
	EnableVehicleFriendlyFire();
	EnableStuntBonusForAll(false);
	AntiDeAMX();
	Load3DLabels();
	LoadPickups();
	skinlist = LoadModelSelectionMenu("skins.txt");
	PozvaoPojacanje = -1;
	vanrednostanje = 0;
	Reklama_Poslana = 0;
	if(ServerInfo[sDupliRespekti] == 1) { SendRconCommand("name VIBE | Dupli Respekti 2x | www.vibe-ogc.samp.info"); }
	else if(ServerInfo[sDupliRespekti] == 0) { SendRconCommand("name VIBE | Dobrodosli | www.vibe-ogc.samp.info"); }

	Streamer_VisibleItems(STREAMER_TYPE_OBJECT, MAX_OBJECTS);
	Streamer_VisibleItems(STREAMER_TYPE_PICKUP, MAX_PICKUPS);
	Streamer_VisibleItems(STREAMER_TYPE_ACTOR, MAX_ACTORS);

	Streamer_SetTickRate(100);
	Streamer_SetChunkSize(STREAMER_TYPE_OBJECT, 200);

	new types[STREAMER_MAX_TYPES] =
    {
        STREAMER_TYPE_OBJECT,
        STREAMER_TYPE_ACTOR,
        STREAMER_TYPE_AREA,
       	STREAMER_TYPE_3D_TEXT_LABEL,
        STREAMER_TYPE_PICKUP,
        STREAMER_TYPE_MAP_ICON,
        STREAMER_TYPE_CP,
        STREAMER_TYPE_RACE_CP
    };
    Streamer_SetTypePriority(types, sizeof(types));

    // - > Aktori
    AktorDiler = CreateActor(29,1938.2871,-1983.6605,13.5469,179.2050);
  	SetActorVirtualWorld(AktorDiler, 0); SetActorInvulnerable(AktorDiler , true);
	
	// - > MySQL Connect
	SQL = mysql_connect(MYSQL_HOST, MYSQL_USER, MYSQL_PASS, MYSQL_DB);
	if(SQL == MYSQL_INVALID_HANDLE || mysql_errno(SQL) != 0)
	{
	    SendRconCommand("exit");
		print("[MySQL]: Konekcija na databazu je neuspesna proverite postavke.");
		return 1;
	}
	else print("[MySQL]: Konekcija na databazu je uspesna nastavljam ucitavanje.");
	
	// - > Ucitavanje Mapa
	static tmpobjid, object_world = -1, object_int = -1;
 	#include "maps\Main_Locations_Create"
 	#include "maps\Interiors_Create"
 	#include "maps\Factions_Create"
 	#include "maps\Jobs_Create"
 	
 	// - > Kapije / Rampe / Vrate
 	pdrampa = CreateDynamicObject(968, 1544.6942373,-1630.9200244,13.1100004,0.0000000,90.0000000,90.0000000);
    kapijapd = CreateDynamicObject(980, 1590.4000244141, -1638, 15.199999809265, 0, 0, 0);
    pdvrata = CreateDynamicObject(1495, 4.44489, 1707.83472, -25.65040,   0.00000, 0.00000, 0.00000);
    sajkapija = CreateDynamicObject(19912, 1286.158325, -1646.239257, 15.306025, 0.000000, 0.000000, 90.000000,-1,-1,-1);
    SetDynamicObjectMaterial(sajkapija, 1, 17588, "lae2coast_alpha", "plainglass", 0xFF000000);
    pijacakapija = CreateDynamicObject(19912, 1104.65845, -1747.14478, 14.88000,   0.00000, 0.00000, -89.00000);
    bdtkapija = CreateDynamicObject(19912, 1251.437255, -767.287841, 93.825714, 0.000000, 0.000000, 0.000000);

	// - > MYSQL UCITAVANJA
	new Cache:server_cache;
	server_cache = mysql_query(SQL, "SELECT * FROM `server` WHERE `SQLID` = '1'");
	if(server_cache)
	{
	    new rows;
	    cache_get_row_count(rows);
	    if(rows)
	    {
			new i = 0;
			cache_get_value_name_int(i, "Registracija", ServerInfo[sRegistracija]);
			cache_get_value_name_int(i, "KupovinaVozila", ServerInfo[sKupovinaVozila]);
			cache_get_value_name_int(i, "Pitanja", ServerInfo[sPitanja]);
			cache_get_value_name_int(i, "Report", ServerInfo[sReport]);
            cache_get_value_name_int(i, "DupliRespekti", ServerInfo[sDupliRespekti]);
            cache_get_value_name_int(i, "Oglas", ServerInfo[sOglas]);
            cache_get_value_name_int(i, "Rekord", ServerInfo[sRekord]);
            printf("[MySQL]: Ucitana server podesavanja.");
		}
		else
		{
		    mysql_tqueryEx(SQL, "INSERT INTO `server` (SQLID, Registracija, KupovinaVozila, Pitanja, Report, Oglas) \
            VALUES( '1', '1', '1', '1', '1', '1')");
            
            printf("[MySQL]: Server podesavanja su vracena na default.");
		}
		cache_delete(server_cache);
	}
	
	new Cache:bankomat_cache;
    bankomat_cache = mysql_query(SQL, "SELECT * FROM `atms`");
    if(bankomat_cache)
    {
    	new rows;
        cache_get_row_count(rows);
        if(rows)
        {
          	for(new i = 0; i < rows; i ++)
	        {
	       		new ba;
		        cache_get_value_name_int(i, "SQLID", ba);
		        if(ba > 0)
		        {
		            AtmInfo[ba][SQLID] = ba;
	                cache_get_value_name_int(i,"Postavljen_Bankomat", AtmInfo[ba][aPostavljen]);
		            cache_get_value_name_float(i,"Poz_X", AtmInfo[ba][aX]);
	                cache_get_value_name_float(i,"Poz_Y", AtmInfo[ba][aY]);
	                cache_get_value_name_float(i,"Poz_Z", AtmInfo[ba][aZ]);
	                cache_get_value_name_float(i,"Poz_Angle", AtmInfo[ba][aAngle]);
	                cache_get_value_name_int(i,"Interijer", AtmInfo[ba][aInt]);
	                cache_get_value_name_int(i,"VW", AtmInfo[ba][aVW]);
	                KreirajAtm(ba);
	                brojbankomate ++;
		        }
	        }
	    }
	    printf("[MySQL]: Ucitano bankomata - [%d].", brojbankomate);
	    cache_delete(bankomat_cache);
	}
	
	new Cache:kuce_cache;
    kuce_cache = mysql_query(SQL, "SELECT * FROM `houses`");
    if(kuce_cache)
    {
    	new rows;
        cache_get_row_count(rows);
        if(rows)
        {
          	for(new i = 0; i < rows; i ++)
	        {
	       		new k, string[500];
		        cache_get_value_name_int(i, "SQLID", k);
		        if(k > 0)
		        {
		            KucaInfo[k][SQLID] = k;
	                cache_get_value_name_int(i,"ProveraVlasnika",KucaInfo[k][kProveraVlasnika]);
					cache_get_value_name(i,"Vlasnik",KucaInfo[k][kVlasnik],MAX_PLAYER_NAME);
				    cache_get_value_name_int(i,"Vrsta",KucaInfo[k][kVrsta]);
				    cache_get_value_name_float(i,"UlazX",KucaInfo[k][kUlazX]);
				    cache_get_value_name_float(i,"UlazY",KucaInfo[k][kUlazY]);
				    cache_get_value_name_float(i,"UlazZ",KucaInfo[k][kUlazZ]);
				    cache_get_value_name_float(i,"IzlazX",KucaInfo[k][kIzlazX]);
				    cache_get_value_name_float(i,"IzlazY",KucaInfo[k][kIzlazY]);
				    cache_get_value_name_float(i,"IzlazZ",KucaInfo[k][kIzlazZ]);
				    cache_get_value_name_int(i,"Level",KucaInfo[k][kLevel]);
				    cache_get_value_name_int(i,"Cena",KucaInfo[k][kCena]);
				    cache_get_value_name_int(i,"Novac",KucaInfo[k][kNovac]);
				    cache_get_value_name_int(i,"Interior",KucaInfo[k][kInt]);
				    cache_get_value_name_int(i,"Zatvoreno",KucaInfo[k][kZatvoreno]);
				    cache_get_value_name_int(i,"VW",KucaInfo[k][kVW]);
				    cache_get_value_name_int(i,"Oruzije",KucaInfo[k][kOruzije]);
				    cache_get_value_name_int(i,"Municija",KucaInfo[k][kMunicija]);
				    cache_get_value_name_int(i,"Rent",KucaInfo[k][kRent]);
				    cache_get_value_name_int(i,"CenaRenta",KucaInfo[k][kCenaRenta]);
				    cache_get_value_name_int(i,"Zvono",KucaInfo[k][kZvono]);
				    cache_get_value_name_int(i,"Heal",KucaInfo[k][kFrizder]);
				    cache_get_value_name_int(i,"Mats",KucaInfo[k][kMats]);
				    cache_get_value_name_int(i,"Droga",KucaInfo[k][kDroga]);
				    cache_get_value_name_int(i,"Odjeca",KucaInfo[k][kOdjeca]);
				    cache_get_value_name_int(i,"VrstaIntKuce",KucaInfo[k][kVrstaIntKuce]);
				    cache_get_value_name_int(i,"Hrana",KucaInfo[k][kHrana]);
	                
	                if(KucaInfo[k][kProveraVlasnika] == 0)
			        {
		        	    format(string,sizeof(string),"{04CC29}[ KUCA NA PRODAJU ]\nBroj kuce: {FFFFFF}%d\n{04CC29}Vrsta: {FFFFFF}%s\n{04CC29}Cena: {FFFFFF}%d$\n{04CC29}Level: {FFFFFF}%d\n{04CC29}Za kupovinu kuce /kupikucu",k,Vrsta_Kuce(KucaInfo[k][kVrsta]),KucaInfo[k][kCena],KucaInfo[k][kLevel]);
		        	    KucaLabel[k] = CreateDynamic3DTextLabel(string, -1, KucaInfo[k][kUlazX], KucaInfo[k][kUlazY], KucaInfo[k][kUlazZ], 10);
		        	    KucaPickup[k] = CreateDynamicPickup(1273, 1, KucaInfo[k][kUlazX], KucaInfo[k][kUlazY], KucaInfo[k][kUlazZ]);
		        	}
		        	else if(KucaInfo[k][kProveraVlasnika] == 1)
		        	{
		                if(KucaInfo[k][kRent] == 0)
						{
							format(string,sizeof(string),"{04CC29}[ KUCA ]\nBroj kuce: {FFFFFF}%d\n{04CC29}Vlasnik: {FFFFFF}%s\n{04CC29}Vrsta: {FFFFFF}%s\n{04CC29}Level: {FFFFFF}%d\n{04CC29}Cena: {FFFFFF}%d$",k,KucaInfo[k][kVlasnik],Vrsta_Kuce(KucaInfo[k][kVrsta]),KucaInfo[k][kLevel],KucaInfo[k][kCena]);
						}
						else if(KucaInfo[k][kRent] == 1)
						{
							format(string,sizeof(string),"{04CC29}[ KUCA ]\nVlasnik: {FFFFFF}%s\n{04CC29}Vrsta: {FFFFFF}%s\n{04CC29}Level: {FFFFFF}%d\n{04CC29}Cena: {FFFFFF}%d$\n{04CC29}Cena Renta: {FFFFFF}%d$\n{04CC29}Za rent kuce /rentajkucu",KucaInfo[k][kVlasnik],Vrsta_Kuce(KucaInfo[k][kVrsta]),KucaInfo[k][kLevel],KucaInfo[k][kCena]);
						}
						KucaLabel[k] = CreateDynamic3DTextLabel(string, -1, KucaInfo[k][kUlazX],KucaInfo[k][kUlazY],KucaInfo[k][kUlazZ], 10);
		        	    KucaPickup[k] = CreateDynamicPickup(19522, 1, KucaInfo[k][kUlazX], KucaInfo[k][kUlazY], KucaInfo[k][kUlazZ]);
		        	}
		        	brojkuce ++;
		        }
	        }
	    }
	    printf("[MySQL]: Ucitano kuca - [%d].", brojkuce);
	    cache_delete(kuce_cache);
	}
	
	new Cache:stanovi_cache;
    stanovi_cache = mysql_query(SQL, "SELECT * FROM `apartments`");
    if(stanovi_cache)
    {
    	new rows;
        cache_get_row_count(rows);
        if(rows)
        {
          	for(new i = 0; i < rows; i ++)
	        {
	       		new s, string[300];
		        cache_get_value_name_int(i, "SQLID", s);
		        if(s > 0)
		        {
		            StanInfo[s][SQLID] = s;
		            cache_get_value_name_int(i,"ProveraVlasnika",StanInfo[s][sProveraVlasnika]);
					cache_get_value_name(i,"Vlasnik",StanInfo[s][sVlasnik],MAX_PLAYER_NAME);
				    cache_get_value_name_float(i,"UlazX",StanInfo[s][sUlazX]);
				    cache_get_value_name_float(i,"UlazY",StanInfo[s][sUlazY]);
				    cache_get_value_name_float(i,"UlazZ",StanInfo[s][sUlazZ]);
				    cache_get_value_name_float(i,"IzlazX",StanInfo[s][sIzlazX]);
				    cache_get_value_name_float(i,"IzlazY",StanInfo[s][sIzlazY]);
				    cache_get_value_name_float(i,"IzlazZ",StanInfo[s][sIzlazZ]);
				    cache_get_value_name_int(i,"Level",StanInfo[s][sLevel]);
				    cache_get_value_name_int(i,"Cena",StanInfo[s][sCena]);
				    cache_get_value_name_int(i,"Novac",StanInfo[s][sNovac]);
				    cache_get_value_name_int(i,"Interijer",StanInfo[s][sInt]);
				    cache_get_value_name_int(i,"Zatvoreno",StanInfo[s][sZatvoreno]);
				    cache_get_value_name_int(i,"VW",StanInfo[s][sVW]);
				    cache_get_value_name_int(i,"Oruzije",StanInfo[s][sOruzije]);
				    cache_get_value_name_int(i,"Municija",StanInfo[s][sMunicija]);
				    
				    if(StanInfo[s][sProveraVlasnika] == 0)
					{
						format(string,sizeof(string),"{56dc7d}[ STAN NA PRODAJU ]\nBroj stana: {FFFFFF}%d\n{56dc7d}Cena: {FFFFFF}%d$\n{56dc7d}Level: {FFFFFF}%d\nZa kupovinu {56dc7d}/kupistan", s, StanInfo[s][sCena], StanInfo[s][sLevel]);
						StanLabel[s] = CreateDynamic3DTextLabel(string, -1, StanInfo[s][sUlazX], StanInfo[s][sUlazY], StanInfo[s][sUlazZ], 10);
						StanPickup[s] = CreateDynamicPickup(19524, 1, StanInfo[s][sUlazX], StanInfo[s][sUlazY], StanInfo[s][sUlazZ]);
					}
					else if(StanInfo[s][sProveraVlasnika] == 1)
					{
						format(string,sizeof(string),"{56dc7d}[ STAN ]\nVlasnik: {FFFFFF}%s\n{56dc7d}Cena: {FFFFFF}%d$\n{56dc7d}Level: {FFFFFF}%d\n{56dc7d}Broj stana: {FFFFFF}%d",StanInfo[s][sVlasnik],StanInfo[s][sCena],StanInfo[s][sLevel],s);
						StanLabel[s] = CreateDynamic3DTextLabel(string, -1, StanInfo[s][sUlazX], StanInfo[s][sUlazY], StanInfo[s][sUlazZ], 10);
						StanPickup[s] = CreateDynamicPickup(19523, 1, StanInfo[s][sUlazX], StanInfo[s][sUlazY], StanInfo[s][sUlazZ]);
					}
				    
		        	brojstanova ++;
		        }
	        }
	    }
	    printf("[MySQL]: Ucitano stanova - [%d].", brojstanova);
	    cache_delete(stanovi_cache);
	}
	
	new Cache:port_cache;
    port_cache = mysql_query(SQL, "SELECT * FROM `ports`");
    if(port_cache)
    {
    	new rows;
        cache_get_row_count(rows);
        if(rows)
        {
          	for(new i = 0; i < rows; i ++)
	        {
	       		new id;
		        cache_get_value_name_int(i, "SQLID", id);
		        if(id > 0)
		        {
		            PortInfo[id][SQLID] = id;
                    cache_get_value_name_int(i, "PortKreiran", PortInfo[id][PortKreiran]);
                    cache_get_value_name(i, "PortIme", PortInfo[id][PortIme], 35);
					cache_get_value_name_float(i, "PozicijaX", PortInfo[id][PozicijaX]);
					cache_get_value_name_float(i, "PozicijaY", PortInfo[id][PozicijaY]);
					cache_get_value_name_float(i, "PozicijaZ", PortInfo[id][PozicijaZ]);
					cache_get_value_name_int(i, "PortVrsta", PortInfo[id][PortVrsta]);
		        	brojportova ++;
		        }
	        }
	    }
	    printf("[MySQL]: Ucitano port lokacija - [%d].", brojportova);
	    cache_delete(port_cache);
	}
	
	new Cache:rent_cache;
    rent_cache = mysql_query(SQL, "SELECT * FROM `rent`");
    if(rent_cache)
    {
    	new rows;
        cache_get_row_count(rows);
        if(rows)
        {
          	for(new i = 0; i < rows; i ++)
	        {
		       	new rentid;
		        cache_get_value_name_int(i, "SQLID", rentid);
		        if(rentid > 0)
		        {
		            RentInfo[ rentid ][ SQLID ] = rentid;
	                cache_get_value_name_float(i,"ObjekatX", RentInfo[rentid][ObjekatX]);
		            cache_get_value_name_float(i,"ObjekatY", RentInfo[rentid][ObjekatY]);
		            cache_get_value_name_float(i,"ObjekatZ", RentInfo[rentid][ObjekatZ]);
		            cache_get_value_name_float(i,"ObjekatR", RentInfo[rentid][ObjekatR]);
		            cache_get_value_name_float(i,"PickupX", RentInfo[rentid][PickupX]);
		            cache_get_value_name_float(i,"PickupY", RentInfo[rentid][PickupY]);
		            cache_get_value_name_float(i,"PickupZ", RentInfo[rentid][PickupZ]);
		            cache_get_value_name_float(i,"VoziloX", RentInfo[rentid][VoziloX]);
		            cache_get_value_name_float(i,"VoziloY", RentInfo[rentid][VoziloY]);
		            cache_get_value_name_float(i,"VoziloZ", RentInfo[rentid][VoziloZ]);
		            cache_get_value_name_float(i,"VoziloR", RentInfo[rentid][VoziloR]);

					KreirajRent(rentid);
		            
		            brojrent ++;
		        }
	        }
	    }
	    printf("[MySQL]: Ucitano rent objekata - [%d].", brojrent);
	    cache_delete(rent_cache);
	}
	
	new Cache:firme_cache;
    firme_cache = mysql_query(SQL, "SELECT * FROM `business`");
    if(firme_cache)
    {
    	new rows;
        cache_get_row_count(rows);
        if(rows)
        {
          	for(new i = 0; i < rows; i ++)
	        {
	            new b, string[300];
	            cache_get_value_name_int(i, "SQLID", b);
				if(b > 0)
				{
				    FirmaInfo[b][SQLID] = b;
				    cache_get_value_name_int(i,"ImaVlasnika",FirmaInfo[b][fImaVlasnika]);
					cache_get_value_name(i,"Vlasnik",FirmaInfo[b][fVlasnik],32);
					cache_get_value_name_int(i,"Vrsta",FirmaInfo[b][fVrsta]);
					cache_get_value_name(i,"Naziv",FirmaInfo[b][fNaziv],64);
					cache_get_value_name_float(i,"UlazX",FirmaInfo[b][fUlazX]);
					cache_get_value_name_float(i,"UlazY",FirmaInfo[b][fUlazY]);
					cache_get_value_name_float(i,"UlazZ",FirmaInfo[b][fUlazZ]);
					cache_get_value_name_float(i,"IzlazX",FirmaInfo[b][fIzlazX]);
					cache_get_value_name_float(i,"IzlazY",FirmaInfo[b][fIzlazY]);
					cache_get_value_name_float(i,"IzlazZ",FirmaInfo[b][fIzlazZ]);
					cache_get_value_name_int(i,"Level",FirmaInfo[b][fLevel]);
					cache_get_value_name_int(i,"Cena",FirmaInfo[b][fCena]);
					cache_get_value_name_int(i,"Kasa",FirmaInfo[b][fKasa]);
					cache_get_value_name_int(i,"Interijer",FirmaInfo[b][fInt]);
					cache_get_value_name_int(i,"Zatvoreno",FirmaInfo[b][fZatvoreno]);
					cache_get_value_name_int(i,"VW",FirmaInfo[b][fVW]);
					cache_get_value_name_int(i,"Produkti",FirmaInfo[b][fProdukti]);
					
					if(FirmaInfo[b][fImaVlasnika] == 0)
					{
						format(string,sizeof(string),"{49d07b}[ FIRMA NA PRODAJU ]\n\n{49d07b}[ {FFFFFF}%s {49d07b}]\nBroj firme: {FFFFFF}%d\n{49d07b}Cena: {FFFFFF}%d$\n{49d07b}Level: {FFFFFF}%d\n{49d07b}Vrsta: {FFFFFF}%s\n{49d07b}Za kupovinu /kupifirmu",FirmaInfo[b][fNaziv],b,FirmaInfo[b][fCena],FirmaInfo[b][fLevel],Vrsta_Firme(FirmaInfo[b][fVrsta]));
						FirmaLabel[b] = CreateDynamic3DTextLabel(string, -1, FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 10);
						FirmaPickup[b] = CreateDynamicPickup(1274, 1, FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ]);
					}
					else if(FirmaInfo[b][fImaVlasnika] == 1)
					{
						format(string,sizeof(string),"{49d07b}[ FIRMA ]\n\n{49d07b}[ {FFFFFF}%s {49d07b}]\nBroj firme: {FFFFFF}%d\n{49d07b}Vlasnik: {FFFFFF}%s\n{49d07b}Level: {FFFFFF}%d\n{49d07b}Cena: {FFFFFF}%d$\n{49d07b}Vrsta: {FFFFFF}%s",FirmaInfo[b][fNaziv],b,FirmaInfo[b][fVlasnik],FirmaInfo[b][fLevel],FirmaInfo[b][fCena],Vrsta_Firme(FirmaInfo[b][fVrsta]));
						FirmaLabel[b] = CreateDynamic3DTextLabel(string, -1, FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 10);
						FirmaPickup[b] = CreateDynamicPickup(1239, 1, FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ]);
					}
					if(FirmaInfo[b][fVrsta] == VRSTA_MARKET)	CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 56, -1, 0, 0, -1, 150.0);
			        if(FirmaInfo[b][fVrsta] == VRSTA_BURG)      CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 10, -1, 0, 0, -1, 150.0);
			        if(FirmaInfo[b][fVrsta] == VRSTA_CLUCKIN)   CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 14, -1, 0, 0, -1, 150.0);
			        if(FirmaInfo[b][fVrsta] == VRSTA_PIZZA)     CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 29, -1, 0, 0, -1, 150.0);
			        if(FirmaInfo[b][fVrsta] == VRSTA_PIGPEN)    CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 48, -1, 0, 0, -1, 150.0);
			        if(FirmaInfo[b][fVrsta] == VRSTA_BAR)       CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 49, -1, 0, 0, -1, 150.0);
			        if(FirmaInfo[b][fVrsta] == VRSTA_GYM)       CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 54, -1, 0, 0, -1, 150.0);
			        if(FirmaInfo[b][fVrsta] == VRSTA_SEXSHOP)   CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 36, -1, 0, 0, -1, 150.0);
			        if(FirmaInfo[b][fVrsta] == VRSTA_BINCO)     CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 45, -1, 0, 0, -1, 150.0);
			        if(FirmaInfo[b][fVrsta] == VRSTA_GUNSHOP)   CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 6, -1, 0, 0, -1, 150.0);
					if(FirmaInfo[b][fVrsta] == VRSTA_DISCO)     CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 48, -1, 0, 0, -1, 150.0);
			        if(FirmaInfo[b][fVrsta] == VRSTA_RESTORAN)  CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 50, -1, 0, 0, -1, 150.0);
			        if(FirmaInfo[b][fVrsta] == VRSTA_ZIP)       CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 45, -1, 0, 0, -1, 150.0);
			        if(FirmaInfo[b][fVrsta] == VRSTA_VICTIM)    CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 45, -1, 0, 0, -1, 150.0);
			        if(FirmaInfo[b][fVrsta] == VRSTA_SUBURBAN)  CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 45, -1, 0, 0, -1, 150.0);
			        if(FirmaInfo[b][fVrsta] == VRSTA_KLADIONICA) CreateDynamicMapIcon(FirmaInfo[b][fUlazX], FirmaInfo[b][fUlazY], FirmaInfo[b][fUlazZ], 25, -1, 0, 0, -1, 150.0);
			        
					brojfirma ++;
				}
			}
		}
		printf("[MySQL]: Ucitano firmi - [%d].", brojfirma);
	    cache_delete(firme_cache);
	}
	
	new Cache:vozila_cache;
    vozila_cache = mysql_query(SQL, "SELECT * FROM `vehicles`");
    if(vozila_cache)
    {
    	new rows;
        cache_get_row_count(rows);
        if(rows)
        {
          	for(new i = 0; i < rows; i ++)
	        {
	            new vehid, engine, alarm, lights, bonnet, boot, objective;
	            cache_get_value_name_int(i, "SQLID", vehid);
				if(vehid > 0)
				{
				    VoziloInfo[vehid][SQLID] = vehid;
				    cache_get_value_name_int(i,"Model", VoziloInfo[vehid][vModel]);
				    cache_get_value_name_float(i,"X", VoziloInfo[vehid][vPozX]);
				    cache_get_value_name_float(i,"Y", VoziloInfo[vehid][vPozY]);
				    cache_get_value_name_float(i,"Z", VoziloInfo[vehid][vPozZ]);
				    cache_get_value_name_float(i,"A", VoziloInfo[vehid][vPozA]);
				    cache_get_value_name_int(i,"Boja1", VoziloInfo[vehid][vBoja1]);
				    cache_get_value_name_int(i,"Boja2", VoziloInfo[vehid][vBoja2]);
				    cache_get_value_name(i,"Vlasnik", VoziloInfo[vehid][vVlasnik],MAX_PLAYER_NAME);
				    cache_get_value_name_int(i,"ImaVlasnika", VoziloInfo[vehid][vImaVlasnika]);
					cache_get_value_name_int(i,"Zakljucan", VoziloInfo[vehid][vZakljucan]);
					cache_get_value_name_int(i,"Droga", VoziloInfo[vehid][vDroga]);
					cache_get_value_name_int(i,"Mats", VoziloInfo[vehid][vMats]);
					cache_get_value_name_int(i,"Oruzije", VoziloInfo[vehid][vOruzije]);
					cache_get_value_name_int(i,"Municija", VoziloInfo[vehid][vMunicija]);
					cache_get_value_name_int(i,"Radio", VoziloInfo[vehid][vRadio]);
					cache_get_value_name_int(i,"Cena", VoziloInfo[vehid][vCena]);
					cache_get_value_name_int(i,"Komponenta1", VoziloInfo[vehid][vKomponenta1]);
					cache_get_value_name_int(i,"Komponenta2", VoziloInfo[vehid][vKomponenta2]);
					cache_get_value_name_int(i,"Komponenta3", VoziloInfo[vehid][vKomponenta3]);
					cache_get_value_name_int(i,"Komponenta4", VoziloInfo[vehid][vKomponenta4]);
					cache_get_value_name_int(i,"Komponenta5", VoziloInfo[vehid][vKomponenta5]);
					cache_get_value_name_int(i,"Komponenta6", VoziloInfo[vehid][vKomponenta6]);
					cache_get_value_name_int(i,"Komponenta7", VoziloInfo[vehid][vKomponenta7]);
					cache_get_value_name_int(i,"Komponenta8", VoziloInfo[vehid][vKomponenta8]);
					cache_get_value_name_int(i,"Komponenta9", VoziloInfo[vehid][vKomponenta9]);
					cache_get_value_name_int(i,"Komponenta10", VoziloInfo[vehid][vKomponenta10]);
					cache_get_value_name_int(i,"Komponenta11", VoziloInfo[vehid][vKomponenta11]);
					cache_get_value_name_int(i,"Komponenta12", VoziloInfo[vehid][vKomponenta12]);
					cache_get_value_name_int(i,"Komponenta13", VoziloInfo[vehid][vKomponenta13]);
					cache_get_value_name_int(i,"PaintJob", VoziloInfo[vehid][vPaintJob]);
					cache_get_value_name_int(i,"NaPijaci", VoziloInfo[vehid][vNaPijaci]);
					cache_get_value_name_int(i,"Interijer", VoziloInfo[vehid][vInt]);
					cache_get_value_name_int(i,"VW", VoziloInfo[vehid][vVW]);
					if(VoziloInfo[vehid][vNaPijaci] == 0)
					{
						VoziloInfo[vehid][vID] = AddStaticVehicleEx(VoziloInfo[vehid][vModel],VoziloInfo[vehid][vPozX],VoziloInfo[vehid][vPozY],VoziloInfo[vehid][vPozZ],VoziloInfo[vehid][vPozA],VoziloInfo[vehid][vBoja1],VoziloInfo[vehid][vBoja2],2400);
						SetVehicleParamsEx(VoziloInfo[vehid][vID], engine, lights, alarm, VoziloInfo[vehid][vZakljucan], bonnet, boot, objective);
                        LinkVehicleToInterior(VoziloInfo[vehid][vID], VoziloInfo[vehid][vInt]);
		        		SetVehicleVirtualWorld(VoziloInfo[vehid][vID], VoziloInfo[vehid][vVW]);
						SetVehicleToRespawn(VoziloInfo[vehid][vID]);
						PostaviVLabel(VoziloInfo[vehid][vID]);
					}
					else
					{
					    VoziloInfo[vehid][vID] = AddStaticVehicleEx(VoziloInfo[vehid][vModel],VoziloInfo[vehid][vPozX],VoziloInfo[vehid][vPozY],VoziloInfo[vehid][vPozZ],VoziloInfo[vehid][vPozA],VoziloInfo[vehid][vBoja1],VoziloInfo[vehid][vBoja2],2400);
						SetVehicleParamsEx(VoziloInfo[vehid][vID], engine, lights, alarm, VoziloInfo[vehid][vZakljucan], bonnet, boot, objective);
						LinkVehicleToInterior(VoziloInfo[vehid][vID], VoziloInfo[vehid][vInt]);
		        		SetVehicleVirtualWorld(VoziloInfo[vehid][vID], VoziloInfo[vehid][vVW]);
						SetVehicleToRespawn(VoziloInfo[vehid][vID]);
						PostaviVLabel(VoziloInfo[vehid][vID]);
					}
					brojvozila++;
				}
			}
		}
		printf("[MySQL]: Ucitano kupljenih vozila - [%d].", brojvozila);
 		cache_delete(vozila_cache);
	}
	
	new Cache:org_cache;
    org_cache = mysql_query(SQL, "SELECT * FROM `organizations`");
    if(org_cache)
    {
    	new rows;
        cache_get_row_count(rows);
        if(rows)
        {
          	for(new i = 0; i < rows; i ++)
	        {
	            new id;
	            cache_get_value_name_int(i, "SQLID", id);
				if(id > 0)
				{
				    OrgInfo[id][SQLID] = id;
					cache_get_value_name(i,"Ime", OrgInfo[id][oIme], 32);
					cache_get_value_name_int(i,"Skin1", OrgInfo[id][oSkin1]);
					cache_get_value_name_int(i,"Skin2", OrgInfo[id][oSkin2]);
					cache_get_value_name_int(i,"Skin3", OrgInfo[id][oSkin3]);
					cache_get_value_name_int(i,"Skin4", OrgInfo[id][oSkin4]);
					cache_get_value_name_int(i,"Skin5", OrgInfo[id][oSkin5]);
					cache_get_value_name_int(i,"Skin6", OrgInfo[id][oSkin6]);
					cache_get_value_name_int(i,"ZSkin", OrgInfo[id][oZSkin]);
					cache_get_value_name_float(i,"PozExtX", OrgInfo[id][oPozExtX]);
					cache_get_value_name_float(i,"PozExtY", OrgInfo[id][oPozExtY]);
					cache_get_value_name_float(i,"PozExtZ", OrgInfo[id][oPozExtZ]);
					cache_get_value_name_float(i,"PozIntX", OrgInfo[id][oPozIntX]);
					cache_get_value_name_float(i,"PozIntY", OrgInfo[id][oPozIntY]);
					cache_get_value_name_float(i,"PozIntZ", OrgInfo[id][oPozIntZ]);
					cache_get_value_name_float(i,"IntAngle", OrgInfo[id][oIntAngle]);
					cache_get_value_name_float(i,"ExtAngle", OrgInfo[id][oExtAngle]);
					cache_get_value_name_int(i,"Interijer", OrgInfo[id][oInt]);
					cache_get_value_name_int(i,"VW", OrgInfo[id][oVw]);
					cache_get_value_name_int(i,"Sef", OrgInfo[id][oSef]);
					cache_get_value_name_int(i,"Drzavni_Sef", OrgInfo[id][oDrzavni_Sef]);
					cache_get_value_name_float(i,"SefPozX", OrgInfo[id][oSefPozX]);
					cache_get_value_name_float(i,"SefPozY", OrgInfo[id][oSefPozY]);
					cache_get_value_name_float(i,"SefPozZ", OrgInfo[id][oSefPozZ]);
					cache_get_value_name_int(i,"SefNovac", OrgInfo[id][oSefNovac]);
					cache_get_value_name_float(i,"PozSpawnX", OrgInfo[id][oPozSpawnX]);
					cache_get_value_name_float(i,"PozSpawnY", OrgInfo[id][oPozSpawnY]);
					cache_get_value_name_float(i,"PozSpawnZ", OrgInfo[id][oPozSpawnZ]);
					cache_get_value_name_int(i,"BazaOZ", OrgInfo[id][oBazaOZ]);
					cache_get_value_name_int(i,"SefDroga", OrgInfo[id][oSefDroga]);
					cache_get_value_name_int(i,"SefMats", OrgInfo[id][oSefMats]);

                    OrgLabel(id);

					brojorg ++;
				}
			}
		}
	    printf("[MySQL]: Ucitano organizacija - [%d].", brojorg);
 		cache_delete(org_cache);
	}
	
	new Cache:ulice_cache;
    ulice_cache = mysql_query(SQL, "SELECT * FROM `streets`");
    if(ulice_cache)
    {
    	new rows;
        cache_get_row_count(rows);
        if(rows)
        {
          	for(new i = 0; i < rows; i ++)
	        {
	            new id, str[256];
	            cache_get_value_name_int(i, "SQLID", id);
				if(id > 0)
				{
					UliceInfo[id][SQLID] = id;
					cache_get_value_name_int(i,"Postavljena", UliceInfo[id][uPostavljena]);
					cache_get_value_name(i,"Ime", UliceInfo[id][uIme], 35);
					cache_get_value_name_float(i,"X", UliceInfo[id][uX]);
					cache_get_value_name_float(i,"Y", UliceInfo[id][uY]);
					cache_get_value_name_float(i,"Z", UliceInfo[id][uZ]);
					
					if(UliceInfo[id][uPostavljena] == 1)
					{
					    format(str, sizeof(str), "{FF0000}[ULICA]\n\n{FFFFFF}Adresa: {FF0000}%d\n{FFFFFF}Naziv: {FF0000}%s", UliceInfo[id][SQLID], UliceInfo[id][uIme]);
					    Ulica3D[id] = CreateDynamic3DTextLabel(str, -1, UliceInfo[id][uX], UliceInfo[id][uY], UliceInfo[id][uZ], 10.0,_,_,_, 0, 0,_,_);
						UlicaPickup[id] = CreateDynamicPickup(1314, 1, UliceInfo[id][uX], UliceInfo[id][uY], UliceInfo[id][uZ], 0);
					}
					brojulica ++;
				}
			}
		}
        printf("[MySQL]: Ucitano ulica - [%d].", brojulica);
 		cache_delete(ulice_cache);
	}

	new Cache:radar_cache;
    radar_cache = mysql_query(SQL, "SELECT * FROM `radars`");
    if(radar_cache)
    {
    	new rows;
        cache_get_row_count(rows);
        if(rows)
        {
          	for(new i = 0; i < rows; i ++)
	        {
	            new ra_id;
	            cache_get_value_name_int(i, "SQLID", ra_id);
				if(ra_id > 0)
				{
					RadarInfo[ra_id][SQLID] = ra_id;
					cache_get_value_name_int(i,"RadarPostavljen", RadarInfo[ra_id][raPostavljen]);
					cache_get_value_name_float(i,"PozX",RadarInfo[ra_id][raPozX]);
					cache_get_value_name_float(i,"PozY",RadarInfo[ra_id][raPozY]);
					cache_get_value_name_float(i,"PozZ",RadarInfo[ra_id][raPozZ]);
					cache_get_value_name_float(i,"RotX",RadarInfo[ra_id][raRot_X]);
					cache_get_value_name_float(i,"RotY",RadarInfo[ra_id][raRot_Y]);
					cache_get_value_name_float(i,"RotZ",RadarInfo[ra_id][raRot_Z]);
					cache_get_value_name_int(i,"Brzina", RadarInfo[ra_id][raBrzina]);
					cache_get_value_name_float(i,"Distanca", RadarInfo[ra_id][raDistanca]);	

					KreirajRadar(ra_id, true);
					brojradara ++;
				}
			}
		}
		printf("[MySQL]: Ucitano radara - [%d].", brojradara);
		cache_delete(radar_cache);
	}

	new Cache:plant_cache;
    plant_cache = mysql_query(SQL, "SELECT * FROM `plants`");
    if(plant_cache)
    {
    	new rows;
        cache_get_row_count(rows);
        if(rows)
        {
          	for(new i = 0; i < rows; i ++)
	        {
	            new plant, string[256];
	            cache_get_value_name_int(i, "SQLID", plant);
				if(plant > 0)
				{
					PlantazaInfo[plant][SQLID] = plant;
					cache_get_value_name(i, "PlantazaPosadio", PlantazaInfo[plant][PlantazaPosadio], MAX_PLAYER_NAME);
					cache_get_value_name_float(i, "PlantazaX", PlantazaInfo[plant][PlantazaX]);
					cache_get_value_name_float(i, "PlantazaY", PlantazaInfo[plant][PlantazaY]);
					cache_get_value_name_float(i, "PlantazaZ", PlantazaInfo[plant][PlantazaZ]);
					cache_get_value_name_int(i, "PlantazaVreme", PlantazaInfo[plant][PlantazaVreme]);

					if(PlantazaInfo[plant][PlantazaVreme] == 0)
		            {
		              	format(string, sizeof(string), "{1b71bc}[ {FFFFFF}BILJKA DROGE - %d {1b71bc}]\nVlasnik: {FFFFFF}%s\nDroga je {04CC29}spremna za branje\n{FFFFFF}Komanda: /oberidrogu", plant, PlantazaInfo[plant][PlantazaPosadio]);
		            	PlantazaObjekat[plant] = CreateDynamicObject(824, PlantazaInfo[plant][PlantazaX], PlantazaInfo[plant][PlantazaY], PlantazaInfo[plant][PlantazaZ]-1, 0.0, 0.0, 0.0);
		            }
		            else if(PlantazaInfo[plant][PlantazaVreme] > 0)
		            {
		              	format(string, sizeof(string), "{1b71bc}[ {FFFFFF}BILJKA DROGE - %d {1b71bc}]\nVlasnik: {FFFFFF}%s\nPreostalo : %d sekundi\nDroga {FF0000}nije spremna za branje", plant, PlantazaInfo[plant][PlantazaPosadio], PlantazaInfo[plant][PlantazaVreme]);
		                defer DrogaPlantazaTimer(plant);
		                PlantazaObjekat[plant] = CreateDynamicObject(824, PlantazaInfo[plant][PlantazaX], PlantazaInfo[plant][PlantazaY], PlantazaInfo[plant][PlantazaZ]-2.5, 0.0, 0.0, 0.0);
		            }
					Plantaza3D[plant] = CreateDynamic3DTextLabel(string, 0x33CCFFAA, PlantazaInfo[plant][PlantazaX], PlantazaInfo[plant][PlantazaY], PlantazaInfo[plant][PlantazaZ], 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 30.0, -1, 0);
					brojplant++;
				}
			}
		} 
		printf("[MySQL]: Ucitano biljka droge - [%d].", brojplant);
		cache_delete(plant_cache);
	}

	new Cache:slut_cache;
    slut_cache = mysql_query(SQL, "SELECT * FROM `sluts`");
    if(slut_cache)
    {
    	new rows;
        cache_get_row_count(rows);
        if(rows)
        {
          	for(new i = 0; i < rows; i ++)
	        {
	            new slutID, string[256];
	            cache_get_value_name_int(i, "SQLID", slutID);
				if(slutID > 0)
				{
					ProstitutkaInfo[slutID][SQLID] = slutID;
					cache_get_value_name_float(i, "PozX", ProstitutkaInfo[slutID][PozX]);
					cache_get_value_name_float(i, "PozY", ProstitutkaInfo[slutID][PozY]);
					cache_get_value_name_float(i, "PozZ", ProstitutkaInfo[slutID][PozZ]);
					cache_get_value_name(i, "Ime", ProstitutkaInfo[slutID][Ime], 32);
					cache_get_value_name_int(i, "Skin", ProstitutkaInfo[slutID][Skin]);

					format(string, sizeof(string), "{FF0000}[ PROSTITUTKA ]\n{FFFFFF}Ime: {FF0000}%s\n{FFFFFF}Za uslugu korisitite\n{FF0000}/blowjob", ProstitutkaInfo[slutID][Ime]);
					ProstitutkaAktor[slutID] = CreateDynamicActor(ProstitutkaInfo[slutID][Skin], ProstitutkaInfo[slutID][PozX], ProstitutkaInfo[slutID][PozY], ProstitutkaInfo[slutID][PozZ], 0, 1, 100, 0, 0, -1, 40.0, -1, 0);
					Prostituka3D[slutID] = CreateDynamic3DTextLabel(string, -1, ProstitutkaInfo[slutID][PozX], ProstitutkaInfo[slutID][PozY], ProstitutkaInfo[slutID][PozZ], 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 30.0, -1, 0);
					ProstitutkaVrsi[slutID] = false;
					brojprostitutki++;
				}
			}
		} 
		printf("[MySQL]: Ucitano prostitutki - [%d].", brojprostitutki);
		cache_delete(slut_cache);
	}
	
	new Cache:zone_cache;
    zone_cache = mysql_query(SQL, "SELECT * FROM `zones`");
    if(zone_cache)
    {
    	new rows;
        cache_get_row_count(rows);
        if(rows)
        {
          	for(new i = 0; i < rows; i ++)
	        {
	            new id, string[350];
	            cache_get_value_name_int(i, "SQLID", id);
				if(id > 0)
				{
					TeritorijeInfo[id][SQLID] = id;
					cache_get_value_name_int(i, "Zauzeta", TeritorijeInfo[id][t_Zauzeta]);
				    cache_get_value_name_int(i, "Org_ID", TeritorijeInfo[id][t_Org_ID]);
				    cache_get_value_name_int(i, "Time", TeritorijeInfo[id][t_Time]);
				    cache_get_value_name(i, "Datum", TeritorijeInfo[id][t_Datum], 20);
					cache_get_value_name_float(i, "MaxX", TeritorijeInfo[id][t_MaxX]);
				    cache_get_value_name_float(i, "MinX", TeritorijeInfo[id][t_MinX]);
				    cache_get_value_name_float(i, "MaxY", TeritorijeInfo[id][t_MaxY]);
				    cache_get_value_name_float(i, "MinY", TeritorijeInfo[id][t_MinY]);
				    cache_get_value_name(i, "Boja", TeritorijeInfo[id][t_Boja], 24);
				    cache_get_value_name_float(i, "PickupPos_1", TeritorijeInfo[id][t_PickupPos][0]);
				    cache_get_value_name_float(i, "PickupPos_2", TeritorijeInfo[id][t_PickupPos][1]);
				    cache_get_value_name_float(i, "PickupPos_3", TeritorijeInfo[id][t_PickupPos][2]);
				    cache_get_value_name_int(i, "Novac", TeritorijeInfo[id][t_Novac]);
				    cache_get_value_name_int(i, "Droga", TeritorijeInfo[id][t_Droga]);
				    cache_get_value_name_int(i, "Mats", TeritorijeInfo[id][t_Mats]);
				
					TeritorijeInfo[id][t_Time] = 0;
		  			if(!TeritorijeInfo[id][t_Zauzeta])
					{
						TeritorijeInfo[id][t_Pickup] = CreateDynamicPickup(1313, 1, TeritorijeInfo[id][t_PickupPos][0], TeritorijeInfo[id][t_PickupPos][1], TeritorijeInfo[id][t_PickupPos][2], 0, 0);
						format(string, sizeof(string), "{6aaee9}[ TERITORIJA - %d ]\nVlasnistvo: {00FF00}Slobodna\n{FFFFFF}Ukoliko zelite da je zauzmete kucajte\n{6aaee9}[ /zauzmiteritoriju ]", id);
						TeritorijeInfo[id][t_Label] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, TeritorijeInfo[id][t_PickupPos][0], TeritorijeInfo[id][t_PickupPos][1], TeritorijeInfo[id][t_PickupPos][2], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
					}
					else if(TeritorijeInfo[id][t_Zauzeta])
					{
					    TeritorijeInfo[id][t_Pickup] = CreateDynamicPickup(1313, 1, TeritorijeInfo[id][t_PickupPos][0], TeritorijeInfo[id][t_PickupPos][1], TeritorijeInfo[id][t_PickupPos][2], 0, 0);
					    format(string, sizeof(string), "{6aaee9}[ TERITORIJA - %d ]\nVlasnistvo: {FF0000}%s\n{6aaee9}Zauzeta Datuma: {FF0000}%s\n{FFFFFF}Ukoliko zelite da je zauzmete kucajte\n{6aaee9}[ /zauzmiteritoriju ]", id, OrgInfo[TeritorijeInfo[id][t_Org_ID]][oIme], TeritorijeInfo[id][t_Datum]);
					    TeritorijeInfo[id][t_Label] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, TeritorijeInfo[id][t_PickupPos][0], TeritorijeInfo[id][t_PickupPos][1], TeritorijeInfo[id][t_PickupPos][2], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
					}
					TeritorijeInfo[id][t_ID] = GangZoneCreate(TeritorijeInfo[id][t_MinX], TeritorijeInfo[id][t_MinY], TeritorijeInfo[id][t_MaxX], TeritorijeInfo[id][t_MaxY]);
		            TeritorijeInfo[id][t_RectAngle] = CreateDynamicRectangle(TeritorijeInfo[id][t_MinX], TeritorijeInfo[id][t_MinY], TeritorijeInfo[id][t_MaxX], TeritorijeInfo[id][t_MaxY], -1, -1, -1);
					
					brojteritorija++;
				}
			}
		}
		printf("[MySQL]: Ucitano teritorija - [%d].", brojteritorija);
		cache_delete(zone_cache);
	}
	
	for(new askid = 1; askid < MAX_PITANJA; askid++)
	{
		PitanjaInfo[askid][pPostavio] = false;
		PitanjaInfo[askid][pID_Igraca] = -1;
		strmid(PitanjaInfo[askid][pIme_Igraca], "Prazno", 0, strlen("Prazno"), 32);
		strmid(PitanjaInfo[askid][pPitanje_Text], "Prazno", 0, strlen("Prazno"), 128);
	}
	
	// - > VOZILO SYSTEM
	for(new o; o < MAX_VEHICLES; o++)
	{
	    if(VoziloJeAvion(GetVehicleModel(o)) || VoziloJeBrod(GetVehicleModel(o)) || VoziloJeKamion(GetVehicleModel(o))) Fuel[o] = 80;
	    else if(VoziloJeMotor(GetVehicleModel(o))) Fuel[o] = 45;
	    else if(VoziloJeBicikla(GetVehicleModel(o)) || GetVehicleModel(o) == 538) Fuel[o] = 1000000;
	    else Fuel[o] = 45;
		if(!VoziloJeBicikla(GetVehicleModel(o)))
		{
			new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(o, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(o, 0, 0, alarm, doors, bonnet, boot, objective);
		}
	}
	
	// - > VOZILA
	vPD[0] = AddStaticVehicleEx(427,1538.6882,-1645.2087,6.0230,179.5825, 7, 1, 2400);
	vPD[1] = AddStaticVehicleEx(427,1534.7306,-1645.1282,6.0229,179.5305, 7, 1, 2400);
	vPD[2] = AddStaticVehicleEx(427,1530.4036,-1644.9128,6.0223,179.1483, 7, 1, 2400);
	vPD[3] = AddStaticVehicleEx(497,1567.1953,-1652.0129,28.5691,91.3563, 7, 1, 2400);
	vPD[4] = AddStaticVehicleEx(497,1566.7971,-1699.1725,28.6101,90.1537, 7, 1, 2400);
	vPD[5] = AddStaticVehicleEx(490,1545.1256,-1672.0309,6.0193,89.4180, 7, 1, 2400);
	vPD[6] = AddStaticVehicleEx(490,1545.1338,-1667.9683,6.0197,89.3328, 7, 1, 2400);
	vPD[7] = AddStaticVehicleEx(490,1545.2596,-1663.1925,6.0222,89.4995, 7, 1, 2400);
	vPD[8] = AddStaticVehicleEx(490,1545.3333,-1659.0734,6.0190,90.0221, 7, 1, 2400);
	vPD[9] = AddStaticVehicleEx(560, 1544.4110, -1684.4258, 5.5912, 90.0000, 7, 1, 2400);
	vPD[10] = AddStaticVehicleEx(560, 1544.5089, -1680.2559, 5.5912, 90.0000, 7, 1, 2400);
	vPD[11] = AddStaticVehicleEx(596,1601.1343,-1683.9175,5.6090,89.1157, 7, 1, 2400);
	vPD[12] = AddStaticVehicleEx(596,1601.1559,-1687.9652,5.6127,90.0072, 7, 1, 2400);
	vPD[13] = AddStaticVehicleEx(596,1601.1982,-1692.1107,5.6120,90.0076, 7, 1, 2400);
	vPD[14] = AddStaticVehicleEx(596,1601.2626,-1696.1111,5.6106,89.5482, 7, 1, 2400);
	vPD[15] = AddStaticVehicleEx(596,1601.3263,-1700.1370,5.6139,90.3342, 7, 1, 2400);
	vPD[16] = AddStaticVehicleEx(599,1595.5095,-1710.8765,6.0853,0.0460, 7, 1, 2400);
	vPD[17] = AddStaticVehicleEx(599,1591.5867,-1710.7509,6.0881,358.8911, 7, 1, 2400);
	vPD[18] = AddStaticVehicleEx(599,1587.5548,-1710.7286,6.0883,359.3585, 7, 1, 2400);
	vPD[19] = AddStaticVehicleEx(601,1585.0597,-1667.5365,5.6512,269.9910, 7, 1, 2400);
	vPD[20] = AddStaticVehicleEx(601,1585.5186,-1671.6428,5.6524,268.9286, 7, 1, 2400);
	vPD[21] = AddStaticVehicleEx(523,1570.1533,-1710.6877,5.4580,1.3724, 7, 1, 2400);
	vPD[22] = AddStaticVehicleEx(523,1574.3413,-1710.6659,5.4626,358.3058, 7, 1, 2400);
	vPD[23] = AddStaticVehicleEx(523,1578.6067,-1710.8862,5.4584,359.8254, 7, 1, 2400);
	vPD[24] = AddStaticVehicleEx(523,1583.2236,-1710.9558,5.4621,0.0000, 7, 1, 2400);
	vPD[25] = AddStaticVehicleEx(599,612.3354,-597.1976,17.4192,272.1400, 7, 1, 2400);
	vPD[26] = AddStaticVehicleEx(599,612.3033,-601.6028,17.4313,270.5497, 7, 1, 2400);
	vPD[27] = AddStaticVehicleEx(598,622.2867,-606.0587,16.8672,270.0583, 7, 1, 2400);
	vPD[28] = AddStaticVehicleEx(598,622.4641,-610.5770,16.8525,270.4402, 7, 1, 2400);
	vPD[29] = AddStaticVehicleEx(523,613.7594,-610.6083,16.7953,0.0000, 7, 1, 2400);
	vPD[30] = AddStaticVehicleEx(523,611.4824,-610.5571,16.7980,360.0000, 7, 1, 2400);
	vPD[31] = AddStaticVehicleEx(523,616.0513,-610.5749,16.7739,359.4691, 7, 1, 2400);
	vPD[32] = AddStaticVehicleEx(430,2599.3989,-2240.9114,-0.2547,181.4817, 7, 1, 2400);
	vPD[33] = AddStaticVehicleEx(430,2607.0974,-2240.7192,-0.3377,182.0059, 7, 1, 2400);
	vPD[34] = AddStaticVehicleEx(430,2592.0117,-2239.8330,-0.4032,180.9654, 7, 1, 2400);
	vPD[35] = AddStaticVehicleEx(430,2582.7175,-2238.7964,-0.2700,181.1046, 7, 1, 2400);
	vPD[36] = AddStaticVehicleEx(560, 1530.0009, -1683.9594, 5.5912, -90.0000, 7, 1, 2400);
	vPD[37] = AddStaticVehicleEx(560, 1544.6978, -1676.3193, 5.5912, 90.0000, 7, 1, 2400);
	vPD[38] = AddStaticVehicleEx(560, 1529.8595, -1687.9376, 5.5912, -90.0000, 7, 1, 2400);
	
	for(new i = 0; i < sizeof(vPD); i++)
    {
    	CreateDynamic3DTextLabel("[ POLICIJA ]", 0x33CCFFAA, 0, 0, 0, 15.0,_,vPD[i],_, 0, 0,_,_);
    }
    
    vSAJ[0] = AddStaticVehicleEx(560,1252.9414,-1674.3228,13.2650,0.4426,54,54,2400); 
	vSAJ[1] = AddStaticVehicleEx(560,1248.5710,-1674.3132,13.2648,358.9168,54,54,2400); 
	vSAJ[2] = AddStaticVehicleEx(560,1244.3085,-1674.1621,13.2649,356.1086,54,54,2400); 
	vSAJ[3] = AddStaticVehicleEx(560,1240.3619,-1673.9458,13.2653,355.8913,54,54,2400); 
	vSAJ[4] = AddStaticVehicleEx(560,1236.3419,-1673.7291,13.2648,353.7588,54,54,2400); 
	vSAJ[5] = AddStaticVehicleEx(560,1232.3875,-1673.7262,13.2605,355.8202,54,54,2400); 
	vSAJ[6] = AddStaticVehicleEx(411,1228.3446,-1673.4441,13.2771,354.6268,54,54,2400); 
	vSAJ[7] = AddStaticVehicleEx(411,1224.0156,-1673.2201,13.2771,354.9702,54,54,2400); 
	vSAJ[8] = AddStaticVehicleEx(411,1219.9271,-1673.1151,13.2771,355.6108,54,54,2400); 
	vSAJ[9] = AddStaticVehicleEx(490,1217.2340,-1663.6533,13.6769,268.1243,54,54,2400); 
	vSAJ[10] = AddStaticVehicleEx(490,1217.3638,-1658.9020,13.6785,267.3188,54,54,2400); 
	vSAJ[11] = AddStaticVehicleEx(490,1217.7095,-1654.2429,13.6784,265.7765,54,54,2400); 
	vSAJ[12] = AddStaticVehicleEx(528,1218.1030,-1649.8479,13.5943,262.7657,54,54,2400); 
	vSAJ[13] = AddStaticVehicleEx(528,1218.6439,-1644.9413,13.5935,263.8522,54,54,2400); 
	vSAJ[14] = AddStaticVehicleEx(522,1261.1028,-1675.3817,13.1200,358.8566,54,54,2400); 
	vSAJ[15] = AddStaticVehicleEx(522,1258.9507,-1675.1980,13.1156,3.0232,54,54,2400); 
	vSAJ[16] = AddStaticVehicleEx(522,1263.6710,-1675.3688,13.1145,353.7964,54,54,2400);
	vSAJ[17] = AddStaticVehicleEx(522,1266.5713,-1675.5945,13.1202,351.6965,54,54,2400); 
    for(new i = 0; i < sizeof(vSAJ); i++)
    {
    	CreateDynamic3DTextLabel("[ SAJ ]", 0x33CCFFAA, 0, 0, 0, 15.0,_,vSAJ[i],_, 0, 0,_,_);
    }
    
    vGSF[0] = AddStaticVehicleEx(468,2497.1035,-1686.8821,13.1526,9.9271,86,86,2400);
	vGSF[1] = AddStaticVehicleEx(468,2498.6887,-1686.5801,13.1462,11.7520,86,86,2400);
	vGSF[2] = AddStaticVehicleEx(468,2500.2888,-1686.2477,13.1522,12.6925,86,86,2400);
	vGSF[3] = AddStaticVehicleEx(482,2501.0195,-1657.0054,13.5245,65.1481,86,86,2400);
	vGSF[4] = AddStaticVehicleEx(492,2508.2463,-1671.4452,13.0880,347.9738,86,86,2400);
	vGSF[5] = AddStaticVehicleEx(492,2435.6328,-1675.6285,13.3965,358.4603,86,86,2400);
	vGSF[6] = AddStaticVehicleEx(567,2430.9690,-1675.6989,13.4544,358.5824,86,86,2400);
	vGSF[7] = AddStaticVehicleEx(492,2426.7175,-1675.5388,13.3917,0.2378,86,86,2400);
	vGSF[8] = AddStaticVehicleEx(567,2485.2747,-1655.2722,13.1957,89.6859,86,86,2400);
	vGSF[9] = AddStaticVehicleEx(567,2481.3408,-1681.9795,13.2031,260.4550,86,86,2400);
	vGSF[10] = AddStaticVehicleEx(481,2525.7231,-1669.8816,14.6516,356.7262,86,86,2400);
	vGSF[11] = AddStaticVehicleEx(481,2527.1160,-1669.9303,14.6863,355.1009,86,86,2400);
	vGSF[12] = AddStaticVehicleEx(481,2528.5144,-1669.9213,14.6864,357.6727,86,86,2400);
	
	for(new i = 0; i < sizeof(vGSF); i++)
    {
    	CreateDynamic3DTextLabel("[ GROVE STREET FAMILIES ]", 0x349E06AA, 0, 0, 0, 15.0,_,vGSF[i],_, 0, 0,_,_);
    }
    
    vBallas[0] = AddStaticVehicleEx(566,1948.1307,-1087.1134,24.7721,82.2158,85,85,2400);
	vBallas[1] = AddStaticVehicleEx(567,1939.0995,-1085.8052,24.6658,82.8507,85,85,2400);
	vBallas[2] = AddStaticVehicleEx(517,1929.3154,-1084.9424,24.4123,85.4487,85,85,2400);
	vBallas[3] = AddStaticVehicleEx(566,1919.5079,-1084.5223,24.1906,87.7232,85,85,2400);
	vBallas[4] = AddStaticVehicleEx(468,1908.6960,-1059.8097,23.7937,271.7470,85,85,2400);
	vBallas[5] = AddStaticVehicleEx(468,1908.7732,-1062.2471,23.7952,271.6068,85,85,2400);
	vBallas[6] = AddStaticVehicleEx(468,1908.7839,-1064.6846,23.8398,269.7188,85,85,2400);
	vBallas[7] = AddStaticVehicleEx(481,1924.8315,-1065.1161,23.7048,86.6958,85,85,2400);
	vBallas[8] = AddStaticVehicleEx(481,1924.9211,-1063.0854,23.6940,86.4694,85,85,2400);
	vBallas[9] = AddStaticVehicleEx(481,1925.1073,-1060.9297,23.7013,85.5328,85,85,2400);
	vBallas[10] = AddStaticVehicleEx(482,1909.1301,-1083.8706,24.3299,86.4271,85,85,2400);
	
	for(new i = 0; i < sizeof(vBallas); i++)
    {
    	CreateDynamic3DTextLabel("[ BALLAS ]", 0xD1345BAA, 0, 0, 0, 15.0,_,vBallas[i],_, 0, 0,_,_);
    }
    
    vMS13[0] = AddStaticVehicleEx(567,2306.4998,-1931.0321,13.4438,358.5298,6,6,2400);
	vMS13[1] = AddStaticVehicleEx(567,2306.6638,-1910.5645,13.4662,180.9244,6,6,2400);
	vMS13[2] = AddStaticVehicleEx(468,2299.8464,-1933.4442,13.2521,95.1958,6,6,2400);
	vMS13[3] = AddStaticVehicleEx(468,2299.9773,-1931.1653,13.2558,89.6446,6,6,2400);
	vMS13[4] = AddStaticVehicleEx(468,2299.9961,-1928.9294,13.2595,89.4610,6,6,2400);
	vMS13[5] = AddStaticVehicleEx(576,2300.4233,-1915.5052,13.2147,178.5657,6,6,2400);
	vMS13[6] = AddStaticVehicleEx(576,2289.1589,-1912.9038,13.1562,266.3071,6,6,2400);
	vMS13[7] = AddStaticVehicleEx(576,2290.4783,-1936.6965,13.1584,270.9853,6,6,2400);
	
	for(new i = 0; i < sizeof(vMS13); i++)
    {
    	CreateDynamic3DTextLabel("[ MARA SALVATRUCHA 13 ]", 0xF3FF02AA, 0, 0, 0, 15.0,_,vMS13[i],_, 0, 0,_,_);
    }
    
    vBDT[0] = AddStaticVehicleEx(560,1254.9799,-804.6835,83.8477,179.1335,0,0,2400);
	vBDT[1] = AddStaticVehicleEx(560,1248.9850,-804.5305,83.8478,179.5021,0,0,2400);
	vBDT[2] = AddStaticVehicleEx(560,1242.9395,-804.5250,83.8476,181.0672,0,0,2400);
	vBDT[3] = AddStaticVehicleEx(579,1207.1425,-813.2472,87.2369,342.9764,0,0,2400);
	vBDT[4] = AddStaticVehicleEx(579,1214.3260,-831.2048,84.9551,57.1136,0,0,2400);
	vBDT[5] = AddStaticVehicleEx(482,1232.0984,-836.7262,84.0964,96.5101,0,0,2400);
	vBDT[6] = AddStaticVehicleEx(482,1245.7867,-829.7741,84.0748,141.7326,0,0,2400);
	vBDT[7] = AddStaticVehicleEx(409,1228.0399,-811.6204,87.4253,272.0457,0,0,2400);
	vBDT[8] = AddStaticVehicleEx(522,1270.4773,-827.3653,82.7072,286.3281,0,0,2400);
	vBDT[9] = AddStaticVehicleEx(522,1270.6080,-830.5942,82.7094,284.0607,0,0,2400);
	vBDT[10] = AddStaticVehicleEx(522,1292.7186,-830.6199,82.7100,66.2416,0,0,2400);
	vBDT[11] = AddStaticVehicleEx(522,1293.0371,-827.6884,82.7120,68.1789,0,0,2400);
	vBDT[12] = AddStaticVehicleEx(487,1291.3033,-787.6732,96.6328,0.0287,0,0,2400);
	
	for(new i = 0; i < sizeof(vBDT); i++)
    {
    	CreateDynamic3DTextLabel("[ BLACK DRAGON TRIADS ]", 0xC0C0C0AA, 0, 0, 0, 15.0,_,vBDT[i],_, 0, 0,_,_);
    }

    vLCN[0] = AddStaticVehicleEx(482,1220.6885,-2554.2180,5.9145,89.4016,3,3,2400); 
	vLCN[1] = AddStaticVehicleEx(482,1220.6333,-2559.1306,5.9130,85.6586,3,3,2400); 
	vLCN[2] = AddStaticVehicleEx(482,1220.5033,-2563.8835,5.9134,86.2948,3,3,2400); 
	vLCN[3] = AddStaticVehicleEx(482,1220.4138,-2568.7617,5.9132,85.1444,3,3,2400); 
	vLCN[4] = AddStaticVehicleEx(400,1219.7875,-2573.1755,5.8879,84.3494,3,3,2400); 
	vLCN[5] = AddStaticVehicleEx(400,1219.4264,-2577.7314,5.8878,85.6965,3,3,2400); 
	vLCN[6] = AddStaticVehicleEx(400,1219.1628,-2582.2893,5.8879,87.8962,3,3,2400); 
	vLCN[7] = AddStaticVehicleEx(522,1202.7925,-2582.1335,5.3658,270.8025,3,3,2400);
	vLCN[8] = AddStaticVehicleEx(522,1202.8453,-2579.6216,5.3655,268.7294,3,3,2400); 
	vLCN[9] = AddStaticVehicleEx(522,1202.9219,-2577.2407,5.3665,269.2092,3,3,2400);
	vLCN[10] = AddStaticVehicleEx(560,1204.0110,-2573.8674,5.5004,269.8954,3,3,2400);
	vLCN[11] = AddStaticVehicleEx(560,1203.9878,-2569.4597,5.5005,268.1323,3,3,2400); 
	vLCN[12] = AddStaticVehicleEx(560,1203.9971,-2565.0002,5.5005,268.7499,3,3,2400); 
	vLCN[13] = AddStaticVehicleEx(445,1204.2593,-2560.3909,5.6705,267.6399,3,3,2400); 
	vLCN[14] = AddStaticVehicleEx(445,1204.4261,-2556.0278,5.6705,267.5789,3,3,2400); 
	vLCN[15] = AddStaticVehicleEx(445,1204.4152,-2551.8193,5.6705,267.6464,3,3,2400);

	for(new i = 0; i < sizeof(vLCN); i++)
    {
    	CreateDynamic3DTextLabel("[ LA COSA NOSTRA ]", 0xdfc933AA, 0, 0, 0, 15.0,_,vLCN[i],_, 0, 0,_,_);
    }

	return 1;
}

public OnGameModeExit()
{
    mysql_tquery(SQL, "UPDATE `users` SET `isonline` = '0'");
	foreach(new i: Player)
	{
	    KillTimer(LoginTimer[i]);
	    KillTimer(PlayerTimer[i]);
	    KillTimer(Radar_Timer[i]);
		KillTimer(Zauzimanje_Timer[i]);
	}
	for(new vehid = 0; vehid < MAX_VOZILA; vehid++)
	{
	    if(VoziloInfo[vehid][SQLID] > 0)
		{
			DestroyVehicle(VoziloInfo[vehid][vID]);
			DestroyDynamic3DTextLabel(VoziloInfo[vehid][v3DText]);
		}
	}
	for(new org = 1; org < sizeof(OrgInfo); org++)
	{
		DestroyDynamic3DTextLabel(Org3D[org]); DestroyDynamic3DTextLabel(OrgIzlaz3D[org]);
		DestroyDynamicPickup(OrgPickup[org]); DestroyDynamicPickup(OrgIzlazPickup[org]);
		if(OrgInfo[org][oSef] == 1)
		{
			DestroyDynamic3DTextLabel(OrgSefLabel[org]); DestroyDynamicPickup(OrgSefPickup[org]);
		}
	}
	for(new ra_id = 1; ra_id < sizeof(RadarInfo); ra_id++)
	{
		DestroyDynamic3DTextLabel(Radar_3D[ra_id]);
		DestroyDynamicObject(RadarInfo[ra_id][raObjekat]);
	}
	for(new t_id = 1; t_id < MAX_TERITORIJA; t_id++)
	{
		GangZoneDestroy(TeritorijeInfo[t_id][t_ID]);
		DestroyDynamic3DTextLabel(TeritorijeInfo[t_id][t_Label]);
		DestroyDynamicPickup(TeritorijeInfo[t_id][t_Pickup]);
	}
	DestroyActor(AktorDiler);
	mysql_close(SQL);
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	if(Ulogovan[playerid] == 1)
	{
	   SpawnIgraca(playerid); SpawnPlayer(playerid);
	}
	return 1;
}

public OnPlayerConnect(playerid)
{
    CorrectPassword[playerid] = false;
    IncorrectPassword[playerid] = 0;
    Ulogovan[playerid] = 0;
    InputPassword[playerid] = false;
    InputMail[playerid] = 0;
    ChooseCountry[playerid] = 0;
    InputAge[playerid] = 0;
    InputSex[playerid] = 0;
	DobioPay[playerid] = 0;
	AdminDuty[playerid] = 0;
	JetpackUsed[playerid] = 0;
	KillTimer(LoginTimer[playerid]);
	AdminVozilo[playerid] = -1;
	KomeSalje[playerid] = -1;
 	eData[playerid] = -1;
 	PuniGorivo[playerid] = false;
 	Port_Lokacija[playerid] = -1;
 	Lociranje[playerid] = 0;
 	RentEdit[playerid] = -1;
 	IzmenaFirme[playerid] = -1;
 	Zavezan[playerid] = 0;
 	SNaocare[playerid] = false;
 	TelefonRazgovor[playerid] = -1;
 	TelefonZvoni[playerid] = false;
 	AttachObjectRemove(playerid);
 	sastavljatiket[playerid] = false;
 	tikettime[playerid] = 0;
 	RadioAktiviran[playerid] = 0;
 	CijenaProdaje[playerid] = 0;
 	KomeProdaje[playerid] = -1;
 	PonudioIgrac[playerid] = -1;
	UsaoAutoProdaja[playerid] = -1;
	UsaoTuningGaraza[playerid] = 0;
    Koristio_Uslugu[playerid] = 0;
    OZSpam[playerid] = 0;
    Koristio_Megafon[playerid] = 0;
	Slot_Pitanja[playerid] = -1;
	IzabraniAskQ[playerid] = -1;
	VehUlazi[playerid] = 0;
	PozvanOrg[playerid] = 0;
	StavljeneLisice[playerid] = 0;
	Trazeni_Level[playerid] = 0;
	Tazer[playerid] = 0;
	IgracTazovan[playerid] = 0;
	PolicijaDuznost[playerid] = 0;
	KillTimer(VuciTimer[playerid]);
	VuceIgraca[playerid] = 0;
	KaznuNapisao[playerid] = -1;
	CenaKazne[playerid] = 0;
	Pojas[playerid] = 0;
	PljackaBanku[playerid] = 0;
	PljackaBankuVrijeme[playerid] = 0;
    PljackaZlataru[playerid] = 0;
	PljackaZlataruVrijeme[playerid] = 0;
	gPlayerUsingLoopingAnim[playerid] = false;
	gPlayerAnimLibsPreloaded[playerid] = 0;
	KosacTraveCP[playerid] = 0;
	Kosac_Vozilo[playerid] = -1;
	Uber_Vozilo[playerid] = -1;
	Polaganje_Vozilo[playerid] = -1;
	Polaganje_Greske[playerid] = 0;
	Polaganje_CP[playerid] = 0;
	Job_Vehicle[playerid][jveh_ID] = -1;
 	Job_Vehicle[playerid][jveh_Created] = false;
 	PosaoUniforma[playerid] = 0;
 	PosaoUberCP[playerid] = 0;
 	Pilot_Vozilo[playerid] = -1;
 	PilotCP[playerid] = 0;
 	Masinovodja_Vozilo[playerid] = -1;
 	Masinovodja_CP[playerid] = 0;
 	NoviRekord();
 	Radar_Promjena[playerid] = -1;
	Radar_Uhvacen[playerid] = 0;
	Ima_Radar_TD[playerid] = 0;
	SvercMaterijala[playerid] = 0;
	KoristiDrogu[playerid] = 0;
	KillTimer(Zauzimanje_Timer[playerid]);
	Zauzimanje_ID[playerid] = -1;
	Zauzimanje_CP[playerid] = 0;
	Zauzimanje_Time[playerid] = 0;
	Kreira_Teritoriju_ID[playerid] = -1;
	Edituje_Teritoriju[playerid] = -1;
	Kreira_Teritoriju_IDID[playerid] = -1;
	KreiranjaPos[playerid][0] = 0.0;
	KreiranjaPos[playerid][1] = 0.0;
	KreiranjaPos[playerid][2] = 0.0;
	KreiranjaPos[playerid][3] = 0.0;
	
	strmid(ZlocinInfo[playerid][zPrijavio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[playerid][zPocinio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[playerid][zZlocin], "Nema", 0, strlen("Nema"), 255);
	
	SetTimerEx("RekordTimer", 200, true, "i", playerid);
	
	for(new i = 0; i < MAX_ZADATAKA; i++)
    {
        QuestInfo[playerid][quest_done][i] = false;
    }
	
	// - > Ucitavanje Revove Objekata
	#include "maps\Main_Locations_Remove"
	#include "maps\Factions_Remove"
	#include "maps\Jobs_Remove"
	
	// - > Player Textdrawovi
	BankaTD[playerid] = CreatePlayerTextDraw(playerid, 485.666839, 437.970336, "00000000$");
	PlayerTextDrawLetterSize(playerid, BankaTD[playerid], 0.095333, 0.641777);
	PlayerTextDrawAlignment(playerid, BankaTD[playerid], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, BankaTD[playerid], -2139062017);
	PlayerTextDrawSetShadow(playerid, BankaTD[playerid], 0);
	PlayerTextDrawSetOutline(playerid, BankaTD[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, BankaTD[playerid], 51);
	PlayerTextDrawFont(playerid, BankaTD[playerid], TEXT_DRAW_FONT_2);
	PlayerTextDrawSetProportional(playerid, BankaTD[playerid], 1);

	ZlatoTD[playerid] = CreatePlayerTextDraw(playerid, 544.333312, 437.725860, "00000000G");
	PlayerTextDrawLetterSize(playerid, ZlatoTD[playerid], 0.095333, 0.641777);
	PlayerTextDrawAlignment(playerid, ZlatoTD[playerid], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, ZlatoTD[playerid], -2139062017);
	PlayerTextDrawSetShadow(playerid, ZlatoTD[playerid], 0);
	PlayerTextDrawSetOutline(playerid, ZlatoTD[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, ZlatoTD[playerid], 51);
	PlayerTextDrawFont(playerid, ZlatoTD[playerid], TEXT_DRAW_FONT_2);
	PlayerTextDrawSetProportional(playerid, ZlatoTD[playerid], 1);
	
	// - > Login Textdrawovi
	LoginTD[playerid][0] = CreatePlayerTextDraw(playerid, 330.6667, 295.2074, ""); 
	PlayerTextDrawTextSize(playerid, LoginTD[playerid][0], 93.0000, 98.0000);
	PlayerTextDrawAlignment(playerid, LoginTD[playerid][0], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, LoginTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, LoginTD[playerid][0], TEXT_DRAW_FONT_MODEL_PREVIEW);
	PlayerTextDrawSetProportional(playerid, LoginTD[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][0], 0x00000000000);
	PlayerTextDrawSetShadow(playerid, LoginTD[playerid][0], 0);
	PlayerTextDrawSetPreviewModel(playerid, LoginTD[playerid][0], 623);
	PlayerTextDrawSetPreviewRot(playerid, LoginTD[playerid][0], 0.0000, -15.0000, -30.0000, 1.0000);
	
	LoginTD[playerid][1] = CreatePlayerTextDraw(playerid, 273.3332, 332.6964, "V"); 
	PlayerTextDrawLetterSize(playerid, LoginTD[playerid][1], 1.1553, 4.4995);
	PlayerTextDrawAlignment(playerid, LoginTD[playerid][1], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, LoginTD[playerid][1], 997448959);
	PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][1], 255);
	PlayerTextDrawFont(playerid, LoginTD[playerid][1], TEXT_DRAW_FONT_1);
	PlayerTextDrawSetProportional(playerid, LoginTD[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, LoginTD[playerid][1], 0);

	LoginTD[playerid][2] = CreatePlayerTextDraw(playerid, 290.3332, 327.7185, "-"); 
	PlayerTextDrawLetterSize(playerid, LoginTD[playerid][2], 3.1983, 2.8320);
	PlayerTextDrawAlignment(playerid, LoginTD[playerid][2], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, LoginTD[playerid][2], 997448959);
	PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][2], 255);
	PlayerTextDrawFont(playerid, LoginTD[playerid][2], TEXT_DRAW_FONT_1);
	PlayerTextDrawSetProportional(playerid, LoginTD[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, LoginTD[playerid][2], 0);

	LoginTD[playerid][3] = CreatePlayerTextDraw(playerid, 296.6666, 343.8963, "IBE"); 
	PlayerTextDrawLetterSize(playerid, LoginTD[playerid][3], 0.6693, 2.6287);
	PlayerTextDrawAlignment(playerid, LoginTD[playerid][3], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, LoginTD[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][3], 255);
	PlayerTextDrawFont(playerid, LoginTD[playerid][3], TEXT_DRAW_FONT_2);
	PlayerTextDrawSetProportional(playerid, LoginTD[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, LoginTD[playerid][3], 0);

	LoginTD[playerid][4] = CreatePlayerTextDraw(playerid, 211.6667, 272.3925, ""); 
	PlayerTextDrawTextSize(playerid, LoginTD[playerid][4], 90.0000, 90.0000);
	PlayerTextDrawAlignment(playerid, LoginTD[playerid][4], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, LoginTD[playerid][4], 255);
	PlayerTextDrawFont(playerid, LoginTD[playerid][4], TEXT_DRAW_FONT_MODEL_PREVIEW);
	PlayerTextDrawSetProportional(playerid, LoginTD[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, LoginTD[playerid][4], 0x00000000000);
	PlayerTextDrawSetShadow(playerid, LoginTD[playerid][4], 0);
	PlayerTextDrawSetPreviewModel(playerid, LoginTD[playerid][4], 519);
	PlayerTextDrawSetPreviewRot(playerid, LoginTD[playerid][4], -30.0000, -15.0000, -60.0000, 1.0000);
	PlayerTextDrawSetPreviewVehCol(playerid, LoginTD[playerid][4], 1, 1);
	
	// - > Brzinomer
	BrzinaTD[playerid][0] = CreatePlayerTextDraw(playerid, 405.333312, 404.859252, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, BrzinaTD[playerid][0], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, BrzinaTD[playerid][0], 96.333374, 17.007415);
	PlayerTextDrawAlignment(playerid, BrzinaTD[playerid][0], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, BrzinaTD[playerid][0], 255);
	PlayerTextDrawSetShadow(playerid, BrzinaTD[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, BrzinaTD[playerid][0], 0);
	PlayerTextDrawFont(playerid, BrzinaTD[playerid][0], TEXT_DRAW_FONT_SPRITE_DRAW);

	BrzinaTD[playerid][1] = CreatePlayerTextDraw(playerid, 394.999816, 401.540863, "/");
	PlayerTextDrawLetterSize(playerid, BrzinaTD[playerid][1], 1.048333, 2.176592);
	PlayerTextDrawAlignment(playerid, BrzinaTD[playerid][1], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, BrzinaTD[playerid][1], 255);
	PlayerTextDrawSetShadow(playerid, BrzinaTD[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, BrzinaTD[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, BrzinaTD[playerid][1], 51);
	PlayerTextDrawFont(playerid, BrzinaTD[playerid][1], TEXT_DRAW_FONT_1);
	PlayerTextDrawSetProportional(playerid, BrzinaTD[playerid][1], 1);

	BrzinaTD[playerid][2] = CreatePlayerTextDraw(playerid, 409.333343, 413.570373, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, BrzinaTD[playerid][2], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, BrzinaTD[playerid][2], -7.666656, 7.881499);
	PlayerTextDrawAlignment(playerid, BrzinaTD[playerid][2], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, BrzinaTD[playerid][2], 255);
	PlayerTextDrawSetShadow(playerid, BrzinaTD[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, BrzinaTD[playerid][2], 0);
	PlayerTextDrawFont(playerid, BrzinaTD[playerid][2], TEXT_DRAW_FONT_SPRITE_DRAW);

	BrzinaTD[playerid][3] = CreatePlayerTextDraw(playerid, 496.333282, 401.296386, "\\");
	PlayerTextDrawLetterSize(playerid, BrzinaTD[playerid][3], 1.048333, 2.176592);
	PlayerTextDrawAlignment(playerid, BrzinaTD[playerid][3], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, BrzinaTD[playerid][3], 255);
	PlayerTextDrawSetShadow(playerid, BrzinaTD[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, BrzinaTD[playerid][3], 1);
	PlayerTextDrawBackgroundColor(playerid, BrzinaTD[playerid][3], 51);
	PlayerTextDrawFont(playerid, BrzinaTD[playerid][3], TEXT_DRAW_FONT_1);
	PlayerTextDrawSetProportional(playerid, BrzinaTD[playerid][3], 1);

	BrzinaTD[playerid][4] = CreatePlayerTextDraw(playerid, 499.000000, 411.081481, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, BrzinaTD[playerid][4], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, BrzinaTD[playerid][4], 5.000000, 9.955566);
	PlayerTextDrawAlignment(playerid, BrzinaTD[playerid][4], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, BrzinaTD[playerid][4], 255);
	PlayerTextDrawSetShadow(playerid, BrzinaTD[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, BrzinaTD[playerid][4], 0);
	PlayerTextDrawFont(playerid, BrzinaTD[playerid][4], TEXT_DRAW_FONT_SPRITE_DRAW);

	BrzinaTD[playerid][5] = CreatePlayerTextDraw(playerid, 399.333221, 404.859283, "/");
	PlayerTextDrawLetterSize(playerid, BrzinaTD[playerid][5], 0.626666, 1.533628);
	PlayerTextDrawAlignment(playerid, BrzinaTD[playerid][5], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, BrzinaTD[playerid][5], 997448959);
	PlayerTextDrawSetShadow(playerid, BrzinaTD[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, BrzinaTD[playerid][5], 1);
	PlayerTextDrawBackgroundColor(playerid, BrzinaTD[playerid][5], 51);
	PlayerTextDrawFont(playerid, BrzinaTD[playerid][5], TEXT_DRAW_FONT_1);
	PlayerTextDrawSetProportional(playerid, BrzinaTD[playerid][5], 1);

	BrzinaTD[playerid][6] = CreatePlayerTextDraw(playerid, 497.666656, 404.614807, "\\");
	PlayerTextDrawLetterSize(playerid, BrzinaTD[playerid][6], 0.626666, 1.533628);
	PlayerTextDrawAlignment(playerid, BrzinaTD[playerid][6], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, BrzinaTD[playerid][6], 997448959);
	PlayerTextDrawSetShadow(playerid, BrzinaTD[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, BrzinaTD[playerid][6], 1);
	PlayerTextDrawBackgroundColor(playerid, BrzinaTD[playerid][6], 51);
	PlayerTextDrawFont(playerid, BrzinaTD[playerid][6], TEXT_DRAW_FONT_1);
	PlayerTextDrawSetProportional(playerid, BrzinaTD[playerid][6], 1);

	BrzinaTD[playerid][7] = CreatePlayerTextDraw(playerid, 409.666442, 409.837097, "BRZINA:");
	PlayerTextDrawLetterSize(playerid, BrzinaTD[playerid][7], 0.105999, 0.687407);
	PlayerTextDrawAlignment(playerid, BrzinaTD[playerid][7], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, BrzinaTD[playerid][7], -2139062017);
	PlayerTextDrawSetShadow(playerid, BrzinaTD[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, BrzinaTD[playerid][7], 1);
	PlayerTextDrawBackgroundColor(playerid, BrzinaTD[playerid][7], 51);
	PlayerTextDrawFont(playerid, BrzinaTD[playerid][7], TEXT_DRAW_FONT_2);
	PlayerTextDrawSetProportional(playerid, BrzinaTD[playerid][7], 1);

	BrzinaTD[playerid][8] = CreatePlayerTextDraw(playerid, 428.999938, 410.177825, "100KM/H");
	PlayerTextDrawLetterSize(playerid, BrzinaTD[playerid][8], 0.130331, 0.703998);
	PlayerTextDrawAlignment(playerid, BrzinaTD[playerid][8], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, BrzinaTD[playerid][8], -1);
	PlayerTextDrawSetShadow(playerid, BrzinaTD[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, BrzinaTD[playerid][8], 1);
	PlayerTextDrawBackgroundColor(playerid, BrzinaTD[playerid][8], 51);
	PlayerTextDrawFont(playerid, BrzinaTD[playerid][8], TEXT_DRAW_FONT_3);
	PlayerTextDrawSetProportional(playerid, BrzinaTD[playerid][8], 1);

	BrzinaTD[playerid][9] = CreatePlayerTextDraw(playerid, 459.333343, 410.007385, "GORIVO:");
	PlayerTextDrawLetterSize(playerid, BrzinaTD[playerid][9], 0.103332, 0.699850);
	PlayerTextDrawAlignment(playerid, BrzinaTD[playerid][9], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, BrzinaTD[playerid][9], -2139062017);
	PlayerTextDrawSetShadow(playerid, BrzinaTD[playerid][9], 0);
	PlayerTextDrawSetOutline(playerid, BrzinaTD[playerid][9], 1);
	PlayerTextDrawBackgroundColor(playerid, BrzinaTD[playerid][9], 51);
	PlayerTextDrawFont(playerid, BrzinaTD[playerid][9], TEXT_DRAW_FONT_2);
	PlayerTextDrawSetProportional(playerid, BrzinaTD[playerid][9], 1);

	BrzinaTD[playerid][10] = CreatePlayerTextDraw(playerid, 479.666625, 409.933410, "100L");
	PlayerTextDrawLetterSize(playerid, BrzinaTD[playerid][10], 0.147666, 0.716443);
	PlayerTextDrawAlignment(playerid, BrzinaTD[playerid][10], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid, BrzinaTD[playerid][10], -1);
	PlayerTextDrawSetShadow(playerid, BrzinaTD[playerid][10], 0);
	PlayerTextDrawSetOutline(playerid, BrzinaTD[playerid][10], 1);
	PlayerTextDrawBackgroundColor(playerid, BrzinaTD[playerid][10], 51);
	PlayerTextDrawFont(playerid, BrzinaTD[playerid][10], TEXT_DRAW_FONT_3);
	PlayerTextDrawSetProportional(playerid, BrzinaTD[playerid][10], 1);

	BrzinaTD[playerid][11] = CreatePlayerTextDraw(playerid, 422.666625, 367.111083, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, BrzinaTD[playerid][11], 0.000000, -0.066665);
	PlayerTextDrawTextSize(playerid, BrzinaTD[playerid][11], 50.999988, 58.903686);
	PlayerTextDrawAlignment(playerid,BrzinaTD[playerid][11], TEXT_DRAW_ALIGN_LEFT);
	PlayerTextDrawColor(playerid,BrzinaTD[playerid][11], -1);
	PlayerTextDrawBackgroundColor(playerid,BrzinaTD[playerid][11], 0x00000000000);
	PlayerTextDrawUseBox(playerid,BrzinaTD[playerid][11], true);
	PlayerTextDrawBoxColor(playerid,BrzinaTD[playerid][11], 0);
	PlayerTextDrawSetShadow(playerid,BrzinaTD[playerid][11], 0);
	PlayerTextDrawSetOutline(playerid,BrzinaTD[playerid][11], 0);
	PlayerTextDrawFont(playerid,BrzinaTD[playerid][11], TEXT_DRAW_FONT_MODEL_PREVIEW);
	PlayerTextDrawSetPreviewModel(playerid,BrzinaTD[playerid][11], 560);
	PlayerTextDrawSetPreviewRot(playerid,BrzinaTD[playerid][11], 0.000000, 0.000000, 90.000000, 1.000000);

    // - > MySQL Check
    new q[144];
	mysql_format(SQL, q, sizeof(q), "SELECT * FROM `users` WHERE `Ime` = '%e'", ReturnPlayerName(playerid));
	mysql_tquery(SQL, q, "SQL_PlayerCheck", "i", playerid);
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	if(Ulogovan[playerid] == 1)
	{
    	Ulogovan[playerid] = 0;
    	mysql_tqueryEx(SQL, "UPDATE `users` SET `isonline` = '0' WHERE `SQLID` = '%d'", PI[playerid][SQLID]);
	}
	UnistiTDs(playerid);
	PlayerTextDrawDestroy(playerid, BankaTD[playerid]);
	PlayerTextDrawDestroy(playerid, ZlatoTD[playerid]);
	PlayerTextDrawDestroy(playerid, LoginTD[playerid][0]);
	PlayerTextDrawDestroy(playerid, LoginTD[playerid][1]);
	PlayerTextDrawDestroy(playerid, LoginTD[playerid][2]);
	PlayerTextDrawDestroy(playerid, LoginTD[playerid][3]);
	PlayerTextDrawDestroy(playerid, LoginTD[playerid][4]);
	PlayerTextDrawDestroy(playerid, BrzinaTD[playerid][0]);
	PlayerTextDrawDestroy(playerid, BrzinaTD[playerid][1]);
	PlayerTextDrawDestroy(playerid, BrzinaTD[playerid][2]);
	PlayerTextDrawDestroy(playerid, BrzinaTD[playerid][3]);
	PlayerTextDrawDestroy(playerid, BrzinaTD[playerid][4]);
	PlayerTextDrawDestroy(playerid, BrzinaTD[playerid][5]);
	PlayerTextDrawDestroy(playerid, BrzinaTD[playerid][6]);
	PlayerTextDrawDestroy(playerid, BrzinaTD[playerid][7]);
	PlayerTextDrawDestroy(playerid, BrzinaTD[playerid][8]);
	PlayerTextDrawDestroy(playerid, BrzinaTD[playerid][9]);
	PlayerTextDrawDestroy(playerid, BrzinaTD[playerid][10]);
	PlayerTextDrawDestroy(playerid, BrzinaTD[playerid][11]);
	KillTimer(LoginTimer[playerid]);
	if(AdminVozilo[playerid] != -1)
	{
		 DestroyVehicle(AdminVozilo[playerid]);
		 AdminVozilo[playerid] = -1;
		 DestroyDynamic3DTextLabel(StaffVeh[AdminVozilo[playerid]]);
	}
	if(IznajmioVozilo[playerid] != 0)
	{
		KillTimer(RentTimer[playerid]);
		DestroyVehicle(RentVeh[playerid]);
		DestroyDynamic3DTextLabel(RentVehLabel[RentVeh[playerid]]);
		IznajmioVozilo[playerid] = 0;
		RentVeh[playerid] = 0;
	}
	if(TelefonRazgovor[playerid] != -1 && TelefonZvoni[playerid] == false)
	{
		va_SendClientMessage(playerid, 0xbe1fdeFF, "[TELEKOM]: {FFFFFF}Veza prekinuta (Igrac sa kojim ste pricali je izasao sa servera)!");
		SetPlayerSpecialAction(TelefonRazgovor[playerid], SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(TelefonRazgovor[playerid], 4);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(playerid, 4);
		TelefonRazgovor[TelefonRazgovor[playerid]] = -1;
		TelefonRazgovor[playerid] = -1;
	}
	KillTimer(MobilniCenaRazgovora[playerid]); AttachObjectRemove(playerid);
	if(OdgovoriInfo[playerid][Postavio_Pitanje] == true)
	{
		OdgovoriInfo[playerid][Postavio_Pitanje] = false;
		OdgovoriInfo[playerid][pOdgovorio] = false;
		strmid(OdgovoriInfo[playerid][pOdgovorio_Ime], "Prazno", 0, strlen("Prazno"), 32);
		strmid(OdgovoriInfo[playerid][pOdgovor_Text], "Prazno", 0, strlen("Prazno"), 128);
        Slot_Pitanja[playerid] = -1;
 	}
 	VuceIgraca[playerid] = -1; KillTimer(VuciTimer[playerid]);
 	if(Trazeni_Level[playerid] > 0 || StavljeneLisice[playerid] > 0 || IgracTazovan[playerid] > 0)
	{
		PI[playerid][Zatvor] = 1; PI[playerid][ZatvorVreme] = 1500;
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Zatvor` = '%d', `ZatvorVreme` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Zatvor], PI[playerid][ZatvorVreme], PI[playerid][SQLID]);
	}
	if(Zavezan[playerid] >= 1)
	{
		PI[playerid][Novac] -= 20000; 
		Zavezan[playerid] = 0;
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
	}
	if(PljackaBanku[playerid] == 1)
	{
		KillTimer(PBSefTimer[playerid]); PljackaBanku[playerid] = 0; PljackaBankuVrijeme[playerid] = 0; vanrednostanje = 0;
		va_SendClientMessageToAll(-1, "{FF0000}UDARNE VESTI | {FFFFFF}Pljacka Los Santos Banke je upravo sprecena!");
	}
	if(PljackaZlataru[playerid] == 1)
	{
		KillTimer(PBSefTimer[playerid]); PljackaZlataru[playerid] = 0; PljackaZlataruVrijeme[playerid] = 0; vanrednostanje = 0;
		va_SendClientMessageToAll(-1, "{FF0000}UDARNE VESTI | {FFFFFF}Pljacka Los Santos Zlatare je upravo sprecena!");
	}
	if(Job_Vehicle[playerid][jveh_Created] == true)
	{
		DestroyDynamic3DTextLabel(Job_Vehicle[playerid][jveh_Veh3D]);
		DestroyVehicle(Job_Vehicle[playerid][jveh_ID]);
		Job_Vehicle[playerid][jveh_ID] = -1;
		Job_Vehicle[playerid][jveh_Created] = false;
	}
	if(Kosac_Vozilo[playerid] != -1) { Kosac_Vozilo[playerid] = -1; }
	if(Uber_Vozilo[playerid] != -1) { Uber_Vozilo[playerid] = -1; }
	if(Pilot_Vozilo[playerid] != -1) { Pilot_Vozilo[playerid] = -1; }
	if(Masinovodja_Vozilo[playerid] != -1) { Masinovodja_Vozilo[playerid] = -1; }
	if(Polaganje_Vozilo[playerid] != -1) { Polaganje_Vozilo[playerid] = -1; }
	if(Zauzimanje_ID[playerid] != -1)
	{
		new T_ID = Zauzimanje_ID[playerid], string[250];
		GangZoneStopFlashForAll(TeritorijeInfo[T_ID][t_ID]);
	    Zauzimanje_Time[playerid] = 0;
	    KillTimer(Zauzimanje_Timer[playerid]);
	    if(TeritorijeInfo[T_ID][t_Org_ID] != -1)
		{
			format(string, sizeof(string), "#TERITORIJA: {FFFFFF}Clan protivnicka banda/mafija '%s' koji je zauzimao je izasao sa servera!", OrgInfo[PI[playerid][Clan]][oIme]);
		    OrgPoruka(PI[playerid][Clan], 0x1fdea7FF, string);
		}
		format(string, sizeof(string), "#TERITORIJA: {FFFFFF}Clan Vase organizacije %s je izasao sa servera te je zauzimanje prekinuto!", ReturnPlayerName(playerid));
    	OrgPoruka(PI[playerid][Clan], 0x1fdea7FF, string);
	    Zauzimanje_ID[playerid] = -1;
        if(Zauzimanje_CP[playerid] != 0)
        {
	    	Zauzimanje_CP[playerid] = 0;
	    	DisablePlayerCheckpoint(playerid);
		}
	}
	return 1;
}

public OnPlayerSpawn(playerid)
{
	SetPlayerSkin(playerid, PI[playerid][Skin]);
    SetPlayerInterior(playerid, 0);
    SetPlayerVirtualWorld(playerid, 0);
    if(PI[playerid][Zatvor] == 1)
	{
		new rand = random(sizeof(RandomZatvor));
		Ucitavanje_Objekata(playerid);
		SetPlayerPos(playerid, RandomZatvor[rand][0], RandomZatvor[rand][1], RandomZatvor[rand][2]);
		ResetPlayerWeapons(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Niste odsluzili zatvorsku kaznu ostalo vam je jos %s!", KonvertujVreme(PI[playerid][ZatvorVreme]));
		return 1;
	}
    SpawnIgraca(playerid);
    BojaIgraca(playerid);
	if(AdminVozilo[playerid] != -1) DestroyVehicle(AdminVozilo[playerid]), AdminVozilo[playerid] = -1, DestroyDynamic3DTextLabel(StaffVeh[AdminVozilo[playerid]]);
    if(!gPlayerAnimLibsPreloaded[playerid])
    {
   		PreloadAnimLib(playerid,"BOMBER");
   		PreloadAnimLib(playerid,"RAPPING");
    	PreloadAnimLib(playerid,"SHOP");
   		PreloadAnimLib(playerid,"BEACH");
   		PreloadAnimLib(playerid,"SMOKING");
    	PreloadAnimLib(playerid,"FOOD");
    	PreloadAnimLib(playerid,"ON_LOOKERS");
    	PreloadAnimLib(playerid,"DEALER");
		PreloadAnimLib(playerid,"CRACK");
		PreloadAnimLib(playerid,"CARRY");
		PreloadAnimLib(playerid,"COP_AMBIENT");
		PreloadAnimLib(playerid,"PARK");
		PreloadAnimLib(playerid,"INT_HOUSE");
		PreloadAnimLib(playerid,"FOOD");
		PreloadAnimLib(playerid,"PED");
		PreloadAnimLib(playerid,"BLOWJOBZ");
		PreloadAnimLib(playerid,"GYMNASIUM");
		PreloadAnimLib(playerid,"SCRATCHING");
		PreloadAnimLib(playerid,"COLT45");
		PreloadAnimLib(playerid,"SILENCED");
		PreloadAnimLib(playerid,"SHOTGUN");
		PreloadAnimLib(playerid,"RIFLE");
		PreloadAnimLib(playerid,"UZI");
		PreloadAnimLib(playerid,"HEIST9");
		PreloadAnimLib(playerid,"SNM");
		PreloadAnimLib(playerid,"STRIP");
		PreloadAnimLib(playerid,"CAR");
		PreloadAnimLib(playerid,"BD_FIRE");
        PreloadAnimLib(playerid,"MISC");
        PreloadAnimLib(playerid,"CHAINSAW");
        PreloadAnimLib(playerid,"ROB_BANK");
        PreloadAnimLib(playerid,"CASINO");
        PreloadAnimLib(playerid,"SWEET");
		gPlayerAnimLibsPreloaded[playerid] = 1;
	}
	return 1;
}

public OnPlayerDeath(playerid, killerid, WEAPON:reason)
{
	if(Ima_Radar_TD[playerid] == 1) { UnistiRadarTD(playerid); }
	if(killerid != INVALID_PLAYER_ID)
	{
	    if(ClanDB(killerid))
		{
			Trazeni_Level[killerid] = 0;
		}
		if(!ClanDB(killerid) && IsPlayerConnected(playerid) && PI[killerid][Zatvor] == 0)
		{
		    Trazeni_Level[killerid] = 3;
			PostaviWanted(killerid, "Ubistvo", "Nepoznat");
		}
		if(!ClanDB(playerid))
		{
		    Trazeni_Level[killerid] = 6;
			PostaviWanted(killerid, "Ubistvo Policajca", "Nepoznat");
		}
	}
	if(Trazeni_Level[playerid] > 0)
	{
		GivePlayerMoney(playerid, -Trazeni_Level[playerid]*400);
		PI[playerid][Novac] -= Trazeni_Level[playerid]*400;
		Trazeni_Level[playerid] = 0;

		mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Izgubili ste {FF0000}%d$ {FFFFFF}zbog umiranja sa wanted level-om {FF0000}%d!", Trazeni_Level[playerid]*400, Trazeni_Level[playerid]);
	}
	if(StavljeneLisice[playerid] == 1)
	{
	    StavljeneLisice[playerid] = 0;
		GivePlayerMoney(playerid, -1500);
		PI[playerid][Novac] -= 1500;
		TogglePlayerControllable(playerid, 1);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(playerid, 0);

		mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Umrli ste dok imate lisice, oduzeto Vam je 1.500$!");
	}
	if(PljackaBanku[playerid] == 1)
	{
		KillTimer(PBSefTimer[playerid]); PljackaBanku[playerid] = 0; PljackaBankuVrijeme[playerid] = 0;
		va_SendClientMessageToAll(-1, "{FF0000}UDARNE VESTI | {FFFFFF}Pljacka Los Santos Banke je upravo sprecena jer je pljackas smrtno stradao!");
		OrgInfo[1][oSefNovac] += 10000; OrgInfo[2][oSefNovac] += 10000;
		mysql_tqueryEx(SQL, "UPDATE `organizations` SET `SefNovac` = '%d' WHERE `SQLID` = '%d'", OrgInfo[1][oSefNovac], OrgInfo[1][SQLID]);
		mysql_tqueryEx(SQL, "UPDATE `organizations` SET `SefNovac` = '%d' WHERE `SQLID` = '%d'", OrgInfo[2][oSefNovac], OrgInfo[2][SQLID]);
		new p_string[256];
		format(p_string, sizeof(p_string), "[SEF]: {FFFFFF}Dodato je 10000$ u sef radi sprecavanja pljacke!");
		PDMessage(0x1fdea7FF, p_string);
	}
	if(PljackaZlataru[playerid] == 1)
	{
		KillTimer(PBSefTimer[playerid]); PljackaZlataru[playerid] = 0; PljackaZlataruVrijeme[playerid] = 0;
		va_SendClientMessageToAll(-1, "{FF0000}UDARNE VESTI | {FFFFFF}Pljacka Los Santos Zlatare je upravo sprecena jer je pljackas smrtno stradao!");
		OrgInfo[1][oSefNovac] += 10000; OrgInfo[2][oSefNovac] += 10000;
		mysql_tqueryEx(SQL, "UPDATE `organizations` SET `SefNovac` = '%d' WHERE `SQLID` = '%d'", OrgInfo[1][oSefNovac], OrgInfo[1][SQLID]);
		mysql_tqueryEx(SQL, "UPDATE `organizations` SET `SefNovac` = '%d' WHERE `SQLID` = '%d'", OrgInfo[2][oSefNovac], OrgInfo[2][SQLID]);
		new p_string[256];
		format(p_string, sizeof(p_string), "[SEF]: {FFFFFF}Dodato je 10000$ u sef radi sprecavanja pljacke!");
		PDMessage(0x1fdea7FF, p_string);
	}
	if(gPlayerUsingLoopingAnim[playerid] == true)
	{
        gPlayerUsingLoopingAnim[playerid] = false;
    }
	if(Zauzimanje_ID[playerid] != -1)
	{
		new T_ID = Zauzimanje_ID[playerid], string[300];
		GangZoneStopFlashForAll(TeritorijeInfo[T_ID][t_ID]);
	    Zauzimanje_Time[playerid] = 0;
	    KillTimer(Zauzimanje_Timer[playerid]);
	    if(TeritorijeInfo[T_ID][t_Org_ID] != -1)
		{
			format(string, sizeof(string), "#TERITORIJA: {FFFFFF}Clan protivnicka banda/mafija '%s' koji je zauzimao je ubijen!", OrgInfo[PI[playerid][Clan]][oIme]);
		  	OrgPoruka(TeritorijeInfo[Zauzimanje_ID[playerid]][t_Org_ID], 0x1fdea7FF, string);
	    	
		}
		format(string, sizeof(string), "#TERITORIJA: {FFFFFF}Clan Vase organizacije %s je ubijen te je zauzimanje prekinuto!", ReturnPlayerName(playerid));
    	OrgPoruka(PI[playerid][Clan], 0x1fdea7FF, string);
	    Zauzimanje_ID[playerid] = -1;
        if(Zauzimanje_CP[playerid] != 0)
        {
	    	Zauzimanje_CP[playerid] = 0;
	    	DisablePlayerCheckpoint(playerid);
		}
	}
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
    SetVehicleHealth(vehicleid, 999.99); SetVehicleParamsCarWindows(vehicleid, 1, 1, 1, 1);
    if(!VoziloJeBicikla(GetVehicleModel(vehicleid)))
	{
	    new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, 0, 0, alarm, doors, bonnet, boot, 0);
	}
	if(PrivatnoVozilo(vehicleid))
	{
        PostaviVLabel(vehicleid);
	    ModVehicle(vehicleid);
        SetVehicleVirtualWorld(VoziloInfo[vehicleid][vID], VoziloInfo[vehicleid][vVW]);
  	}
  	else
  	{
  	    SetVehicleVirtualWorld(vehicleid, 0);
	}
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	return 1;
}

public OnPlayerText(playerid, text[])
{
    for(new words; words < sizeof(ZabranjeneReci); words++)
	{
		if(strfind(text, ZabranjeneReci[words], true) != -1)
		{
			va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ta rec je zabranjena ne mozete je pisati!");
			return 0;
		}
	}
	if(Ulogovan[playerid] != 1)
 	{
		va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi mogli pisati!");
		return 0;
	}
	if(TelefonRazgovor[playerid] != -1 && TelefonZvoni[playerid] == false)
	{
		va_SendClientMessage(playerid, 0xF3FF02FF, "(Na Telefon) %s kaze: {FFFFFF}%s", ReturnPlayerName(playerid), text);
		va_SendClientMessage(TelefonRazgovor[playerid], 0xF3FF02FF, "(Na Telefon) %s kaze: {FFFFFF}%s", ReturnPlayerName(playerid), text);
		return 0;
	}
	if(matka && IsNumeric(text))
   	{
 		if(dobitak == strval(text))
 		{
 			new MatCash = random(2000)+random(2000);
	   	    matka = false;
			va_SendClientMessageToAll(0x5fe91cFF, "[MATEMATIKA]: %s {FFFFFF}je resi%s test iz matematike i dobi%s {5fe91c}$%d {FFFFFF}(rezultat: {5fe91c}%d{FFFFFF})", ReturnPlayerName(playerid), PI[playerid][Pol] == 1 ? "o" : "la", PI[playerid][Pol] == 1 ? "o" : "la", MatCash, dobitak);
			GivePlayerMoney(playerid, MatCash);
			PI[playerid][Novac] += MatCash;
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
			CheckQuestDone(playerid, 20);
	   	}
	   	else
	   	{
			va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vas odgovor nije tacan.");
  		}
  		return 0;
	}
	if(PI[playerid][Mutiran] != 0)
	{
		va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Utisani ste ne mozete pisati, kucajte (/vreme) da vidite koliko ste jos utisani!");
		return 0;
	}
    if(chat)
	{
	    if(!strcmp(text," ") || isnull(text)) return 0;
		new string[256];
		if(IsPlayerInAnyVehicle(playerid))
		{
			format(string, sizeof(string), "{FFFFFF}(Iz vozila): {1b71bc}%s {FFFFFF}%s {1b71bc}kaze: {FFFFFF}%s", ReturnPlayerName(playerid), AkcenatIme(PI[playerid][Akcenat]), text);
		}
		else
		{
			format(string, sizeof(string), "{FFFFFF}[%d] {1b71bc}%s {FFFFFF}%s {1b71bc}kaze: {FFFFFF}%s", playerid, ReturnPlayerName(playerid), AkcenatIme(PI[playerid][Akcenat]), text);
		}
		ProxMessage(playerid, string, 20.0);
		new cb_string[156];
		format(cb_string, sizeof(cb_string), "{FFFFFF}%s", text);
		SetPlayerChatBubble(playerid, cb_string, 0xFFFFFFAA, 20.0, 5000);
		return 0;
	}
	return 1;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success)
	{
		va_SendClientMessage(playerid, 0xFF0000FF, "#Komande: {FFFFFF}Komanda ne postoji, da vidite listu komandi kucajte {FF0000}/komande.");
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 10.0);
	}
    return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    if(!ispassenger)
	{
	    foreach(new i : Player)
		{
		    if(GetPlayerVehicleID(i) == vehicleid && GetPlayerState(i) == PLAYER_STATE_DRIVER)
		    {
	     		new Float:Poz[3];
	     		new Float:smanjihp;
		        GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
		        SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
		        TogglePlayerControllable(playerid, 0);
		        GetPlayerHealth(playerid, smanjihp);
		        SetPlayerHealth(playerid, smanjihp-20);
		        PlayerTimer[playerid] = SetTimerEx("ZalediOdledi", 3000, false, "i", playerid);
		        GameTextForPlayer(playerid, "~r~NINJAJACKING ~n~~w~NIJE DOZVOLJEN", 5000, 3);
		    }
		}
	    new str[128];
		format(str, sizeof(str), "{C2A2DA}* %s ulazi u vozilo.", ReturnPlayerName(playerid));
		ProxMessage(playerid, str, 20.0);
	}
	if(PrivatnoVozilo(vehicleid))
	{
 		if(PI[playerid][Vozilo1] == vehicleid || PI[playerid][Vozilo2] == vehicleid || PI[playerid][Vozilo3] == vehicleid)
		{
			VehUlazi[playerid] = 1;
   		}
	}
	if(PrivatnoVozilo(vehicleid))
	{
		if(VoziloInfo[vehicleid][vZakljucan] == 1)
		{
		    new Float:Poz[3];
		    GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
			SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
			va_SendClientMessage(playerid, 0x1b71bcFF, "Vozilo Zakljucano: {FFFFFF}ID: %d - Vlasnik: %s - Script ID: %d", VoziloInfo[vehicleid][vID], VoziloInfo[vehicleid][vVlasnik], vehicleid);
			return 1;
   		}
	}
	if(StavljeneLisice[playerid] > 0 || IgracTazovan[playerid] > 0 || Zavezan[playerid] > 0)
	{
		new Float:Poz[3];
	    GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
		SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
		va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ulaziti u vozilo dok ste tazovani / zavezani!");
		return 1;
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
    new str[156];
    if(PrivatnoVozilo(vehicleid))
	{
 		if(PI[playerid][Vozilo1] == vehicleid || PI[playerid][Vozilo2] == vehicleid || PI[playerid][Vozilo3] == vehicleid)
		{
			VehUlazi[playerid] = 0;
   		}
	}
	if(Pojas[playerid] == 1)
	{
		format(str, sizeof(str), "{C2A2DA}* %s skida pojas.", ReturnPlayerName(playerid));
		ProxMessage(playerid, str, 20.0);
	    Pojas[playerid] = 0;
    }
	format(str, sizeof(str), "{C2A2DA}* %s izlazi iz vozila.", ReturnPlayerName(playerid));
	ProxMessage(playerid, str, 20.0);
	return 1;
}

// - > Aliasi
CMD:help(const playerid) return cmd_komande(playerid);
CMD:postaviadmina(playerid, const params[]) return cmd_makeadmin(playerid, params);
CMD:adminduty(const playerid) return cmd_aduty(playerid);
CMD:aduznost(const playerid) return cmd_aduty(playerid);
CMD:aon(const playerid) return cmd_aduty(playerid);
CMD:ubij(playerid, const params[]) return cmd_kill(playerid, params);
CMD:jetpack(const playerid) return cmd_jp(playerid);
CMD:jpack(const playerid) return cmd_jp(playerid);
CMD:upozorenje(playerid, const params[]) return cmd_warn(playerid, params);
CMD:changepass(playerid, const params[]) return cmd_promenilozinku(playerid, params);
CMD:specijalnoime(playerid, const params[]) return cmd_changename(playerid, params);
CMD:zvizdi(const playerid) return cmd_z(playerid);
CMD:tiho(playerid, const params[]) return cmd_c(playerid, params);
CMD:glasno(playerid, const params[]) return cmd_s(playerid, params);
CMD:sapni(playerid, const params[]) return cmd_w(playerid, params);
CMD:idido(playerid, const params[]) return cmd_goto(playerid, params);
CMD:check(playerid, const params[]) return cmd_proveri(playerid, params);
CMD:kreirajatm(const playerid) return cmd_kreirajbankomat(playerid);
CMD:editatm(const playerid) return cmd_ebankomat(playerid);
CMD:tp(const playerid) return cmd_port(playerid);
CMD:teleport(const playerid) return cmd_port(playerid);
CMD:pitaj(playerid, const params[]) return cmd_askq(playerid, params);
CMD:tdcol(const playerid) return cmd_tdboja(playerid);

// - > Komande
CMD:komande(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    Dialog_Show(playerid, dialog_komande, DIALOG_STYLE_LIST, "{1b71bc}Komande", "{1b71bc}> {FFFFFF}Opste Komande\n\
                                                                                   {1b71bc}> {FFFFFF}Lider Komande\n\
																				   {1b71bc}> {FFFFFF}Organizacija Komande\n\
																				   {1b71bc}> {FFFFFF}Admin Komande\n\
																				   {1b71bc}> {FFFFFF}Vip Komande\n\
																				   {1b71bc}> {FFFFFF}Posao Komande\n\
																				   {1b71bc}> {FFFFFF}Marketing Team Komande", "Odaberi", "Izlaz");
	return 1;
}

CMD:stats(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    new sat, minut, sekund, godina, mesec, dan;
	gettime(sat, minut, sekund);
	getdate(godina, mesec, dan);
    Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}VIBE - Stats", "{1b71bc}Opste podatke:\n\
                                                                                     {1b71bc}Ime i Prezime: {FFFFFF}[%s] - {1b71bc}%02d:%02d:%02d - %02d.%02d.%02d\n\
                                                                                     {1b71bc}Pol: {FFFFFF}[%s] | {1b71bc}Godine: {FFFFFF}[%d] | {1b71bc}Drzava: {FFFFFF}[%s]\n\
                                                                                     {1b71bc}Level: {FFFFFF}[%d] | {1b71bc}Respekti: {FFFFFF}[%d/%d] | {1b71bc}Sati Igre: {FFFFFF}[%d]\n\
                                                                                     {1b71bc}Mutiran: {FFFFFF}[%s] | {1b71bc}Upozorenja: {FFFFFF}[%d/5] | {1b71bc}Mobilni: {FFFFFF}[%s]\n\
																					 {1b71bc}Telefonski Broj: {FFFFFF}[%d] | {1b71bc}Vip Level: {FFFFFF}[%s] | {1b71bc}Organizacija: {FFFFFF}[%s]\n\
																					 {1b71bc}Posao: {FFFFFF}[%s] | {1b71bc}Marketing Team: {FFFFFF}[%s]\n\n\
                                                                                     {1b71bc}Bogatstvo:\n\
                                                                                     {1b71bc}Novac Dzep: {FFFFFF}[%d$] | {1b71bc}Novac Banka: {FFFFFF}[%d$] | {1b71bc}Zlato: {FFFFFF}[%dg]\n\n\
                                                                                     {1b71bc}Imovina:\n\
                                                                                     {1b71bc}Kuca: {FFFFFF}[%d] | {1b71bc}Rent Kuca: {FFFFFF}[%d] | {1b71bc}Stan: {FFFFFF}[%d] | {1b71bc}Firma: {FFFFFF}[%d]\n\n\
																					 {1b71bc}Dozvole:\n\
																					 {1b71bc}Auto Dozvola: {FFFFFF}[%s] | {1b71bc}Moto Dozvola: {FFFFFF}[%s] | {1b71bc}Kamion Dozvola: {FFFFFF}[%s]\n\
																					 {1b71bc}Brod Dozvola: {FFFFFF}[%s] | {1b71bc}Avion Dozvola: {FFFFFF}[%s] | {1b71bc}Oruzije Dozvola: {FFFFFF}[%s]\n\n\
																					 {1b71bc}Droga i Materijali:\n\
																					 {1b71bc}Droga: {FFFFFF}[%dg] | {1b71bc}Seme Droge: {FFFFFF}[%d] | {1b71bc}Neobradjena droga: {FFFFFF}[%dg] | {1b71bc}Materijali: {FFFFFF}[%d]\n\n\
																					 {1b71bc}Vozila:\n\
																					 {1b71bc}Vozilo 1: {FFFFFF}[%d] | {1b71bc}Vozilo 2: {FFFFFF}[%d] | {1b71bc}Vozilo 3: {FFFFFF}[%d]", "OK", "",
																					 ReturnPlayerName(playerid), sat, minut, sekund, dan, mesec, godina, PI[playerid][Pol] == 1 ? "Musko" : "Zensko",
																					 PI[playerid][Godine], CheckCountry(PI[playerid][Drzava]), PI[playerid][Level], PI[playerid][Respekti], (PI[playerid][Level] * 2) + 2, PI[playerid][SatiIgre],
                                                                                     PI[playerid][Mutiran] == 1 ? "Da" : "Ne", PI[playerid][Warn], PI[playerid][Mobilni] != 0 ? "Poseduje" : "Ne Poseduje", PI[playerid][Mobilni],
																					 GetVipRank(PI[playerid][Vip]), OrgIme(PI[playerid][Clan]), PosaoIme(PI[playerid][Posao]), PI[playerid][MTeam] == 1 ? "Da" : "Ne",
																					 PI[playerid][Novac], PI[playerid][NovacBanka], PI[playerid][Zlato], PI[playerid][Kuca],
																					 PI[playerid][Rent], PI[playerid][Stan], PI[playerid][Firma], PI[playerid][ADozvola] == 1 ? "Poseduje" : "Ne Poseduje",
																					 PI[playerid][MotorDozvola] == 1 ? "Poseduje" : "Ne Poseduje", PI[playerid][KamionDozvola] == 1 ? "Poseduje" : "Ne Poseduje",
																					 PI[playerid][BrodDozvola] == 1 ? "Poseduje" : "Ne Poseduje", PI[playerid][AvionDozvola] == 1 ? "Poseduje" : "Ne Poseduje",
																					 PI[playerid][OruzijeDozvola] == 1 ? "Poseduje" : "Ne Poseduje", PI[playerid][Droga], PI[playerid][Seme], PI[playerid][NeoDroga], 
																					 PI[playerid][Mats], PI[playerid][Vozilo1], PI[playerid][Vozilo2], PI[playerid][Vozilo3]);
    CheckQuestDone(playerid, 3);
	return 1;
}

CMD:b(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(PI[playerid][Mutiran] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste mutirani ne mozete koristiti komande!");
		
    static string[156];

	if(isnull(params))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/b(occ) [tekst]");

	format(string, sizeof(string), "{1b71bc}(( OOC | {FFFFFF}%s kaze: %s {1b71bc}))", ReturnPlayerName(playerid), params);
	ProxMessage(playerid, string, 20.0);
	return 1;
}

CMD:me(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(PI[playerid][Mutiran] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste mutirani ne mozete koristiti komande!");
		
    static string[156];

	if(isnull(params))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/me [tekst]");

	format(string, sizeof(string), "{C2A2DA}[/me] %s %s.", ReturnPlayerName(playerid), params);
	ProxMessage(playerid, string, 20.0);
	return 1;
}

CMD:do(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Mutiran] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste mutirani ne mozete koristiti komande!");
		
    static string[156];

	if(isnull(params))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/do [tekst]");

	format(string, sizeof(string), "{C2A2DA}[/do] %s %s.", ReturnPlayerName(playerid), params);
	ProxMessage(playerid, string, 20.0);
	return 1;
}

CMD:z(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(PI[playerid][Mutiran] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste mutirani ne mozete koristiti komande!");
		
    static string[70];
    
 	format(string, sizeof(string), "{FFFFFF}%s zvizdi: Zzz!", ReturnPlayerName(playerid));
    ProxMessage(playerid, string, 20.0);
	return 1;
}

CMD:c(playerid, const params[])
{
    static string[156];
		
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Mutiran] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste mutirani ne mozete koristiti komande!");

	if(isnull(params))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/c [tekst za tiho]");

	if(IsPlayerInAnyVehicle(playerid))
	{
		format(string, sizeof(string), "{1b71bc}(Iz vozila): {FFFFFF}%s tiho kaze: %s", ReturnPlayerName(playerid), params);
	}
	else
	{
	    format(string, sizeof(string), "{FFFFFF}%s tiho kaze: %s", ReturnPlayerName(playerid), params);
	}
	ProxMessage(playerid, string, 5.0);
	return 1;
}

CMD:s(playerid, const params[])
{
    static string[156];
		
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Mutiran] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste mutirani ne mozete koristiti komande!");

	if(isnull(params))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/s [tekst za deranje/vikanje]");

	if(IsPlayerInAnyVehicle(playerid))
	{
		format(string, sizeof(string), "{1b71bc}(Iz vozila): {FFFFFF}%s se dere: %s", ReturnPlayerName(playerid), params);
	}
	else
	{
	    LoopingAnim(playerid,"ON_LOOKERS","shout_01",3.0,1,0,0,3,3);
	    format(string, sizeof(string), "{FFFFFF}%s se dere: %s", ReturnPlayerName(playerid), params);
	}
	ProxMessage(playerid, string, 20.0);
	return 1;
}

CMD:w(playerid, const params[])
{
    static result[100],
		string[156],
		id,
		Float:Poz[3];
		
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Mutiran] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste mutirani ne mozete koristiti komande!");

	if(sscanf(params, "us[100]", id, result))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/w [ID/Ime] [Tekst za saptanje]");
		
	if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");

	if(id == playerid)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete sami sebi saptati!");
		
	GetPlayerPos(id, Poz[0], Poz[1], Poz[2]);

	if(!IsPlayerInRangeOfPoint(playerid, 5.0, Poz[0], Poz[1], Poz[2]))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije blizu Vas!");

	va_SendClientMessage(id, -1, "{C0C0C0}* %s Vam sapuce: %s", ReturnPlayerName(playerid), result);
	va_SendClientMessage(playerid, -1, "{C0C0C0}* Sapnuli ste %s: %s", ReturnPlayerName(id), result);

	format(string, sizeof(string), "{C2A2DA}* %s sapuce nesto osobi %s.", ReturnPlayerName(playerid), ReturnPlayerName(id));
	ProxMessage(playerid, string, 15.0);
	return 1;
}

CMD:askq(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(ServerInfo[sPitanja] == 0)
   		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pitanja su trenutno iskljucena!");

    if(PI[playerid][Mutiran] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste mutirani ne mozete koristiti komande!");
        
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zatvoreni ne mozete koristiti ovu komandu!");
        
    if(OdgovoriInfo[playerid][Postavio_Pitanje] == true && OdgovoriInfo[playerid][pOdgovorio] == false)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nije vam je odgovoreno na pitanje sacekajte!");

	if(OdgovoriInfo[playerid][Postavio_Pitanje] == true && OdgovoriInfo[playerid][pOdgovorio] == true)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Prvo pogledajte prosli odgovor (/pogledajodgovor)!");
		
	if(gettime() < Koristio_Uslugu[playerid])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Svakih 2 minuta mozete koristit ASKQ i report!");

	new staff = 0, string[256];
	foreach(new i : Player)
	{
		if(PI[i][Admin] > 0) staff ++;
	}
	if(staff == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Trenutno nema ni jednog Admina online!");

	if(isnull(params))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/askq [tekst]");

	new askQ = -1;
	for(new id = 1; id < MAX_PITANJA; id++)
	{
		if(PitanjaInfo[id][pPostavio] == false)
		{
			askQ = id;
			break;
		}
	}
	if(askQ == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Lista pitanja je puna sacekajte!");

	PitanjaInfo[askQ][pPostavio] = true;
	PitanjaInfo[askQ][pID_Igraca] = playerid;
	OdgovoriInfo[playerid][Postavio_Pitanje] = true;
	OdgovoriInfo[playerid][pOdgovorio] = false;
	strmid(PitanjaInfo[askQ][pIme_Igraca], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 32);
	strmid(PitanjaInfo[askQ][pPitanje_Text], params, 0, strlen(params), 128);
	Slot_Pitanja[playerid] = askQ;
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Vase pitanje je poslato Staff Timu.");
	format(string, sizeof(string), "{FF0000}#Pitanje: {FFFFFF}Poslao Igrac %s (ID:%d) {FF0000}(/lp)", ReturnPlayerName(playerid), playerid);
	AdminMessage(-1, string);
	Koristio_Uslugu[playerid] = gettime() + 120;
    return 1;
}

CMD:report(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(ServerInfo[sReport] == 0)
   		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Report je trenutno iskljucen!");
	
	if(PI[playerid][Mutiran] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste mutirani ne mozete koristiti komande!");
        
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zatvoreni ne mozete koristiti ovu komandu!");

	if(gettime() < Koristio_Uslugu[playerid])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Svakih 2 minuta mozete koristit ASKQ i report!");

	new staff = 0, id, tekst[128], string[256];
	foreach(new i : Player)
	{
		if(PI[i][Admin] > 0) staff ++;
	}
	if(staff == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Trenutno nema ni jednog Admina online!");

	if(sscanf(params, "us[128]", id, tekst))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/report [id] [razlog]");
		
	if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je offline!");

	format(string, sizeof(string), "{FF0000}#Report: {FFFFFF}%s (ID:%d) je prijavio igraca %s (ID: %d) | Razlog: %s", ReturnPlayerName(playerid), playerid, ReturnPlayerName(id), id, tekst);
	AdminMessage(-1, string);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste prijavili igraca %s report je uspesno poslat Staff Timu!", ReturnPlayerName(id));
	va_SendClientMessage(playerid, -1, "Vas report glasi: %s", tekst);
	Koristio_Uslugu[playerid] = gettime() + 120;
	return 1;
}

CMD:reklama(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][MTeam] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	    
    Dialog_Show(playerid, dialog_reklama, DIALOG_STYLE_LIST, "{1b71bc}Izaberite reklamu", "{1b71bc}> {FFFFFF}TeamSpeak 3\n\
											                                               {1b71bc}> {FFFFFF}Facebook Stranica\n\
																						   {1b71bc}> {FFFFFF}Instagram\n\
																						   {1b71bc}> {FFFFFF}Forum", "Odaberi", "Odustani");
	return 1;
}

CMD:zadaci(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	Dialog_Show(playerid, dialog_none, DIALOG_STYLE_TABLIST_HEADERS, "{1b71bc}Lista zadataka", "Zadatak\tStatus\tNagrada\n\
                                                                                        {1b71bc}> {FFFFFF}Iznajmi vozilo\t%s\t2.000$\n\
                                                                                        {1b71bc}> {FFFFFF}Polozite za B kategoriju\t%s\t+1 respect\n\
																			        	{1b71bc}> {FFFFFF}Otvorite /stats\t%s\t1.500$\n\
																						{1b71bc}> {FFFFFF}Kupite svoje prvo vozilo\t%s\t+1 level\n\
																						{1b71bc}> {FFFFFF}Udjite u organizaciju\t%s\t+1g zlata\n\
																						{1b71bc}> {FFFFFF}Kupite dozvolu za oruzije\t%s\t1.000$\n\
																						{1b71bc}> {FFFFFF}Zaposli se\t%s\t+2 respekta\n\
																						{1b71bc}> {FFFFFF}Kupi mobilni telefon\t%s\t+4g zlata\n\
																						{1b71bc}> {FFFFFF}Otvorite racun u banci\t%s\t1.200$\n\
																						{1b71bc}> {FFFFFF}Napravite oglas\t%s\t+6g zlata\n\
																						{1b71bc}> {FFFFFF}Promenite boju tdova /tdboja\t%s\t+1 respekt\n\
																						{1b71bc}> {FFFFFF}Kupite imenik\t%s\t+1.600$\n\
																						{1b71bc}> {FFFFFF}Kupi kucu\t%s\t+3 respekta\n\
																						{1b71bc}> {FFFFFF}Kupi stan\t%s\t+2 respekta\n\
																						{1b71bc}> {FFFFFF}Kupi firmu\t%s\t+1 level\n\
																						{1b71bc}> {FFFFFF}Podigni novac sa bankomata\t%s\t1.400$\n\
																						{1b71bc}> {FFFFFF}Sakupi 100 sati igre\t%s\t30.000$\n\
																						{1b71bc}> {FFFFFF}Sakupi 250 sati igre\t%s\t50.000$\n\
																						{1b71bc}> {FFFFFF}Sakupi 500 sati igre\t%s\t100.000$\n\
																						{1b71bc}> {FFFFFF}Resi matematicki zadatak\t%s\t+2g zlata\n\
																						{1b71bc}> {FFFFFF}Tuniraj vozilo\t%s\t3.000$\n\
																						{1b71bc}> {FFFFFF}Poseti teretanu\t%s\t+1 respekt\n\
																						{1b71bc}> {FFFFFF}Napunite gorivo u vase vozilo\t%s\t2.200$\n\
																						{1b71bc}> {FFFFFF}Uplatite lotto listic\t%s\t+1g zlata", "OK", "",
																						QuestInfo[playerid][quest_done][0] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
        																				QuestInfo[playerid][quest_done][1] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
        																				QuestInfo[playerid][quest_done][2] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][3] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][4] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][5] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][6] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][7] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][8] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][9] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][10] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][11] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][12] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][13] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][14] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][15] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][16] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][17] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][18] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][19] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][20] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][21] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][22] ? "{00FF00}Reseno" : "{FF0000}Nije reseno",
																						QuestInfo[playerid][quest_done][23] ? "{00FF00}Reseno" : "{FF0000}Nije reseno");
	return 1;
}

CMD:daj(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    static id, 
		kolicina, 
		stvar[16], 
		Float:Poz[3],
		str[156];
    
	if(sscanf(params, "uis[16]", id, kolicina, stvar))
	{
		va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/daj [ID/Ime] [Kolicina] [Stvar]");
		va_SendClientMessage(playerid, 0x3acc51FF, "Stvari: {FFFFFF}Droga | Mats | Oruzije | Novac | Zlato | Hranu");
		return 1;
	}
	
	if(!IsPlayerConnected(id)) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je offline!");
		
	if(id == playerid) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete sami sebi davati stvari!");
		
	if(PI[playerid][Zatvor] > 0) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete koristiti ovu komandu jer ste u zatvoru!");
    
	GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
    
	if(!IsPlayerInRangeOfPoint(id, 5.0, Poz[0], Poz[1], Poz[2])) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u blizini tog igraca!");
   	
	if(!strcmp(stvar, "droga", true))
	{
	    if(PI[playerid][Droga] < kolicina) 
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko droge!");
	    
		if(kolicina < 1 || kolicina > 2000) 
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ici ispod 1 i iznad 2000 odjednom!");
	    
		PI[playerid][Droga] -= kolicina; 
		PI[id][Droga] += kolicina; 
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Droga` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Droga], PI[playerid][SQLID]);
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Droga` = '%d' WHERE `SQLID` = '%d'", PI[id][Droga], PI[id][SQLID]);
	    
	    va_SendClientMessage(playerid, 0x3acc51FF, "#GIVE: {FFFFFF}Dali ste %dg droge igracu %s!", kolicina, ReturnPlayerName(id));
	    va_SendClientMessage(id, 0x3acc51FF, "#DROGA: {FFFFFF}Igrac %s vam je dao %dg droge!", ReturnPlayerName(playerid), kolicina);
	}
	else if(!strcmp(stvar, "mats", true))
	{
	    if(PI[playerid][Mats] < kolicina) 
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko materijala!");
	    
		if(kolicina < 1 || kolicina > 2000) 
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ici ispod 1 i iznad 2000 odjednom!");
	    
		PI[playerid][Mats] -= kolicina; 
		PI[id][Mats] += kolicina; 
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Mats` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Mats], PI[playerid][SQLID]);
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Mats` = '%d' WHERE `SQLID` = '%d'", PI[id][Mats], PI[id][SQLID]);
	    
	    va_SendClientMessage(playerid, 0x3acc51FF, "#GIVE: {FFFFFF}Dali ste %d materijala igracu %s!", kolicina, ReturnPlayerName(id));
	    va_SendClientMessage(id, 0x3acc51FF, "#MATS: {FFFFFF}Igrac %s vam je dao %d materijala!", ReturnPlayerName(playerid), kolicina);
	}
	else if(!strcmp(stvar, "oruzije", true))
	{
		if(ClanDB(playerid)) 
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to kao policajac!");
			
		if(GetPlayerWeapon(playerid) == WEAPON_FIST) 
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate oruzije u ruci!");
		
		if(kolicina < 1 || kolicina > 200) 
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ici ispod 1 i iznad 200 odjednom!");
		
		if(GetPlayerAmmo(playerid) < kolicina) 
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko metaka!");
		
		new oruzje = GetPlayerWeapon(playerid), 
			municijaplayerid = GetPlayerAmmo(playerid), 
			municijanova = municijaplayerid - kolicina;
		
		GivePlayerWeapon(id, WEAPON:oruzje, kolicina); 
		SetPlayerAmmo(playerid, WEAPON:oruzje, municijanova);
		
		va_SendClientMessage(playerid, 0x3acc51FF, "#GIVE: {FFFFFF}Dali ste igracu %s oruzije sa %d metaka!", kolicina, ReturnPlayerName(id));
	    va_SendClientMessage(id, 0x3acc51FF, "#ORUZIJE: {FFFFFF}Igrac %s vam je dao oruzije sa %d metaka!", ReturnPlayerName(playerid), kolicina);
	}
	else if(!strcmp(stvar, "novac", true))
	{
		if(PI[playerid][Novac] < kolicina) 
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko novca!");
	    
		if(kolicina < 1 || kolicina > 100000) 
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ici ispod 1 i iznad 100000 odjednom!");
	    
		PI[playerid][Novac] -= kolicina; 
		PI[id][Novac] += kolicina; 
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[id][Novac], PI[id][SQLID]);
	    
	    va_SendClientMessage(playerid, 0x3acc51FF, "#GIVE: {FFFFFF}Dali ste igracu %s novca %d$.", kolicina, ReturnPlayerName(id));
	    va_SendClientMessage(id, 0x3acc51FF, "#NOVAC: {FFFFFF}Igrac %s vam je dao %d$ novca.", ReturnPlayerName(playerid), kolicina);
	
		format(str, sizeof(str), "{C2A2DA}* %s uzima nesto novca i daje ih %s.", ReturnPlayerName(playerid), ReturnPlayerName(id));
		ProxMessage(playerid, str, 15.0);
		OnePlayAnim(playerid, "DEALER", "shop_pay", 2.5, 0, 0, 0, 0, 0);
	}
	else if(!strcmp(stvar, "zlato", true))
	{
	    if(PI[playerid][Zlato] < kolicina) 
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko zlata!");
	    
		if(kolicina < 1 || kolicina > 2000) 
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ici ispod 1 i iznad 2000 odjednom!");
	    
		PI[playerid][Zlato] -= kolicina; 
		PI[id][Zlato] += kolicina; 
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Zlato` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Zlato], PI[playerid][SQLID]);
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Zlato` = '%d' WHERE `SQLID` = '%d'", PI[id][Zlato], PI[id][SQLID]);
	    
	    va_SendClientMessage(playerid, 0x3acc51FF, "#GIVE: {FFFFFF}Dali ste %dg zlata igracu %s!", kolicina, ReturnPlayerName(id));
	    va_SendClientMessage(id, 0x3acc51FF, "#MATS: {FFFFFF}Igrac %s vam je dao %dg zlata!", ReturnPlayerName(playerid), kolicina);
	}
	else if(!strcmp(stvar, "hranu", true))
	{
	    if(PI[playerid][Hrana] < kolicina) 
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko hrane!");
	    
		if(kolicina < 1 || kolicina > 2000) 
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ici ispod 1 i iznad 2000 odjednom!");
	    
		PI[playerid][Hrana] -= kolicina; 
		PI[id][Hrana] += kolicina; 
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Hrana` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Hrana], PI[playerid][SQLID]);
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Hrana` = '%d' WHERE `SQLID` = '%d'", PI[id][Hrana], PI[id][SQLID]);
	    
	    va_SendClientMessage(playerid, 0x3acc51FF, "#GIVE: {FFFFFF}Dali ste %d hrane igracu %s!", kolicina, ReturnPlayerName(id));
	    va_SendClientMessage(id, 0x3acc51FF, "#MATS: {FFFFFF}Igrac %s vam je dao %d hrane!", ReturnPlayerName(playerid), kolicina);
	}
	else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresno ime stvari!");
	return 1;
}

CMD:blowjob(const playerid)
{
	new id = getNearestSlut(playerid);
    
    if(id == -1) 
    	return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nisi blizu nijedne prostitutke!");

  	if(IsPlayerInAnyVehicle(playerid)) 
  		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes iz vozila!");

   	if(ProstitutkaVrsi[id]) 
   		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Prostitutka je zauzeta!");

   	if(PI[playerid][Novac] < 1000) 
   		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas dovoljno novca (1000$)!");

   	ApplyDynamicActorAnimation(ProstitutkaAktor[id], "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.0, 1, 1, 1, 1, 0);
    ProstitutkaVrsi[id] = true;

   	defer slutBlowJobTimer(playerid, id);

    PI[playerid][Novac] -= 1000;
	GivePlayerMoney(playerid, -1000);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
    TogglePlayerControllable(playerid, 0);
	ApplyAnimation(playerid, "Blowjobz", "BJ_Stand_Loop_P", 4.0, 1, 0, 0, 1, 0);

	new str[156];
	format(str, sizeof(str), "{C2A2DA}* %s placa prostitutku i ona se baca na posao.", ReturnPlayerName(playerid));
	ProxMessage(playerid, str, 20.0);
	return 1;
}

CMD:toplista(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	Dialog_Show(playerid, dialog_toplist, DIALOG_STYLE_LIST, "{1b71bc}Top 10 Lista", "{1b71bc}> {FFFFFF}Level\n\
                                                                                   	  {1b71bc}> {FFFFFF}Sati Igre\n\
                                                                                      {1b71bc}> {FFFFFF}Novac\n\
                                                                                      {1b71bc}> {FFFFFF}Zlato", "Odaberi", "Izlaz");
	return 1;
}

CMD:akcenat(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	Dialog_Show(playerid, dialog_akcenat, DIALOG_STYLE_LIST, "{1b71bc}Akcenat", "{1b71bc}> {FFFFFF}Engleski\n\
																			     {1b71bc}> {FFFFFF}Ruski\n\
																				 {1b71bc}> {FFFFFF}Nemacki\n\
																				 {1b71bc}> {FFFFFF}Francuski\n\
																				 {1b71bc}> {FFFFFF}Talijanski\n\
																		         {1b71bc}> {FFFFFF}Albanski\n\
																				 {1b71bc}> {FFFFFF}Italijanski\n\
																				 {1b71bc}> {FFFFFF}Spanski\n\
																				 {1b71bc}> {FFFFFF}Skini akcenat", "Odaberi", "Izlaz");
	return 1;
}		

CMD:tdboja(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	Dialog_Show(playerid, dialog_tdcol, DIALOG_STYLE_LIST, "{1b71bc}Boja TDova", "{1b71bc}> {FFFFFF}Plava\n\
														                          {1b71bc}> {FFFFFF}Crvena\n\
																				  {1b71bc}> {FFFFFF}Zelena\n\
																				  {1b71bc}> {FFFFFF}Roza\n\
																				  {1b71bc}> {FFFFFF}Zuta\n\
																				  {1b71bc}> {FFFFFF}Smedja\n\
																				  {1b71bc}> {FFFFFF}Narandzasta\n\
																				  {1b71bc}> {FFFFFF}Ljubicasta\n\
																				  {1b71bc}> {FFFFFF}Siva\n\
																				  {1b71bc}> {FFFFFF}Default\n\
																				  {1b71bc}> {FFFFFF}Custom boja (RGB)", "Odaberi", "Izlaz");
	return 1;
}

CMD:lotto(playerid, const params[]) 
{ 
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
	
	static broj;
	
	if(!IsPlayerInRangeOfPoint(playerid, 3, 1712.2665,-1143.0616,24.1103)) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na salteru drzavne lutrije.");
	
	if(PI[playerid][LottoBroj] > 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate uplacen loto listic.");

	if(PI[playerid][Novac] < 100) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca (100$).");

	if(sscanf(params, "d", broj)) 
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/lotto [ broj ]");

	if(broj < 1 || broj > 100)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Brojevi ne mogu da idu ispod 1 ili iznad 100." );
	
	PI[playerid][LottoBroj] = broj;
	PI[playerid][Novac] -= 100;
	GivePlayerMoney(playerid, -100);
	CheckQuestDone(playerid, 24);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `LottoBroj` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][LottoBroj], PI[playerid][SQLID]);
	
    va_SendClientMessageToAll(0x1b71bcFF, "#LOTTO: {FFFFFF}%s je uplatio lotto listic sa brojem {1b71bc}%d {FFFFFF}(/lotto).", ReturnPlayerName(playerid), broj);
	return 1;
}

CMD:podignidobitak(const playerid) 
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
	
	if(PI[playerid][LottoNovac] == 0) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Trenutno nemate novca na lotto racunu.");
	
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Preuzeli ste vasu nagradu od {1b71bc}%d$.", PI[playerid][LottoNovac]);
	PI[playerid][LottoNovac] = 0;
	PI[playerid][Novac] += PI[playerid][LottoNovac];
	GivePlayerMoney(playerid, PI[playerid][LottoNovac]);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `LottoNovac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][LottoNovac], PI[playerid][SQLID]);
	return 1;
}

CMD:smslotto(playerid, const params[]) 
{ 
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
	
	static broj;
	
	if(PI[playerid][Mobilni] == 0) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate mobilni telefon.");
	
	if(PI[playerid][LottoBroj] > 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate uplacen loto listic.");

	if(PI[playerid][MobKredit] < 100) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno kredita (100$).");

	if(sscanf(params, "d", broj)) 
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/smslotto [ broj ]");

	if(broj < 1 || broj > 100)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Brojevi ne mogu da idu ispod 1 ili iznad 100." );
	
	PI[playerid][LottoBroj] = broj;
	PI[playerid][MobKredit] -= 100;
	CheckQuestDone(playerid, 24);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `MobKredit` = '%d', `LottoBroj` = '%d' WHERE `SQLID` = '%d'", PI[playerid][MobKredit], PI[playerid][LottoBroj], PI[playerid][SQLID]);
	
    va_SendClientMessageToAll(0x1b71bcFF, "#SMS-LOTTO: {FFFFFF}%s je uplatio lotto listic sa brojem {1b71bc}%d {FFFFFF}(/smslotto).", ReturnPlayerName(playerid), broj);
	return 1;
}

CMD:otkaz(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(PI[playerid][Posao] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas posao!");
		
    if(KosacTraveCP[playerid] != 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete dati otkaz dok radite posao!");

	if(PosaoUniforma[playerid] == 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete dati otkaz dok imate uniformu!");

	PI[playerid][Posao] = 0;
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Posao` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Posao], PI[playerid][SQLID]);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste dali otkaz.");
	return 1;
}

CMD:posao(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(IsPlayerInRangeOfPoint(playerid, 5.0, 228.0947,-1408.8477,13.4279))
	{
		if(PI[playerid][Posao] != 0)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imate posao morate prvo dati otkaz (/otkaz)!");

		PI[playerid][Posao] = POSAO_KOSACTRAVE;
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Posao` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Posao], PI[playerid][SQLID]);
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste se zaposlili kao {FF0000}Kosac Trave.");
		CheckQuestDone(playerid, 7);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1752.5144,-1894.0979,13.5574))
	{
	    if(PI[playerid][Posao] != 0)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imate posao morate prvo dati otkaz (/otkaz)!");
			
        PI[playerid][Posao] = POSAO_UBER;
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Posao` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Posao], PI[playerid][SQLID]);
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste se zaposlili kao {FF0000}Uber.");
		CheckQuestDone(playerid, 7);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1891.9248,-2328.6655,13.5469))
	{
	    if(PI[playerid][Posao] != 0)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imate posao morate prvo dati otkaz (/otkaz)!");

        PI[playerid][Posao] = POSAO_PILOT;
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Posao` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Posao], PI[playerid][SQLID]);
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste se zaposlili kao {FF0000}Pilot.");
		CheckQuestDone(playerid, 7);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1751.1300,-1943.7557,13.5691))
	{
	    if(PI[playerid][Posao] != 0)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imate posao morate prvo dati otkaz (/otkaz)!");

        PI[playerid][Posao] = POSAO_MASINOVODJA;
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Posao` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Posao], PI[playerid][SQLID]);
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste se zaposlili kao {FF0000}Masinovodja.");
		CheckQuestDone(playerid, 7);
	}
	return 1;
}

CMD:uniforma(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Posao] == POSAO_KOSACTRAVE)
	{
	    if(PosaoUniforma[playerid] == 0)
		{
	    	if(IsPlayerInRangeOfPoint(playerid, 3.0, 226.2475,-1407.5587,13.4177))
			{
				PosaoUniforma[playerid] = 1;
				if(PI[playerid][Pol] == 1) SetPlayerSkin(playerid, 35);
				else if(PI[playerid][Pol] == 2) SetPlayerSkin(playerid, 191);
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste uniformu sada kucajte {FF0000}/startjob {FFFFFF}kako bi zapoceli posao.");
			}
			else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu za presvlacenje!");
		}
		else
		{
		    if(KosacTraveCP[playerid] != 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete skinuti uniformu dok ste na poslu!");
			PosaoUniforma[playerid] = 0;
			SetPlayerSkin(playerid, PI[playerid][Skin]);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Skinuli ste uniformu od Vaseg posla!");
		}
	}
	if(PI[playerid][Posao] == POSAO_UBER)
	{
	    if(PosaoUniforma[playerid] == 0)
		{
	    	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1752.8091,-1903.1075,13.5631))
			{
				PosaoUniforma[playerid] = 1;
				if(PI[playerid][Pol] == 1) SetPlayerSkin(playerid, 7);
				else if(PI[playerid][Pol] == 2) SetPlayerSkin(playerid, 9);
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste uniformu sada kucajte {FF0000}/startjob {FFFFFF}kako bi zapoceli posao.");
			}
			else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu za presvlacenje!");
		}
		else
		{
		    if(KosacTraveCP[playerid] != 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete skinuti uniformu dok ste na poslu!");
			PosaoUniforma[playerid] = 0;
			SetPlayerSkin(playerid, PI[playerid][Skin]);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Skinuli ste uniformu od Vaseg posla!");
		}
	}
	if(PI[playerid][Posao] == POSAO_PILOT)
	{
	    if(PosaoUniforma[playerid] == 0)
		{
	    	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1892.0040,-2325.0579,13.5469))
			{
				PosaoUniforma[playerid] = 1;
				if(PI[playerid][Pol] == 1) SetPlayerSkin(playerid, 61);
				else if(PI[playerid][Pol] == 2) SetPlayerSkin(playerid, 141);
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste uniformu sada kucajte {FF0000}/startjob {FFFFFF}kako bi zapoceli posao.");
			}
			else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu za presvlacenje!");
		}
		else
		{
		    if(KosacTraveCP[playerid] != 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete skinuti uniformu dok ste na poslu!");
			PosaoUniforma[playerid] = 0;
			SetPlayerSkin(playerid, PI[playerid][Skin]);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Skinuli ste uniformu od Vaseg posla!");
		}
	}
	if(PI[playerid][Posao] == POSAO_MASINOVODJA)
	{
	    if(PosaoUniforma[playerid] == 0)
		{
	    	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1742.9618,-1943.5731,13.5698))
			{
				PosaoUniforma[playerid] = 1;
				if(PI[playerid][Pol] == 1) SetPlayerSkin(playerid, 61);
				else if(PI[playerid][Pol] == 2) SetPlayerSkin(playerid, 141);
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste uniformu sada kucajte {FF0000}/startjob {FFFFFF}kako bi zapoceli posao.");
			}
			else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu za presvlacenje!");
		}
		else
		{
		    if(KosacTraveCP[playerid] != 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete skinuti uniformu dok ste na poslu!");
			PosaoUniforma[playerid] = 0;
			SetPlayerSkin(playerid, PI[playerid][Skin]);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Skinuli ste uniformu od Vaseg posla!");
		}
	}
	return 1;
}

CMD:startjob(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete koristiti ovu komandu iz drugog vozila.");

    if(IsPlayerInRangeOfPoint(playerid, 4.0, 227.6355,-1414.6202,13.4069))
	{
	    if(PI[playerid][Posao] == POSAO_KOSACTRAVE)
	    {
	        if(PosaoUniforma[playerid] == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli uniformu (/uniforma)!");

			Job_Vehicle[playerid][jveh_ID] = AddStaticVehicleEx(572, 231.9210, -1419.8641, 12.9983, 308.7068, -1, -1, 2400);
  			Kosac_Vozilo[playerid] = 1;
  			new string[150];
    		format(string, sizeof(string), "{1fde8c}[ KOSAC TRAVE ]\n{FFFFFF}%s", ReturnPlayerName(playerid));
			Job_Vehicle[playerid][jveh_Veh3D] = CreateDynamic3DTextLabel(string, -1 , 0.0, 0.0, 0.0, 15.0,_, Job_Vehicle[playerid][jveh_ID],_, 0, 0,_,_);
			PutPlayerInVehicle(playerid, Job_Vehicle[playerid][jveh_ID], 0);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Zapoceli ste sa kosenjem, sada pratite {FF0000}crvene {FFFFFF}markere!");
			SetPlayerCheckpoint(playerid, 240.1591,-1413.3048,13.5087, 3.0);
			KosacTraveCP[playerid] = 1;
		}
		else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste zaposljeni kao Kosac Trave.");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, 1752.8835,-1898.5668,13.5573))
	{
	    if(PI[playerid][Posao] == POSAO_UBER)
	    {
	        if(PosaoUniforma[playerid] == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli uniformu (/uniforma)!");

			Job_Vehicle[playerid][jveh_ID] = AddStaticVehicleEx(420, 1781.0479, -1898.5383, 13.0949,269.9758, 6, 6, 2400);
  			Uber_Vozilo[playerid] = 1;
  			new string[150];
    		format(string, sizeof(string), "{1fde8c}[ UBER ]\n{FFFFFF}%s", ReturnPlayerName(playerid));
			Job_Vehicle[playerid][jveh_Veh3D] = CreateDynamic3DTextLabel(string, -1 , 0.0, 0.0, 0.0, 15.0,_, Job_Vehicle[playerid][jveh_ID],_, 0, 0,_,_);
			PutPlayerInVehicle(playerid, Job_Vehicle[playerid][jveh_ID], 0);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Otidjite po putnika, mesto na mapi vam je oznaceno {FF0000}crvenim {FFFFFF}markerom!");

            new rand = random(sizeof(uberPutnikPos));
			SetPlayerCheckpoint(playerid, uberPutnikPos[rand][uberPutnikX], uberPutnikPos[rand][uberPutnikY], uberPutnikPos[rand][uberPutnikZ], 3.0);
			uberActor[playerid] = CreateActor(uberPutnikPos[rand][uberPutnikSkin], uberPutnikPos[rand][uberPutnikX], uberPutnikPos[rand][uberPutnikY], uberPutnikPos[rand][uberPutnikZ], uberPutnikPos[rand][uberPutnikA]);
			PosaoUberCP[playerid] = 1;
		}
		else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste zaposljeni kao Uber.");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, 1892.0985,-2332.3525,13.5469))
	{
	    if(PI[playerid][Posao] == POSAO_PILOT)
	    {
	        if(PosaoUniforma[playerid] == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli uniformu (/uniforma)!");

			Dialog_Show(playerid, dialog_let, DIALOG_STYLE_LIST, "{1fde8c}Let", "{1fde8c}> {FFFFFF}Let 1 - Los Santos/San Fierro\n\
                                                                                 {1fde8c}> {FFFFFF}Let 2 - Los Santos/Las Venturas\n\
                                                                                 {1fde8c}> {FFFFFF}Let 3 - Los Santos/Las Venturas/San Fierro", "Odaberi", "Izlaz");
		}
		else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste zaposljeni kao Pilot.");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, 1734.9536,-1943.5779,13.5698))
	{
	    if(PI[playerid][Posao] == POSAO_MASINOVODJA)
	    {
	        if(PosaoUniforma[playerid] == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli uniformu (/uniforma)!");

			Job_Vehicle[playerid][jveh_ID] = AddStaticVehicleEx(538, 1730.0007, -1955.9659, 13.2678, 270.00000000, -1, -1, 2400);
  			Masinovodja_Vozilo[playerid] = 1;
  			new string[150];
    		format(string, sizeof(string), "{1fde8c}[ MASINOVODJA ]\n{FFFFFF}%s", ReturnPlayerName(playerid));
			Job_Vehicle[playerid][jveh_Veh3D] = CreateDynamic3DTextLabel(string, -1 , 0.0, 0.0, 0.0, 15.0,_, Job_Vehicle[playerid][jveh_ID],_, 0, 0,_,_);
			PutPlayerInVehicle(playerid, Job_Vehicle[playerid][jveh_ID], 0);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Pokrenuli ste rutu oko cele SA mape pratite {FF0000}crvene {FFFFFF}markere!");
			va_SendClientMessage(playerid, 0xFF0000FF, "#Napomena: {FFFFFF}Ono sto je vazno da znate kada stajete na stanicu jeste da vam brzina ne sme biti iznad {F81414}20kmh{FFFFFF}!");
			Masinovodja_CP[playerid] = 1;
			SetPlayerCheckpoint(playerid, 815.2284,-1366.7013,-1.6706, 3.0);
		}
		else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste zaposljeni kao Uber.");
	}
	return 1;
}

CMD:prekiniposao(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Posao] == POSAO_KOSACTRAVE)
	{
		if(KosacTraveCP[playerid] >= 1)
		{
		    DisablePlayerCheckpoint(playerid);
			KosacTraveCP[playerid] = 0;
			DestroyDynamic3DTextLabel(Job_Vehicle[playerid][jveh_Veh3D]);
			Job_Vehicle[playerid][jveh_Created] = false;
			DestroyVehicle(Job_Vehicle[playerid][jveh_ID]);
			Kosac_Vozilo[playerid] = -1;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prekinuli ste posao!");
		}
		else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste pokrenuli posao!");
	}
	else if(PI[playerid][Posao] == POSAO_UBER)
	{
		if(PosaoUberCP[playerid] >= 1)
		{
		    DisablePlayerCheckpoint(playerid);
			PosaoUberCP[playerid] = 0;
			DestroyDynamic3DTextLabel(Job_Vehicle[playerid][jveh_Veh3D]);
			Job_Vehicle[playerid][jveh_Created] = false;
			DestroyVehicle(Job_Vehicle[playerid][jveh_ID]);
			Uber_Vozilo[playerid] = -1;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prekinuli ste posao!");
		}
		else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste pokrenuli posao!");
	}
	else if(PI[playerid][Posao] == POSAO_PILOT)
	{
		if(PilotCP[playerid] >= 1)
		{
		    DisablePlayerCheckpoint(playerid);
			PilotCP[playerid] = 0;
			DestroyDynamic3DTextLabel(Job_Vehicle[playerid][jveh_Veh3D]);
			Job_Vehicle[playerid][jveh_Created] = false;
			DestroyVehicle(Job_Vehicle[playerid][jveh_ID]);
			Pilot_Vozilo[playerid] = -1;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prekinuli ste posao!");
		}
		else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste pokrenuli posao!");
	}
	else if(PI[playerid][Posao] == POSAO_MASINOVODJA)
	{
		if(Masinovodja_CP[playerid] >= 1)
		{
		    DisablePlayerCheckpoint(playerid);
			Masinovodja_CP[playerid] = 0;
			DestroyDynamic3DTextLabel(Job_Vehicle[playerid][jveh_Veh3D]);
			Job_Vehicle[playerid][jveh_Created] = false;
			DestroyVehicle(Job_Vehicle[playerid][jveh_ID]);
			Masinovodja_Vozilo[playerid] = -1;
			RemovePlayerFromVehicle(playerid);
			SetCameraBehindPlayer(playerid);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prekinuli ste posao!");
		}
		else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste pokrenuli posao!");
	}
	return 1;
}

CMD:lp(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	static DialogStrgEx[2048],
		globalstr[144];

	if(PI[playerid][Admin] >= 1)
	{
		strdel(DialogStrgEx, 0, sizeof(DialogStrgEx));
		strcat(DialogStrgEx, "#\tIme Igraca\tID Igraca");

		for( new i = 1; i < MAX_PITANJA; i++ )
		{
			format(globalstr, 144, "\n%d\t%s\t(%d)", i, PitanjaInfo[i][pIme_Igraca], PitanjaInfo[i][pID_Igraca]);
            strcat(DialogStrgEx, globalstr);
		}

		Dialog_Show(playerid, dialog_lp, DIALOG_STYLE_TABLIST_HEADERS, "{1b71bc}Lista Pitanja", DialogStrgEx, "Odaberi", "Odustani");
		strdel(DialogStrgEx, 0, sizeof(DialogStrgEx));
	}
	else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
    return 1;
}

CMD:pogledajodgovor(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(OdgovoriInfo[playerid][Postavio_Pitanje] == false)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste postavili pitanje.");

	if(OdgovoriInfo[playerid][pOdgovorio] == false)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Na Vase pitanje jos nije dat odgovor!");

	Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Odgovor:", "{FFFFFF}Admin {1b71bc}%s {FFFFFF}je odgovorio na vase pitanje.\n\n\
																			     %s", "OK", "", OdgovoriInfo[playerid][pOdgovorio_Ime], OdgovoriInfo[playerid][pOdgovor_Text]);
	OdgovoriInfo[playerid][Postavio_Pitanje] = false;
	OdgovoriInfo[playerid][pOdgovorio] = false;
	strmid(OdgovoriInfo[playerid][pOdgovorio_Ime], "Prazno", 0, strlen("Prazno"), 32);
	strmid(OdgovoriInfo[playerid][pOdgovor_Text], "Prazno", 0, strlen("Prazno"), 128);
	return 1;
}

CMD:plata(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	    
	if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	foreach(new i : Player)
    {
    	PayDay(i);
    }
    return 1;
}

CMD:gotopos(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	    
	if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	
    if(GetPlayerVirtualWorld(playerid) != 0) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete koristiti ovu komandu dok Vam je VW razlicit od 0!");
    
	if(GetPlayerInterior(playerid) != 0) 
	 	return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete koristiti ovu komandu dok ste u Enterieru!");
    
	static Float:Pos[3], 
		ent;
    
	if(sscanf(params, "fffi", Pos[0], Pos[1], Pos[2], ent)) 
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/gotopos [X] [Y] [Z] [Interior ID]");
	
	SetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
 	SetPlayerInterior(playerid, ent);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Teleportovani ste na upisane koordinate!");
    return 1;
}

CMD:server(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	Dialog_Show(playerid, dialog_server, DIALOG_STYLE_TABLIST, "{1b71bc}Server Podesavanja", "{1b71bc}> {FFFFFF}Registracija\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Kupovina Vozila\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Pitanja\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Reporta\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Dupli Respekti\t%s\n\
																							  {1b71bc}> {FFFFFF}Oglas\t%s", "Odaberi", "Izlaz",
																							  ServerInfo[sRegistracija] == 1 ? "{00FF00}Ukljucena" : "{FF0000}Iskljucena",
																							  ServerInfo[sKupovinaVozila] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sPitanja] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sReport] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen",
																							  ServerInfo[sDupliRespekti] == 1 ? "{00FF00}Ukljuceni" : "{FF0000}Iskljuceni",
																							  ServerInfo[sOglas] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen");
    return 1;
}

CMD:nagrade(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 4)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	Dialog_Show(playerid, dialog_nagrade, DIALOG_STYLE_LIST, "{1b71bc}Nagrade", "{1b71bc}> {FFFFFF}Level UP\n\
																                 {1b71bc}> {FFFFFF}Respect UP\n\
																                 {1b71bc}> {FFFFFF}Money UP\n\
																                 {1b71bc}> {FFFFFF}Gold UP", "Odaberi", "Izlaz");
	return 1;
}

CMD:pljackajbanku(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
	
	new sat, minut, sekund, pd_clanovi = 0;
	gettime(sat, minut, sekund); 

	if(sat >= 0 && sat <= 9)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pljackanje banke nije dozvoljeno u ovo vrijeme...");
		
    if(!ClanIlegalca(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi mafije / bande!");

	if(vanrednostanje > 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}U toku je neka veca pljacka, ne mozes sada ovo!");

	if(!IsPlayerInRangeOfPoint(playerid, 1.5, 1391.4470,1.3144,1000.9153))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u banci kod sefa!");

	if(PljackaBanku[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec si pokrenuo pljacku banke.");

	if(PI[playerid][Level] < 4)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras biti minimalno level 4!");

	if(GetPlayerWeapon(playerid) >= WEAPON_COLT45 && GetPlayerWeapon(playerid) <= WEAPON_BOMB)
 		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate oruzije!");
	
	foreach(new i : Player)
	{
	    if(ClanDB(i)) pd_clanovi ++;
	}

	if(pd_clanovi < 3)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Mora biti minimum 3 policajca na serveru da bi mogli pljackati banku.");


	va_SendClientMessageToAll(-1, "{FF0000}UDARNE VESTI | {FFFFFF}Neko upravo pokusava opljackati Los Santos Banku!");
	va_SendClientMessageToAll(-1, "Molimo sve nadlezne da intervenisu, a civile da se odmaknu od tog mesta!");
	
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Krenuli ste sa pljackom banke, ne udaljavajte se od sefa!");
	va_SendClientMessage(playerid, -1, "Ukoliko se udaljite od sefa pljacka ce biti prekinuta!");
	
	Trazeni_Level[playerid] += 6;
	PostaviWanted(playerid, "Pljacka LS Banke", "Alarm Banke");
	
	PljackaBanku[playerid] = 1; PljackaBankuVrijeme[playerid] = 600;
	PBSefTimer[playerid] = SetTimerEx("PljackaBTimer", 1000, true, "i", playerid);
    vanrednostanje = 1;
    
    OnePlayAnim(playerid, "BOMBER", "BOM_Plant_Loop", 3.0, 1, 0, 0, 0, 0);
    TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:pljackajzlataru(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	new sat, minut, sekund, pd_clanovi = 0;
	gettime(sat, minut, sekund);

	if(sat >= 0 && sat <= 9)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pljackanje zlatare nije dozvoljeno u ovo vrijeme...");

    if(!ClanIlegalca(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi mafije / bande!");

	if(vanrednostanje > 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}U toku je neka veca pljacka, ne mozes sada ovo!");

	if(!IsPlayerInRangeOfPoint(playerid, 1.5, 1012.1417,2319.8320,-19.7800))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u zlatari kod sefa!");

	if(PljackaZlataru[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec si pokrenuo pljacku zlatare.");

	if(PI[playerid][Level] < 4)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras biti minimalno level 4!");

	if(GetPlayerWeapon(playerid) >= WEAPON_COLT45 && GetPlayerWeapon(playerid) <= WEAPON_BOMB)
 		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate oruzije!");

	foreach(new i : Player)
	{
	    if(ClanDB(i)) pd_clanovi ++;
	}

	if(pd_clanovi < 3)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Mora biti minimum 3 policajca na serveru da bi mogli pljackati zlataru.");


	va_SendClientMessageToAll(-1, "{FF0000}UDARNE VESTI | {FFFFFF}Neko upravo pokusava opljackati Los Santos Zlataru!");
	va_SendClientMessageToAll(-1, "Molimo sve nadlezne da intervenisu, a civile da se odmaknu od tog mesta!");

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Krenuli ste sa pljackom zlatare, ne udaljavajte se od sefa!");
	va_SendClientMessage(playerid, -1, "Ukoliko se udaljite od sefa pljacka ce biti prekinuta!");

	Trazeni_Level[playerid] += 6;
	PostaviWanted(playerid, "Pljacka LS Zlatare", "Alarm Zlatare");

	PljackaZlataru[playerid] = 1; PljackaZlataruVrijeme[playerid] = 600;
	PBSefTimer[playerid] = SetTimerEx("PljackaZTimer", 1000, true, "i", playerid);
    vanrednostanje = 1;

    OnePlayAnim(playerid, "BOMBER", "BOM_Plant_Loop", 3.0, 1, 0, 0, 0, 0);
    TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:zauzmiteritoriju(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
    
	if(!ClanIlegalca(playerid)) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi mafije / bande!");
    
	if(IsPlayerInAnyVehicle(playerid)) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti van vozila!");
	
	if(PI[playerid][Level] < 3) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+ da bi zauzimali teritoriju!");
  	
	if(GetPlayerWeapon(playerid) != WEAPON_DEAGLE && GetPlayerWeapon(playerid) != WEAPON_M4 && GetPlayerWeapon(playerid) != WEAPON_MP5 && GetPlayerWeapon(playerid) != WEAPON_AK47) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Za zauzimanje teritorije potrebno Vam je neko od sljedecih oruzja: DESERT, M4, MP5, AK-47!");
    
	if(GetPlayerAmmo(playerid) == 0) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate metaka...");
	
	if(PI[playerid][ZVreme] != 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ponovo mozete zauzimati za %d minuta!", PI[playerid][ZVreme]);
	
	new T_ID = KodTeritorije(playerid);
	if(T_ID == -1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u polju teritorije!");
	
	if(PI[playerid][Clan] == TeritorijeInfo[T_ID][t_Org_ID]) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete zauzimati vasu teritoriju!");
	
	if(TeritorijeInfo[T_ID][t_Time] != 0)
    	return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ovu teritoriju je neko zauzimao u skorije vrijeme. Sacekajte jos %d minuta!", TeritorijeInfo[T_ID][t_Time]);
	
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, TeritorijeInfo[T_ID][t_PickupPos][0], TeritorijeInfo[T_ID][t_PickupPos][1], TeritorijeInfo[T_ID][t_PickupPos][2])) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na pickupu te teritorije!");
	
	new t_clanovi = 0, p_clanovi = 0;
	foreach(new i : Player)
	{
	    if(PI[i][Clan] == TeritorijeInfo[T_ID][t_Org_ID]) { p_clanovi ++; }
 	    if(PI[i][Clan] == PI[playerid][Clan]) { t_clanovi ++; }
	}
	if(t_clanovi < 3) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Mora biti minimum 3 clana Vase organizacije online.");
	
	if(TeritorijeInfo[T_ID][t_Org_ID] != -1)
	{
		if(p_clanovi < 3) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Mora biti minimum 3 clana protivnicke organizacije online da bi mogli zauzimati teritoriju.");
        new string[256], status[8];
        if(PI[playerid][Clan] == 3) status = "Banda"; //GSF
        else if(PI[playerid][Clan] == 4) status = "Banda"; //BALLAS
        else if(PI[playerid][Clan] == 5) status = "Banda"; //MS13
        else if(PI[playerid][Clan] == 6) status = "Mafija"; //BDT
        else if(PI[playerid][Clan] == 7) status = "Mafija"; //LCN
		format(string, sizeof(string), "#TERITORIJA: {FFFFFF}Druga %s (%s) pokusava da preuzme Vasu teritoriju!", status, OrgInfo[PI[playerid][Clan]][oIme]);
	    OrgPoruka(TeritorijeInfo[T_ID][t_Org_ID], 0x1fdea7FF, string);
	}
	if(PI[playerid][Clan] == 3) { GangZoneFlashForAll(TeritorijeInfo[T_ID][t_ID], 0x068728AA); } //GSF
	else if(PI[playerid][Clan] == 4) { GangZoneFlashForAll(TeritorijeInfo[T_ID][t_ID], 0x6D54A9AA); } //BALLAS
	else if(PI[playerid][Clan] == 5) { GangZoneFlashForAll(TeritorijeInfo[T_ID][t_ID], 0xDABB3EAA); } //MS13
	else if(PI[playerid][Clan] == 6) { GangZoneFlashForAll(TeritorijeInfo[T_ID][t_ID], 0xFF000000); } //BDT
	else if(PI[playerid][Clan] == 7) { GangZoneFlashForAll(TeritorijeInfo[T_ID][t_ID], 0x656463AA); } //LCN
    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Krenuli ste sa zauzimanjem teritorije, nemojte izlaziti izvan zone i nemojte ici AFK!");
	
	new string[250];
	format(string, sizeof(string), "#TERITORIJA: {FFFFFF}Clan Vase organizacije %s je poceo sa zauzimanjem teritorije ID: %d", ReturnPlayerName(playerid), T_ID);
	OrgPoruka(PI[playerid][Clan], 0x1fdea7FF, string);
	TeritorijeInfo[T_ID][t_Time] = 30; //30 min
	mysql_tqueryEx(SQL, "UPDATE `zones` SET `Time` = '%d'  WHERE `SQLID` = '%d'", TeritorijeInfo[T_ID][t_Time], TeritorijeInfo[T_ID][SQLID]);
	Zauzimanje_ID[playerid] = T_ID;
	Zauzimanje_Time[playerid] = 600; //zauzimanje 10 min
	Zauzimanje_Timer[playerid] = SetTimerEx("ZauzimanjeTeritorije", 1000, true, "i", playerid);
	PI[playerid][ZVreme] += 30; //30 min
	DisablePlayerCheckpoint(playerid);
	Zauzimanje_CP[playerid] = 1;
   	mysql_tqueryEx(SQL, "UPDATE `users` SET `ZVreme` = '%d' WHERE `SQLID` = '%d'", PI[playerid][ZVreme], PI[playerid][SQLID]);
	return 1;
}

CMD:kupiseme(playerid, const params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, 1938.2871, -1983.6605, 13.5469)) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu kod dilera!");

	if(!ClanBande(playerid)) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi bande!");
	
	new seme;
	
	if(sscanf(params, "i", seme)) 
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/kupiseme [kolicina] [1 seme - 100$]");
	
	if(seme > 100 || seme < 1) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes vise od 100 semena odjednom!");
    
    new novac = seme * 100;
    
    if(GetPlayerMoney(playerid) < novac) 
    	return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas dovoljno novca!");
	
	PI[playerid][Seme] += seme;
	PI[playerid][Novac] -= novac;
	GivePlayerMoney(playerid, -novac);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Seme` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Seme], PI[playerid][SQLID]);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno si kupio %d semena za %d$", seme, novac);
	return 1;
}

CMD:obradidrogu(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(!ClanBande(playerid)) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi bande!");
	
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, -444.5218,-1720.6271,9.3911)) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu!");

	if(PI[playerid][NeoDroga] == 0) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas neobradjene droge!");

	PI[playerid][Droga] += 50;
	PI[playerid][NeoDroga] -= 100;

	mysql_tqueryEx(SQL, "UPDATE `users` SET `Droga` = '%d', `NeoDroga` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Droga], PI[playerid][NeoDroga], PI[playerid][SQLID]);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Obradili ste 100g droge i dobili ste 50g ciste droge.");
	return 1;
}

CMD:posadidrogu(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(!ClanBande(playerid)) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi bande!");

	if(PI[playerid][Seme] == 0) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas semena!");

	if(PI[playerid][PosadioBDroge] >= 1) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec si posadio drogu!");
    
    static plant, 
    	Float:Poz[3];
    
    for(new id = 1; id < MAX_PLANTAZA; id++)
	{
	    if(PlantazaInfo[id][SQLID] < 1)
        {
            plant = id; break;
        }
	}
    if(plant == 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum biljka droge je dostignut!");
	
	if(GetPlayerInterior(playerid) != 0) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete posaditi drogu u enterieru!");
    
	GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
	
	PlantazaInfo[plant][SQLID] = plant;
	strmid(PlantazaInfo[plant][PlantazaPosadio], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
	PlantazaInfo[plant][PlantazaX] = Poz[0];
	PlantazaInfo[plant][PlantazaY] = Poz[1];
	PlantazaInfo[plant][PlantazaZ] = Poz[2];
	PlantazaInfo[plant][PlantazaVreme] = 300;
	PlantazaLabelUpdate(plant);	

	DestroyDynamicObject(PlantazaObjekat[plant]);
    PlantazaObjekat[plant] = CreateDynamicObject(824, PlantazaInfo[plant][PlantazaX], PlantazaInfo[plant][PlantazaY], PlantazaInfo[plant][PlantazaZ]-2.5, 0.0, 0.0, 0.0);

	mysql_tqueryEx(SQL, "INSERT INTO `plants` (SQLID, PlantazaPosadio, PlantazaX, PlantazaY, PlantazaZ, PlantazaVreme) \
  		VALUES('%d', '%s', '%f', '%f', '%f', '%d')", plant, PlantazaInfo[plant][PlantazaPosadio], Poz[0], Poz[1], Poz[2], PlantazaInfo[plant][PlantazaVreme]);

	defer DrogaPlantazaTimer(plant);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Posadili ste drogu sada sacekajte 5 minuta da droga naraste!");

	PI[playerid][PosadioBDroge] = plant;
	PI[playerid][Seme] --;
	mysql_tqueryEx(SQL, "UPDATE `users` SET `PosadioBDroge` = '%d', `Seme` = '%d' WHERE `SQLID` = '%d'", PI[playerid][PosadioBDroge], PI[playerid][Seme], PI[playerid][SQLID]);
	return 1;
}

CMD:oberidrogu(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(!ClanBande(playerid)) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi bande!");

	new plant;
	plant = GetNearestPlant(playerid);
	if(plant == -1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nema biljke u blizini!");

	new ime[MAX_PLAYER_NAME];
	GetPlayerName(playerid, ime, sizeof(ime));
	if(strcmp(PlantazaInfo[plant][PlantazaPosadio], ime, true)) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes ubrati tudju drogu!");

	if(PlantazaInfo[plant][PlantazaVreme] > 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Droga nije jos narasla.");

	PlantazaInfo[plant][SQLID] = 0;
	PlantazaInfo[plant][PlantazaX] = 0;
	PlantazaInfo[plant][PlantazaY] = 0;
	PlantazaInfo[plant][PlantazaZ] = 0;
	PlantazaInfo[plant][PlantazaVreme] = 0;

	DestroyDynamic3DTextLabel(Plantaza3D[plant]);
	DestroyDynamicObject(PlantazaObjekat[plant]);

	mysql_tqueryEx(SQL, "DELETE FROM `plants` WHERE `SQLID` = '%d'", plant);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ubrali ste 100g neobradjene droge!");
	PI[playerid][PosadioBDroge] = 0;
	PI[playerid][NeoDroga] += 100;
	mysql_tqueryEx(SQL, "UPDATE `users` SET `PosadioBDroge` = '%d', `NeoDroga` = '%d' WHERE `SQLID` = '%d'", PI[playerid][PosadioBDroge], PI[playerid][NeoDroga], PI[playerid][SQLID]);
	return 1;
}

CMD:sverc(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(!ClanMafije(playerid)) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi mafije!");
	
	new voz = GetPlayerVehicleID(playerid);
	if(PI[playerid][Clan] == 6 || PI[playerid][Lider] == 6)
	{
	    if(voz == vBDT[5] || voz == vBDT[6])
	    {
	    	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) 
	    		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na mestu vozaca da bi pokrenuli sverc!");
		   	
		   	if(SvercMaterijala[playerid] >= 1) 
		   		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec svercujes materijale!");
			
			if(!IsPlayerInRangeOfPoint(playerid, 3.0, 1248.1407,-814.8812,84.1477)) 
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu pokretanja sverca!");
			
			if(PI[playerid][Novac] < 200) 
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca za sverc (200$)");
			
			SvercMaterijala[playerid] = 1; 
			PI[playerid][Novac] -= 200;
			GivePlayerMoney(playerid, -200);
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
			SetPlayerCheckpoint(playerid, -272.1140,-2155.1370,28.6874, 5.0);
			va_SendClientMessage(playerid, 0xC0C0C0AA, "[BDT]: {FFFFFF}Krenuli ste sa svercom otidjite do mesta da utovarite materijale.");
		}
		else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u kombiju za sverc!");
	}
	else if(PI[playerid][Clan] == 7 || PI[playerid][Lider] == 7)
	{
	    if(voz == vLCN[0] || voz == vLCN[1] || voz == vLCN[2] || voz == vLCN[3])
	    {
	    	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) 
	    		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na mestu vozaca da bi pokrenuli sverc!");
		   	
		   	if(SvercMaterijala[playerid] >= 1) 
		   		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec svercujes materijale!");
			
			if(!IsPlayerInRangeOfPoint(playerid, 3.0, 1211.3569,-2565.4778,5.7955)) 
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu pokretanja sverca!");
			
			if(PI[playerid][Novac] < 200) 
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca za sverc (200$)");
			
			SvercMaterijala[playerid] = 1; 
			PI[playerid][Novac] -= 200;
			GivePlayerMoney(playerid, -200);
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
			SetPlayerCheckpoint(playerid, -272.1140,-2155.1370,28.6874, 5.0);
			va_SendClientMessage(playerid, 0xdfc933AA, "[LCN]: {FFFFFF}Krenuli ste sa svercom otidjite do mesta da utovarite materijale.");
		}
		else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u kombiju za sverc!");
	}
	return 1;
}

CMD:proveri(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 2)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	static id;

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/proveri [ID]");

	if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");
	    
    new sat, minut, sekund, godina, mesec, dan;
	gettime(sat, minut, sekund);
	getdate(godina, mesec, dan);
    Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}VIBE - Stats", "{1b71bc}Opste podatke:\n\
                                                                                     {1b71bc}Ime i Prezime: {FFFFFF}[%s] - {1b71bc}%02d:%02d:%02d - %02d.%02d.%02d\n\
                                                                                     {1b71bc}Pol: {FFFFFF}[%s] | {1b71bc}Godine: {FFFFFF}[%d] | {1b71bc}Drzava: {FFFFFF}[%s]\n\
                                                                                     {1b71bc}Level: {FFFFFF}[%d] | {1b71bc}Respekti: {FFFFFF}[%d/%d] | {1b71bc}Sati Igre: {FFFFFF}[%d]\n\
                                                                                     {1b71bc}Mutiran: {FFFFFF}[%s] | {1b71bc}Upozorenja: {FFFFFF}[%d/5]| {1b71bc}Mobilni: {FFFFFF}[%s]\n\
																					 {1b71bc}Telefonski Broj: {FFFFFF}[%d] | {1b71bc}Vip Level: {FFFFFF}[%s] | {1b71bc}Organizacija: {FFFFFF}[%s]\n\
																					 {1b71bc}Posao: {FFFFFF}[%s] | {1b71bc}Marketing Team: {FFFFFF}[%s]\n\n\
                                                                                     {1b71bc}Bogatstvo:\n\
                                                                                     {1b71bc}Novac Dzep: {FFFFFF}[%d$] | {1b71bc}Novac Banka: {FFFFFF}[%d$] | {1b71bc}Zlato: {FFFFFF}[%dg]\n\n\
                                                                                     {1b71bc}Imovina:\n\
                                                                                     {1b71bc}Kuca: {FFFFFF}[%d] | {1b71bc}Rent Kuca: {FFFFFF}[%d] | {1b71bc}Stan: {FFFFFF}[%d] | {1b71bc}Firma: {FFFFFF}[%d]\n\n\
																					 {1b71bc}Dozvole:\n\
																					 {1b71bc}Auto Dozvola: {FFFFFF}[%s] | {1b71bc}Moto Dozvola: {FFFFFF}[%s] | {1b71bc}Kamion Dozvola: {FFFFFF}[%s]\n\
																					 {1b71bc}Brod Dozvola: {FFFFFF}[%s] | {1b71bc}Avion Dozvola: {FFFFFF}[%s] | {1b71bc}Oruzije Dozvola: {FFFFFF}[%s]\n\n\
																					 {1b71bc}Droga i Materijali:\n\
																					 {1b71bc}Droga: {FFFFFF}[%dg] | {1b71bc}Seme Droge: {FFFFFF}[%d] | {1b71bc}Neobradjena droga: {FFFFFF}[%dg] | {1b71bc}Materijali: {FFFFFF}[%d]\n\n\
																					 {1b71bc}Vozila:\n\
																					 {1b71bc}Vozilo 1: {FFFFFF}[%d] | {1b71bc}Vozilo 2: {FFFFFF}[%d] | {1b71bc}Vozilo 3: {FFFFFF}[%d]", "OK", "",
																					 ReturnPlayerName(id), sat, minut, sekund, dan, mesec, godina, PI[id][Pol] == 1 ? "Musko" : "Zensko",
																					 PI[id][Godine], CheckCountry(PI[id][Drzava]), PI[id][Level], PI[id][Respekti], (PI[id][Level] * 2) + 2, PI[id][SatiIgre],
                                                                                     PI[id][Mutiran] == 1 ? "Da" : "Ne", PI[id][Warn], PI[id][Mobilni] != 0 ? "Poseduje" : "Ne Poseduje", PI[id][Mobilni],
																					 GetVipRank(PI[id][Vip]), OrgIme(PI[id][Clan]), PosaoIme(PI[id][Posao]), PI[id][MTeam] == 1 ? "Da" : "Ne",
																					 PI[id][Novac], PI[id][NovacBanka], PI[id][Zlato], PI[id][Kuca],
																					 PI[id][Rent], PI[id][Stan], PI[id][Firma], 
																					 PI[id][ADozvola] == 1 ? "Poseduje" : "Ne Poseduje",
																					 PI[id][MotorDozvola] == 1 ? "Poseduje" : "Ne Poseduje", PI[id][KamionDozvola] == 1 ? "Poseduje" : "Ne Poseduje",
																					 PI[id][BrodDozvola] == 1 ? "Poseduje" : "Ne Poseduje", PI[id][AvionDozvola] == 1 ? "Poseduje" : "Ne Poseduje",
																					 PI[playerid][OruzijeDozvola] == 1 ? "Poseduje" : "Ne Poseduje", PI[id][Droga], PI[id][Seme], PI[id][NeoDroga],
																					 PI[id][Mats], PI[id][Vozilo1], PI[id][Vozilo2], PI[id][Vozilo3]);
	return 1;
}

CMD:makeadmin(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	static id,
		level;

	if(sscanf(params, "ud", id, level))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/makeadmin [ID] [Level]");

	if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");

	if(level < 0 || level > 6)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Admin Level ne moze biti manji od 0 i veci od 6!");
		
	if(level == 0)
	{
	    va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vam je skinuo admina.", ReturnPlayerName(playerid));
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Igracu %s ste skinuli admina.", ReturnPlayerName(id));
		
		PI[id][Admin] = level;
		if(PI[playerid][Pol] == 1) { PI[id][Skin] = 240; SetPlayerSkin(id, PI[playerid][Skin]); }
		else if(PI[playerid][Pol] == 2) { PI[id][Skin] = 91; SetPlayerSkin(id, PI[playerid][Skin]); }
	}
	else
	{
	    PI[id][Admin] = level;
	    if(PI[playerid][Pol] == 1) { PI[id][Skin] = 294; SetPlayerSkin(id, PI[playerid][Skin]); }
		else if(PI[playerid][Pol] == 2) { PI[id][Skin] = 211; SetPlayerSkin(id, PI[playerid][Skin]); }
		va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vam je dao Admin Level %d.", ReturnPlayerName(playerid), level);
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Igracu %s ste postavili Admin Level %d.", ReturnPlayerName(id), level);
	}
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Admin` = '%d', `Skin` = '%d' WHERE `SQLID` = '%d'", PI[id][Admin], PI[id][Skin], PI[id][SQLID]);
	return 1;
}

CMD:makevip(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 5)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	static id,
		level;

	if(sscanf(params, "ud", id, level))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/makevip [ID] [Level]");

	if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");

	if(level < 0 || level > 4)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vip Level ne moze biti manji od 0 i veci od 4!");

	if(level == 0)
	{
	    va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vam je skinuo vipa.", ReturnPlayerName(playerid));
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Igracu %s ste skinuli vipa.", ReturnPlayerName(id));

		PI[id][Vip] = level;
	}
	else
	{
	    PI[id][Vip] = level;
		va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vam je dao Vip Level %d.", ReturnPlayerName(playerid), level);
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Igracu %s ste postavili Vip Level %d.", ReturnPlayerName(id), level);
	}
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Vip` = '%d' WHERE `SQLID` = '%d'", PI[id][Vip], PI[id][SQLID]);
	return 1;
}

CMD:makemteam(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 5)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	static id,
		level;

	if(sscanf(params, "ui", id, level))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/makemteam [ID] [Level]");

	if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");

	if(level < 0 || level > 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Marketing Level ne moze biti manji od 0 i veci od 1!");

	if(level == 0)
	{
	    va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vam je skinuo marketing team rank.", ReturnPlayerName(playerid));
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Igracu %s ste skinuli marketing team rank.", ReturnPlayerName(id));

		PI[id][MTeam] = level;
	}
	else
	{
	    PI[id][MTeam] = level;
		va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vam je dao marketing team rank.", ReturnPlayerName(playerid));
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Igracu %s ste postavili marketing team rank.", ReturnPlayerName(id));
	}
	mysql_tqueryEx(SQL, "UPDATE `users` SET `MTeam` = '%d' WHERE `SQLID` = '%d'", PI[id][MTeam], PI[id][SQLID]);
	return 1;
}

CMD:cc(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	    
    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	foreach(new i : Player) { ClearChat(i, 100); }
 	va_SendClientMessageToAll(0x1b71bcFF, "VIBE: {FFFFFF}Chat cleared!");
	va_SendClientMessageToAll(-1, "| www{1b71bc}.vibeogc.samp.{FFFFFF}info |");
	
	static str[128];
	format(str, sizeof(str), "[ADMIN]: %s je ocistio chat.", ReturnPlayerName(playerid));
	AdminMessage(0xFF0000FF, str);
	return 1;
}

CMD:aduty(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	    
	if(AdminDuty[playerid] == 0)
	{
		va_SendClientMessageToAll(0xFF0000FF, "(( {FFFFFF}%s {FF0000}%s {FFFFFF}je sada na duznosti. {FF0000}))", GetStaffRankName(PI[playerid][Admin]), ReturnPlayerName(playerid));
		AdminDuty[playerid] = 1;
		SetPlayerArmour(playerid, 100);
		SetPlayerHealth(playerid, 100);
		BojaIgraca(playerid);
	}
	else
	{
        AdminDuty[playerid] = 0;
		SetPlayerArmour(playerid, 0);
		SetPlayerHealth(playerid, 100);
		va_SendClientMessageToAll(0xFF0000FF, "(( {FFFFFF}%s {FF0000}%s {FFFFFF}vise nije na duznosti molimo strpljenje. {FF0000}))", GetStaffRankName(PI[playerid][Admin]), ReturnPlayerName(playerid));
        BojaIgraca(playerid);
	}
	return 1;
}

CMD:kill(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	static id;
	
	if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	    
    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	if(sscanf(params, "i", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/kill [ID]");

	if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");
	    
	SetPlayerHealth(id, 0);
	va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vas je ubio.", ReturnPlayerName(playerid));
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ubili ste igraca %s.", ReturnPlayerName(id));
	return 1;
}

CMD:eject(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(!IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u vozilu!");

	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na mestu vozaca!");

	static id;

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/eject [ID/Ime]");

	if(!IsPlayerConnected(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je offline!");

	if(GetPlayerVehicleID(id) != GetPlayerVehicleID(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac se ne nalazi u vasem vozilu!");

	RemovePlayerFromVehicle(id);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Izbacili ste %s iz vozila.", ReturnPlayerName(id));
	va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}%s vas je izbacio iz vozila.", ReturnPlayerName(playerid));
	return 1;
}

CMD:freeze(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	static id;

	if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	if(sscanf(params, "i", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/freeze [ID]");

	if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");
	    
    if(PI[id][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je zatvoren!");
	    
    if(IgracTazovan[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to tazovani ste!");

	if(StavljeneLisice[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to imate lisice!");

	if(Zavezan[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to zavezani ste!");

	TogglePlayerControllable(id, 0);
	va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vas je frezovao.", ReturnPlayerName(playerid));
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Frezovali ste igraca %s.", ReturnPlayerName(id));
	return 1;
}

CMD:unfreeze(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	static id;

	if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	if(sscanf(params, "i", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/unfreeze [ID]");

	if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");
	    
    if(IgracTazovan[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to tazovani ste!");

	if(StavljeneLisice[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to imate lisice!");

	if(Zavezan[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to zavezani ste!");
		
    if(PI[id][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je zatvoren!");

	TogglePlayerControllable(id, 1);
	va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vas je unfrezovao.", ReturnPlayerName(playerid));
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Unfrezovali ste igraca %s.", ReturnPlayerName(id));
	return 1;
}

CMD:rtc(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	    
    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	if(!IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u vozilu!");

	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Respawnovali ste vozilo!");
	return 1;
}

CMD:rac(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	    
    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	
	if(RespawnVozila != 0) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Respawn je vec pokrenut!");
	
	RespawnVozila = 1;
	SendClientMessageToAll(0xFF0000FF, "#RESPAWN VOZILA: {FFFFFF}%s %s je pokrenuo respawn svih vozila!", GetStaffRankName(PI[playerid][Admin]), ReturnPlayerName(playerid));
	SendClientMessageToAll(0xFF0000FF, "> {FFFFFF}Udjite u svoje vozilo ukoliko ne zelite da vam vozilo bude respawnano.");
	SetTimer("Respawn", 20000, false);
	return 1;
}

CMD:vrtc(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 3)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	if(!IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u vozilu!");

	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Respawnovali ste vozilo!");
	return 1;
}

CMD:vportvozilo(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 4)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	Dialog_Show(playerid, dialog_vpvozila, DIALOG_STYLE_LIST, "{1b71bc}Vozila", "{1b71bc}> {FFFFFF}Vozilo 1\n{1b71bc}> {FFFFFF}Vozilo 2\n{1b71bc}> {FFFFFF}Vozilo 3", "Odaberi", "Izlaz");
	return 1;
}

CMD:vcarrespawn(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 4)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	    
    Dialog_Show(playerid, dialog_vrvozila, DIALOG_STYLE_LIST, "{1b71bc}Vozila", "{1b71bc}> {FFFFFF}Vozilo 1\n{1b71bc}> {FFFFFF}Vozilo 2\n{1b71bc}> {FFFFFF}Vozilo 3", "Odaberi", "Izlaz");
	return 1;
}

CMD:kick(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	static id,
		razlog[64],
		str[128];

	if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	if(sscanf(params, "us[64]", id, razlog))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/kick [ID] [Razlog]");

	if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");
	    
    if(PI[playerid][Admin] == 1 && PI[id][Admin] >= 2)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete kikovati veceg Admina od sebe!");

	if(PI[playerid][Admin] == 2 && PI[id][Admin] >= 3)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete kikovati veceg Admina od sebe!");

	if(PI[playerid][Admin] == 3 && PI[id][Admin] >= 4)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete kikovati veceg Admina od sebe!");

	if(PI[playerid][Admin] == 5 && PI[id][Admin] >= 6)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete kikovati veceg Admina od sebe!");

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kickovali ste igraca %s | Razlog: %s.", ReturnPlayerName(id), razlog);
	format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je kickovao igraca %s | Razlog: %s!", ReturnPlayerName(playerid), ReturnPlayerName(id), razlog);
	AdminMessage(-1, str);
	
	va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Kickovani ste od strane Admina %s, Razlog: %s.", ReturnPlayerName(playerid), razlog);
	PlayerTimer[id] = SetTimerEx("KonektKick", 1000, false, "d", id);
	return 1;
}

CMD:ban(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(PI[playerid][Admin] < 3)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	
	static id,
		razlog[80];

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	if(sscanf(params, "us[40]", id, razlog))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/ban [ID/Ime] [Razlog]");

	if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");

	if(id == playerid)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete banovati sami sebe!");

	if(Ulogovan[id] != 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije ulogovan!");

	if(PI[id][Banovan] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj Igrac je vec banovan!");

	if(strlen(razlog) < 3 || strlen(razlog) > 40)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Razlog ne moze imati manje od 3 i vise od 40 znakova!");

	if(PI[playerid][Admin] == 5 && PI[id][Admin] >= 6)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes banovati Vlasnika!");

	if(PI[playerid][Admin] == 4 && PI[id][Admin] >= 5)
		va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes banovati Direktora");

 	va_SendClientMessageToAll(0xFF0000FF, "#BAN: {FFFFFF}Admin %s je banovao igraca %s | Razlog: %s.", ReturnPlayerName(playerid), ReturnPlayerName(id), razlog);
 	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Banovali ste igraca %s | Razlog: %s", ReturnPlayerName(id), razlog);
	 
	PI[id][Banovan] = 1;
	format(PI[id][BRazlog], 40, razlog);
 	mysql_tqueryEx(SQL, "UPDATE `users` SET `Banovan` = '%d', `BRazlog` = '%e' WHERE `SQLID` = '%d'", PI[id][Banovan], razlog, PI[id][SQLID]);
	
	PlayerTimer[id] = SetTimerEx("KonektBan", 1000, false, "d", id);
    return 1;
}

CMD:unban(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(PI[playerid][Admin] < 3)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	new imeigraca[MAX_PLAYER_NAME];

	if(sscanf(params, "s[24]", imeigraca))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/unban [Ime_Prezime]");

	new query[128];
	mysql_format(SQL, query, sizeof(query), "SELECT `SQLID` FROM `users` WHERE `Ime` = '%e' LIMIT 1", imeigraca);
	mysql_tquery(SQL, query, "CheckPlayerUnBan", "is", playerid, imeigraca);
	return 1;
}

CMD:banip(playerid, const params[])
{
    if(PI[playerid][Admin] < 3)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	new playersip[22],
		str[156];

	if(sscanf(params, "s[22]", playersip))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/banip [ip]");

	format(str, 44, "banip %s", playersip);
	SendRconCommand(str);
	SendRconCommand("reloadbans");
	format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je banovao IP %s!", ReturnPlayerName(playerid), PI[playerid][Pol] == 1 ? "o" : "la", playersip);
	AdminMessage(-1, str);
    return 1;
}

CMD:unbanip(playerid, const params[])
{
    if(PI[playerid][Admin] < 3)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	new playersip[22],
		str[156];

	if(sscanf(params, "s[22]", playersip))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/banip [ip]");

	format(str, 44, "unbanip %s", playersip);
	SendRconCommand(str);
	SendRconCommand("reloadbans");
	format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je unbanovao IP %s!", ReturnPlayerName(playerid), PI[playerid][Pol] == 1 ? "o" : "la", playersip);
	AdminMessage(-1, str);
    return 1;
}

CMD:obrisiacc(playerid, const params[])
{
    static acc[32];

    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 6)
    	return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
    	
    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	if(sscanf(params, "s[32]", acc))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/obrisiacc [Ime_Prezime]");

	new query[128];
	mysql_format(SQL, query, sizeof(query), "DELETE FROM `users` WHERE `Ime` = '%e'", acc);
	mysql_tquery(SQL, query, "CheckPlayerDelete", "is", playerid, acc);
    return 1;
}

CMD:jp(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
    static Float: Poz[3];
	if(JetpackUsed[playerid] == 0)
	{
 		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
   		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste JetPack da ga unistite koristite /jetpack.");
   		JetpackUsed[playerid] = 1;
	}
	else
	{
		GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
		SetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}JetPack koji ste stvorili je unisten.");
		JetpackUsed[playerid] = 0;
	}
	return 1;
}

CMD:kreirajutakmicu(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
    new klub1[50],klub2[50], Float:kvota1, Float:kvota2, Float:kvota3,Float:kvota4, Float:kvota5, Float:kvota6, time[50];
    if(sscanf(params, "s[50]s[50]ffffffs[50]", klub1,klub2,kvota1,kvota2,kvota3,kvota4,kvota5,kvota6,time))
    {
        va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/kreirajutakmicu [Klub_1] [Klub_2] [kvota 1] [kvota X] [kvota 2] [kvota 3+] [kvota 4+] [kvota GG&3+] [GGGG-MM-DD HH:MM:SS]");
        va_SendClientMessage(playerid, -1, "Ukoliko ne zelite stavljati 3+ 4+ i GG&3+ kvote stavljajte 0");
        return 1;
    }
    if(strlen(klub1) < 3 || strlen(klub1) > 50) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Naziv kluba 1 mora biti 3-50 znakova!");
    if(strlen(klub2) < 3 || strlen(klub2) > 50) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Naziv kluba 2 mora biti 3-50 znakova!");
    if(kvota1 <= 0 || kvota2 <= 0 || kvota3 <= 0 || kvota4 < 0 || kvota5 < 0 || kvota6 < 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kvota ne moze biti manja od nule ili nula!");
    if(kvota1 > 10 || kvota2 > 10 || kvota3 > 10 || kvota4 > 10 || kvota5 > 10 || kvota6 > 10) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kvota ne moze biti veca od 10!");
    new len = strlen(time);
    for (new i = 0; i < len; ++i)
    {
        if (time[4] != '-' || time[7] != '-' || time[10] != ' ' || time[13] != ':' || time[16] != ':') return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan format datuma!");
    }
    strreplace(klub1, '_', ' ');
    strreplace(klub2, '_', ' ');
    mysql_tqueryEx(SQL, "INSERT INTO `matchs` (Klub1, Klub2, Kvota1, Kvota2, Kvota3, Kvota3plus, Kvota4plus, KvotaGG, Rezultat, Datum) \
        VALUES( '%s', '%s', '%f', '%f', '%f', '%f', '%f', '%f', '0', '%s')", klub1, klub2, kvota1, kvota2, kvota3, kvota4, kvota5, kvota6, time);

    va_SendClientMessageToAll(-1, "");
    va_SendClientMessageToAll(0xFF0000FF, "(( KLADIONICA: {FFFFFF}Dodana je nova utakmica {FF0000}%s {FFFFFF}vs {FF0000}%s ))", klub1, klub2);
    va_SendClientMessageToAll(0xFF0000FF,"(( KLADIONICA: {FFFFFF}Kvote: {FF0000}%.2f %.2f %.2f {FFFFFF}| Vrijeme utakmice: {FF0000}%s ))", kvota1, kvota2, kvota3, time);
    va_SendClientMessageToAll(-1, "");
    return 1;
}

CMD:unesirezultat(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
    mysql_tquery(SQL, "SELECT * FROM `matchs` WHERE `Rezultat` = '0'", "CheckTiket8", "i", playerid);
    return 1;
}

CMD:odigranitiketi(playerid, params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
    mysql_tquery(SQL, "SELECT * FROM TIKETI WHERE (Par1ID > 0 AND Par1Rezultat = 0) OR (Par2ID > 0 AND Par2Rezultat = 0) OR (Par3ID > 0 AND Par3Rezultat = 0) OR (Par4ID > 0 AND Par4Rezultat = 0) OR (Par5ID > 0 AND Par5Rezultat = 0) \
        OR (Par6ID > 0 AND Par6Rezultat = 0) OR (Par7ID > 0 AND Par7Rezultat = 0) OR (Par8ID > 0 AND Par8Rezultat = 0) OR (Par9ID > 0 AND Par9Rezultat = 0) OR (Par10ID > 0 AND Par10Rezultat = 0) OR (Par11ID > 0 AND Par11Rezultat = 0) OR \
        (Par12ID > 0 AND Par12Rezultat = 0) OR (Par13ID > 0 AND Par13Rezultat = 0) OR (Par14ID > 0 AND Par14Rezultat = 0) OR (Par15ID > 0 AND Par15Rezultat = 0)", "CheckOdigraneTikete", "i", playerid);
    return 1;
}

CMD:kreirajbankomat(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
    static idatm,
		Float:Pos[4];

	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	GetPlayerFacingAngle(playerid, Pos[3]);

	for(new id = 1; id < MAX_ATM; id++)
	{
	    if(AtmInfo[id][SQLID] < 1)
		{
            idatm = id; break;
        }
	}
	if(idatm == 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum bankomata je dostignut!");
	
	AtmInfo[idatm][SQLID] = idatm;
	AtmInfo[idatm][aPostavljen] = 1; 
    AtmInfo[idatm][aX] = Pos[0];
	AtmInfo[idatm][aY] = Pos[1];
	AtmInfo[idatm][aZ] = Pos[2];
	AtmInfo[idatm][aAngle] = Pos[3];
    AtmInfo[idatm][aInt] = GetPlayerInterior(playerid);
	AtmInfo[idatm][aVW] = GetPlayerVirtualWorld(playerid);

	KreirajAtm(idatm);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kreirali ste bankomat ID: %d (/ebankomat)!", idatm);
	
	mysql_tqueryEx(SQL, "INSERT INTO `atms` (SQLID, Postavljen_Bankomat, Poz_X, Poz_Y, Poz_Z, Poz_Angle, Interijer, VW) \
  		VALUES( '%d', '%d', '%f', '%f', '%f', '%f', '%d', '%d')", idatm, 1, Pos[0], Pos[1], Pos[2], Pos[3], AtmInfo[idatm][aInt], AtmInfo[idatm][aVW]);
    return 1;
}

CMD:ebankomat(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	new idatm;
	idatm = GetNearestAtm(playerid);
	if(idatm == -1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nema bankomata u blizini!");

	DestroyDynamic3DTextLabel(AtmInfo[idatm][aAtmLabel]);
	eData[playerid] = idatm;
	EditDynamicObject(playerid,AtmInfo[idatm][aObjekat]);
	
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Editujete poziciju bankomata ID: %d!", idatm);
	return 1;
}

CMD:obrisibankomat(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
    new atmid;
	atmid = GetNearestAtm(playerid);
	if(atmid == -1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nema bankomata u blizini!");

	DestroyDynamic3DTextLabel(AtmInfo[atmid][aAtmLabel]);
	DestroyDynamicObject(AtmInfo[atmid][aObjekat]);
	AtmInfo[atmid][SQLID] = 0;
	AtmInfo[atmid][aX] = 0, AtmInfo[atmid][aY] = 0, AtmInfo[atmid][aZ] = 0;

	mysql_tqueryEx(SQL, "DELETE FROM `atms` WHERE `SQLID` = '%d'", atmid);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Obrisali ste bankomat ID: %d!", atmid);
	return 1;
}

CMD:bankomat(const playerid)
{
    for(new i = 1; i < MAX_ATM; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5, AtmInfo[i][aX], AtmInfo[i][aY], AtmInfo[i][aZ]) && !IsPlayerInAnyVehicle(playerid))
		{
		    if(PI[playerid][Kartica] == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate bankovni racun.");
            
            Dialog_Show(playerid, dialog_bankomat, DIALOG_STYLE_LIST, "{1b71bc}Bankomat Meni", "{1b71bc}(1). {FFFFFF}Stanje na racunu\n{1b71bc}(2). {FFFFFF}Podigni Novac", "Odaberi", "Izlaz");
			break;
		}
	}
    return 1;
}

CMD:kreirajkucu(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
	static idkuce = 0,
		vrsta,
		string[500];

	new Float:Pos[3];

	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);

	if(sscanf(params, "i", vrsta))
	{
	    va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/kreirajkucu [Vrsta]");
	    va_SendClientMessage(playerid, -1, "Vrste Kuca | 0: Mala | 1: Srednja | 2: Velika | 3: Villa");
	    return 1;
	}
    
    for(new id = 1; id < MAX_KUCA; id++)
	{
	    if(KucaInfo[id][SQLID] < 1)
        {
            idkuce = id; break;
        }
	}

	if(idkuce == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kuca je dostignut!");
		
	if(vrsta < 0 || vrsta > 3)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vrsta kuce nemoze biti manja od 0 a veca od 3!");

	if(vrsta == 0) // MALA KUCA
	{
        KucaInfo[idkuce][kIzlazX] = 223.0732;
    	KucaInfo[idkuce][kIzlazY] = 1288.3668;
    	KucaInfo[idkuce][kIzlazZ] = 1082.1406;
    	KucaInfo[idkuce][kInt] = 1;
    	KucaInfo[idkuce][kCena] = 400000;
		KucaInfo[idkuce][kLevel] = 5;
    	KucaInfo[idkuce][kVrsta] = MALA_KUCA;
    	KucaInfo[idkuce][kVrstaIntKuce] = 1;
	}
	else if(vrsta == 1) // SREDNJA KUCA
	{
        KucaInfo[idkuce][kIzlazX] = 2365.2822;
    	KucaInfo[idkuce][kIzlazY] = -1134.5186;
    	KucaInfo[idkuce][kIzlazZ] = 1050.8750;
    	KucaInfo[idkuce][kInt] = 8;
    	KucaInfo[idkuce][kCena] = 550000;
		KucaInfo[idkuce][kLevel] = 7;
    	KucaInfo[idkuce][kVrsta] = SREDNJA_KUCA;
    	KucaInfo[idkuce][kVrstaIntKuce] = 2;
	}
	else if(vrsta == 2) // VELIKA KUCA
	{
        KucaInfo[idkuce][kIzlazX] = 2317.8977;
    	KucaInfo[idkuce][kIzlazY] = -1025.7722;
    	KucaInfo[idkuce][kIzlazZ] = 1050.2109;
    	KucaInfo[idkuce][kInt] = 9;
    	KucaInfo[idkuce][kCena] = 700000;
		KucaInfo[idkuce][kLevel] = 10;
    	KucaInfo[idkuce][kVrsta] = VELIKA_KUCA;
    	KucaInfo[idkuce][kVrstaIntKuce] = 3;
	}
	else if(vrsta == 3) // VILLA KUCA
	{
        KucaInfo[idkuce][kIzlazX] = 140.2605;
    	KucaInfo[idkuce][kIzlazY] = 1367.4221;
    	KucaInfo[idkuce][kIzlazZ] = 1083.8615;
    	KucaInfo[idkuce][kInt] = 5;
    	KucaInfo[idkuce][kCena] = 950000;
		KucaInfo[idkuce][kLevel] = 12;
    	KucaInfo[idkuce][kVrsta] = VILLA;
    	KucaInfo[idkuce][kVrstaIntKuce] = 4;
	}
	KucaInfo[idkuce][SQLID] = idkuce;
	KucaInfo[idkuce][kUlazX] = Pos[0];
    KucaInfo[idkuce][kUlazY] = Pos[1];
	KucaInfo[idkuce][kUlazZ] = Pos[2];
	KucaInfo[idkuce][kProveraVlasnika] = 0;
	KucaInfo[idkuce][kZatvoreno] = 1;
	KucaInfo[idkuce][kVW] = idkuce;
 	strmid(KucaInfo[idkuce][kVlasnik],"Niko",0,strlen("Niko"),255);

	format(string,sizeof(string),"{04CC29}[ KUCA NA PRODAJU ]\nBroj kuce: {FFFFFF}%d\n{04CC29}Vrsta: {FFFFFF}%s\n{04CC29}Cena: {FFFFFF}%d$\n{04CC29}Level: {FFFFFF}%d\n{04CC29}Za kupovinu kuce /kupikucu", idkuce,Vrsta_Kuce(KucaInfo[idkuce][kVrsta]), KucaInfo[idkuce][kCena], KucaInfo[idkuce][kLevel]);
    KucaLabel[idkuce] = CreateDynamic3DTextLabel(string, 0x33CCFFAA, Pos[0], Pos[1], Pos[2], 10);
    KucaPickup[idkuce] = CreateDynamicPickup(1273, 1, KucaInfo[idkuce][kUlazX], KucaInfo[idkuce][kUlazY], KucaInfo[idkuce][kUlazZ]);

	mysql_tqueryEx(SQL, "INSERT INTO `houses` (SQLID, ProveraVlasnika, Vlasnik, Vrsta, UlazX, UlazY, UlazZ, IzlazX, IzlazY, IzlazZ, Level, Cena, Interior, Zatvoreno, VW, VrstaIntKuce) \
  		VALUES( '%d', '%d', 'Niko', '%d', '%f', '%f', '%f', '%f', '%f', '%f', '%d', '%d', '%d', '%d', '%d', '%d')", idkuce, KucaInfo[idkuce][kProveraVlasnika], KucaInfo[idkuce][kVrsta],
		  																									Pos[0], Pos[1], Pos[2],
		  																								    KucaInfo[idkuce][kIzlazX], KucaInfo[idkuce][kIzlazY], KucaInfo[idkuce][kIzlazZ],
  																											KucaInfo[idkuce][kLevel], KucaInfo[idkuce][kCena], KucaInfo[idkuce][kInt], KucaInfo[idkuce][kZatvoreno], idkuce, KucaInfo[idkuce][kVrstaIntKuce]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kuca je uspesno kreirana (ID Kuce: %d)!", idkuce);
	return 1;
}

CMD:kreirajstan(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
	static idstan,
		string[500];

	new Float:Pos[3];

	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);

	for(new id = 1; id < MAX_STANOVA; id++)
	{
	    if(StanInfo[id][SQLID] < 1)
        {
            idstan = id; break;
        }
	}
    if(idstan == 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum stanova je dostignut!");

    StanInfo[idstan][SQLID] = idstan;
	StanInfo[idstan][sIzlazX] = 244.1522;
	StanInfo[idstan][sIzlazY] = 305.0730;
	StanInfo[idstan][sIzlazZ] = 999.1484;
	StanInfo[idstan][sInt] = 1;
	StanInfo[idstan][sCena] = 250000;
	StanInfo[idstan][sLevel] = 3;
	StanInfo[idstan][sUlazX] = Pos[0];
    StanInfo[idstan][sUlazY] = Pos[1];
	StanInfo[idstan][sUlazZ] = Pos[2];
	StanInfo[idstan][sProveraVlasnika] = 0;
	StanInfo[idstan][sZatvoreno] = 1;
	StanInfo[idstan][sVW] = idstan;
    strmid(StanInfo[idstan][sVlasnik],"Niko",0,strlen("Niko"),255);

	format(string,sizeof(string),"{56dc7d}[ STAN NA PRODAJU ]\nBroj stana: {FFFFFF}%d\n{56dc7d}Cena: {FFFFFF}%d$\n{56dc7d}Level: {FFFFFF}%d\nZa kupovinu {56dc7d}/kupistan", idstan, StanInfo[idstan][sCena], StanInfo[idstan][sLevel]);
	StanLabel[idstan] = CreateDynamic3DTextLabel(string, -1, StanInfo[idstan][sUlazX], StanInfo[idstan][sUlazY], StanInfo[idstan][sUlazZ], 10);
	StanPickup[idstan] = CreateDynamicPickup(19524, 1, StanInfo[idstan][sUlazX], StanInfo[idstan][sUlazY], StanInfo[idstan][sUlazZ]);
	
	mysql_tqueryEx(SQL, "INSERT INTO `apartments` (SQLID, ProveraVlasnika, Vlasnik, UlazX, UlazY, UlazZ, IzlazX, IzlazY, IzlazZ, Level, Cena, Interijer, Zatvoreno, VW) \
  		VALUES('%d', '%d', 'Niko', '%f', '%f', '%f', '%f', '%f', '%f', '%d', '%d', '%d', '%d', '%d')", idstan, StanInfo[idstan][sProveraVlasnika], Pos[0], Pos[1], Pos[2],
		  																								    StanInfo[idstan][sIzlazX], StanInfo[idstan][sIzlazY], StanInfo[idstan][sIzlazZ],
  																											StanInfo[idstan][sLevel], StanInfo[idstan][sCena], StanInfo[idstan][sInt], StanInfo[idstan][sZatvoreno], idstan);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Stan je uspesno kreiran (ID Stana: %d)!", idstan);
	return 1;
}

CMD:kreirajradar(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
    
    static radarid, 
    	brzina, 
    	Float: distanca, 
    	Float:Poz[3];
    
    if(sscanf(params, "if", brzina, distanca)) 
    	return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/kreirajradar [MAX BRZINA] [DISTANCA]");
    
    for(new id = 1; id < MAX_RADARA; id++)
	{
	    if(RadarInfo[id][SQLID] < 1)
        {
            radarid = id; break;
        }
	}
    if(radarid == 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum radara je dostignut!");

    if(brzina < 20 || brzina > 250) 
    	return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Brzina ne moze biti ispod 20 i iznad 250!");

   	if(distanca < 5.0 || distanca > 80.0) 
   		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Distanca ne moze biti ispod 5.0 i iznad 80.0");
	
	if(GetPlayerInterior(playerid) != 0) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete biti u enterieru dok kreirate radar!");
    
    if(GetPlayerVirtualWorld(playerid) != 0) 
    	return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Virtual World Vam mora biti na 0 kad kreirate radar!");

	GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
	RadarInfo[radarid][SQLID] = radarid;
	RadarInfo[radarid][raPostavljen] = 1;
	RadarInfo[radarid][raPozX] = Poz[0];
	RadarInfo[radarid][raPozY] = Poz[1];
	RadarInfo[radarid][raPozZ] = Poz[2];
	RadarInfo[radarid][raBrzina] = brzina;
	RadarInfo[radarid][raDistanca] = distanca;	

	mysql_tqueryEx(SQL, "INSERT INTO `radars` (SQLID, RadarPostavljen, PozX, PozY, PozZ, Brzina, Distanca) \
  		VALUES('%d', '%d', '%f', '%f', '%f', '%d', '%f')", radarid, RadarInfo[radarid][raPostavljen], Poz[0], Poz[1], Poz[2], RadarInfo[radarid][raBrzina], RadarInfo[radarid][raDistanca]);

	KreirajRadar(radarid, true);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Radar je uspesno kreiran (ID Radara: %d)!", radarid);
	return 1;
}

CMD:eradar(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

    new radarid;
	radarid = GetNearestRadar(playerid);
	if(radarid == -1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nema radara u blizini!");
	DestroyDynamic3DTextLabel(Radar_3D[radarid]); 
	Radar_Promjena[playerid] = radarid; 
	EditDynamicObject(playerid,RadarInfo[radarid][raObjekat]);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Editujete poziciju radara!");
	return 1;
}

CMD:kreirajprostitutku(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
    
    static slutID,  
    	ime[32], 
    	Float:Poz[3],
    	string[256];
    
    if(sscanf(params, "s[32]", ime)) 
    	return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/kreirajprostitutku [Ime]");
	
	for(new id = 1; id < MAX_SLUTS; id++)
	{
	    if(ProstitutkaInfo[id][SQLID] < 1)
        {
            slutID = id; break;
        }
	}
    if(slutID == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum prostitutki je dostignut!");

	if(strlen(ime) < 3 || strlen(ime) > 32)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ime ne mozete biti ispod 3 i iznad 32 znaka!");

	strreplace(ime, '_', ' ');
	GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
	
	ProstitutkaInfo[slutID][SQLID] = slutID;
	ProstitutkaInfo[slutID][PozX] = Poz[0];
	ProstitutkaInfo[slutID][PozY] = Poz[1];
	ProstitutkaInfo[slutID][PozZ] = Poz[2];
	ProstitutkaInfo[slutID][Ime] = ime;
	ProstitutkaInfo[slutID][Skin] = 178;

	format(string, sizeof(string), "{FF0000}[ PROSTITUTKA ]\n{FFFFFF}Ime: {FF0000}%s\n{FFFFFF}Za uslugu korisitite\n{FF0000}/blowjob", ProstitutkaInfo[slutID][Ime]);
	ProstitutkaAktor[slutID] = CreateDynamicActor(ProstitutkaInfo[slutID][Skin], ProstitutkaInfo[slutID][PozX], ProstitutkaInfo[slutID][PozY], ProstitutkaInfo[slutID][PozZ], 0, 1, 100, 0, 0, -1, 40.0, -1, 0);
	Prostituka3D[slutID] = CreateDynamic3DTextLabel(string, -1, ProstitutkaInfo[slutID][PozX], ProstitutkaInfo[slutID][PozY], ProstitutkaInfo[slutID][PozZ], 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 30.0, -1, 0);
	
	mysql_tqueryEx(SQL, "INSERT INTO `sluts` (SQLID, PozX, PozY, PozZ, Ime, Skin) \
  		VALUES('%d', '%f', '%f', '%f', '%s', '%d')", slutID, Poz[0], Poz[1], Poz[2], ProstitutkaInfo[slutID][Ime], ProstitutkaInfo[slutID][Skin]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prostitutka uspesno kreirana (ID Prostitutke: %d)!", slutID);
	return 1;
}

CMD:obrisiprostitutku(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
    new slutID;
	slutID = getNearestSlut(playerid);
	if(slutID == -1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nema prostitutke u blizini!");

	DestroyDynamic3DTextLabel(Prostituka3D[slutID]);
	DestroyDynamicActor(ProstitutkaAktor[slutID]);
	ProstitutkaInfo[slutID][SQLID] = 0;
	ProstitutkaInfo[slutID][PozX] = 0;
	ProstitutkaInfo[slutID][PozY] = 0;
	ProstitutkaInfo[slutID][PozZ] = 0;

	mysql_tqueryEx(SQL, "DELETE FROM `sluts` WHERE `SQLID` = '%d'", slutID);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Obrisali ste prostitutku ID: %d!", slutID);
	return 1;
}

CMD:ateritorija(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	
    Dialog_Show(playerid, dialog_teritorija, DIALOG_STYLE_LIST, "{1b71bc}Teritorija", "{1b71bc}> {FFFFFF}Kreiraj novu teritoriju\n\
																		 {1b71bc}> {FFFFFF}Promeni kolicinu novac\n\
																		 {1b71bc}> {FFFFFF}Promeni kolicinu droge\n\
																		 {1b71bc}> {FFFFFF}Promeni kolicinu matsa\n\
																		 {1b71bc}> {FFFFFF}Premesti pickup teritorije", "Odaberi", "Izlaz");
    return 1;
}

CMD:kreirajrent(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
    if(RentEdit[playerid] != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete koristiti ovu komandu dok editujete rent objekat!");

	new rentid = 0, Float:Poz[4];
    GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
	GetPlayerFacingAngle(playerid, Poz[3]);

	Poz[0] = Poz[0] + ( 3.0 * floatsin( -Poz[3], degrees ) );
	Poz[1]= Poz[1] + ( 3.0 * floatcos( -Poz[3], degrees ) );

	for(new id = 1; id < MAX_RENT; id++)
	{
	    if(RentInfo[id][SQLID] < 1)
        {
            rentid = id; break;
        }
	}
	if(rentid == 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum rent objekata je dostignut!");

	RentInfo[rentid][SQLID] = rentid;
    RentInfo[rentid][ObjekatX] = Poz[0];
    RentInfo[rentid][ObjekatY] = Poz[1];
    RentInfo[rentid][ObjekatZ] = Poz[2];
    RentInfo[rentid][ObjekatR] = 0.0;

	mysql_tqueryEx(SQL, "INSERT INTO `rent` (SQLID, ObjekatX, ObjekatY, ObjekatZ, ObjekatR) VALUES('%d', '%f', '%f', '%f', '%f')", rentid, Poz[0], Poz[1], Poz[2], 0.0);

	KreirajRent(rentid);
	RentEdit[playerid] = rentid;
	EditDynamicObject(playerid, RentObjekat[rentid]);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odredite poziciju objekta a zatim mesto pickupa i spawnanja vozila podesite komandom /erent.");
	return 1;
}

CMD:erent(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	new rentid = GetNearestRent(playerid);

	if(rentid == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste blizu rent objekta.");

	if(RentInfo[rentid][SQLID] < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj rent ne postoji u bazi podataka!");

	RentEdit[playerid] = rentid;
    Dialog_Show(playerid, dialog_erent, DIALOG_STYLE_LIST, "{1b71bc}Edit rent vozila", "{1b71bc}> {FFFFFF}Pomeri objekat\n\
																						{1b71bc}> {FFFFFF}Pomeri/Kreiraj pickup\n\
																						{1b71bc}> {FFFFFF}Postavi poziciju stvaranja rent vozila\n\
																						{1b71bc}> {FFFFFF}Obrisi rent objekat", "Odaberi", "Izlaz");
	return 1;
}

CMD:rent(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	new rentid = GetNearestRentPickup(playerid);

	if(rentid == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu za rentanje vozila. Da vidite najblize mjesto ukucajte /najblizirent.");

	if(IznajmioVozilo[playerid] != 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imas rentano vozilo (/unrent)!");

	if(IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete biti u vozilu!");

	Dialog_Show(playerid, dialog_rent, DIALOG_STYLE_TABLIST, "{1b71bc}RENT", "{FFFFFF}Faggio\t200$\n\
 																			  Cadrona\t300$\n\
							                                                  Premier\t400$\n\
							                                                  Euros\t500$", "Izaberi", "Odustani");
    return 1;
}

CMD:unrent(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(IznajmioVozilo[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste iznajmili vozilo.");

	KillTimer(RentTimer[playerid]);
	DestroyVehicle(RentVeh[ playerid ]);
	DestroyDynamic3DTextLabel(RentVehLabel[RentVeh[playerid]]);
	IznajmioVozilo[playerid] = 0;
	RentVeh[ playerid ] = 0;
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Unrentao si vozilo!");
	return 1;
}

CMD:najblizirent(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	new Float:metara, id = -1;
    for(new rentid = 1; rentid < MAX_RENT; rentid++)
	{
		if(RentInfo[rentid][SQLID] > 0 && RentInfo[rentid][PickupX] != 0 && RentInfo[rentid][PickupY] != 0)
		{
			 new Float:tempm = GetPlayerDistanceFromPoint(playerid, RentInfo[rentid][PickupX], RentInfo[rentid][PickupY], RentInfo[rentid][PickupZ]);
			 if(id == -1 || tempm < metara) id = rentid, metara = tempm;
		}
	}
	if(id == -1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nazalost nismo nasli najblize mesto za rent.");
	Lociranje[playerid] = 1;
	DisablePlayerCheckpoint(playerid);
	SetPlayerCheckpoint(playerid, RentInfo[id][PickupX], RentInfo[id][PickupY], RentInfo[id][PickupZ], 2.0);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Najblize mesto za rent je locirano na mapi.");
	return 1;
}

CMD:kreirajfirmu(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
    static firmaid,
		vrsta,
		cena,
		lvl,
		string[512],
		Float:Pos[3];

	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
    if(sscanf(params, "iii", vrsta, lvl , cena))
	{
    	va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/kreirajfirmu [vrsta] [level] [cena]");
    	va_SendClientMessage(playerid, -1, "0: Market | 1: Market | 2: Burg");
        va_SendClientMessage(playerid, -1, "3: Cluckin Bell | 4: Pizza | 5: Pig Pen");
        va_SendClientMessage(playerid, -1, "6: Bar | 7: Gym | 8: Sex Shop | 9: Binco");
        va_SendClientMessage(playerid, -1, "10: Gun Shop | 11: Disco | 12: Restoran");
        va_SendClientMessage(playerid, -1, "13: Zip | 14: Victim | 15: Suburban");
        va_SendClientMessage(playerid, -1, "16: Night Club | 17: Elite Restoran | 18: Gun Shop 2");
        va_SendClientMessage(playerid, -1, "19: Kladionica | 20: Posao firma");
    	return 1;
	}
	for(new id = 1; id < MAX_FIRMI; id++)
	{
	    if(FirmaInfo[id][SQLID] < 1)
        {
            firmaid = id; break;
        }
	}
    if(firmaid == 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maximum firmi je dostignut!");
	if(vrsta == 0) // MARKET 1
	{
        FirmaInfo[firmaid][fIzlazX] = -25.132600; FirmaInfo[firmaid][fIzlazY] = -139.067001;
    	FirmaInfo[firmaid][fIzlazZ] = 1003.546875; FirmaInfo[firmaid][fInt] = 16;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_MARKET; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Market 24/7",0,strlen("Market 24/7"),255);
	}
	else if(vrsta == 1) // MARKET 2
	{
        FirmaInfo[firmaid][fIzlazX] = -27.312299; FirmaInfo[firmaid][fIzlazY] = -29.277599;
    	FirmaInfo[firmaid][fIzlazZ] = 1003.557250; FirmaInfo[firmaid][fInt] = 4;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_MARKET; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Market 24/7",0,strlen("Market 24/7"),255);
	}
	else if(vrsta == 2) // BURG
	{
        FirmaInfo[firmaid][fIzlazX] = 366.032409; FirmaInfo[firmaid][fIzlazY] = -72.639999;
    	FirmaInfo[firmaid][fIzlazZ] = 1001.507812; FirmaInfo[firmaid][fInt] = 10;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_BURG; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Burg",0,strlen("Burg"),255);
   	}
	else if(vrsta == 3) // Cluckin
	{
        FirmaInfo[firmaid][fIzlazX] = 365.779296; FirmaInfo[firmaid][fIzlazY] = -9.169898;
    	FirmaInfo[firmaid][fIzlazZ] = 1001.851623; FirmaInfo[firmaid][fInt] = 9;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_CLUCKIN; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Cluckin Bell",0,strlen("Cluckin Bell"),255);
	}
	else if(vrsta == 4) // Pizza
	{
        FirmaInfo[firmaid][fIzlazX] = 372.411712; FirmaInfo[firmaid][fIzlazY] = -130.457702;
    	FirmaInfo[firmaid][fIzlazZ] = 1001.492187; FirmaInfo[firmaid][fInt] = 5;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_PIZZA; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Pizza",0,strlen("Pizza"),255);
	}
	else if(vrsta == 5) // Pig Pen
	{
        FirmaInfo[firmaid][fIzlazX] = 1204.846191; FirmaInfo[firmaid][fIzlazY] = -13.852100;
    	FirmaInfo[firmaid][fIzlazZ] = 1000.921875; FirmaInfo[firmaid][fInt] = 2;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_PIGPEN; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Pig Pen",0,strlen("Pig Pen"),255);
	}
	else if(vrsta == 6) // Bar
	{
        FirmaInfo[firmaid][fIzlazX] = 501.870788; FirmaInfo[firmaid][fIzlazY] = -67.582000;
    	FirmaInfo[firmaid][fIzlazZ] = 998.757812; FirmaInfo[firmaid][fInt] = 11;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_BAR; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Bar",0,strlen("Bar"),255);
	}
	else if(vrsta == 7) // Gym
	{
        FirmaInfo[firmaid][fIzlazX] = 772.359375; FirmaInfo[firmaid][fIzlazY] = -5.515697;
    	FirmaInfo[firmaid][fIzlazZ] = 1000.728576; FirmaInfo[firmaid][fInt] = 5;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_GYM; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Gym",0,strlen("Gym"),255);
	}
	else if(vrsta == 8) // Sex Shop
	{
        FirmaInfo[firmaid][fIzlazX] = -100.295700; FirmaInfo[firmaid][fIzlazY] = -24.654399;
    	FirmaInfo[firmaid][fIzlazZ] = 1000.718811; FirmaInfo[firmaid][fInt] = 3;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_SEXSHOP; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Sex Shop",0,strlen("Sex Shop"),255);
	}
	else if(vrsta == 9) // Binco
	{
        FirmaInfo[firmaid][fIzlazX] = 207.766204; FirmaInfo[firmaid][fIzlazY] = -111.266296;
    	FirmaInfo[firmaid][fIzlazZ] = 1005.132812; FirmaInfo[firmaid][fInt] = 15;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_BINCO; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Binco",0,strlen("Binco"),255);
	}
    else if(vrsta == 10) // Gun Shop
	{
        FirmaInfo[firmaid][fIzlazX] = 315.762786; FirmaInfo[firmaid][fIzlazY] = -143.661193;
    	FirmaInfo[firmaid][fIzlazZ] = 999.601623; FirmaInfo[firmaid][fInt] = 7;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_GUNSHOP; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Gun Shop",0,strlen("Gun Shop"),255);
	}
	else if(vrsta == 11) // Disco
	{
        FirmaInfo[firmaid][fIzlazX] = 493.439300; FirmaInfo[firmaid][fIzlazY] = -24.916900;
    	FirmaInfo[firmaid][fIzlazZ] = 1000.671875; FirmaInfo[firmaid][fInt] = 17;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_DISCO; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Disco",0,strlen("Disco"),255);
	}
	else if(vrsta == 12) // Restoran
	{
        FirmaInfo[firmaid][fIzlazX] = 460.265411; FirmaInfo[firmaid][fIzlazY] = -88.611503;
    	FirmaInfo[firmaid][fIzlazZ] = 999.554687; FirmaInfo[firmaid][fInt] = 4;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_RESTORAN; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Restoran",0,strlen("Restoran"),255);
	}
	else if(vrsta == 13) // ZIP
	{
        FirmaInfo[firmaid][fIzlazX] = 161.410293; FirmaInfo[firmaid][fIzlazY] = -96.687202;
    	FirmaInfo[firmaid][fIzlazZ] = 1001.804687; FirmaInfo[firmaid][fInt] = 18;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_ZIP; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Zip",0,strlen("Zip"),255);
	}
	else if(vrsta == 14) // Victim
	{
        FirmaInfo[firmaid][fIzlazX] = 227.342803; FirmaInfo[firmaid][fIzlazY] = -8.243800;
    	FirmaInfo[firmaid][fIzlazZ] = 1002.210876; FirmaInfo[firmaid][fInt] = 5;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_VICTIM; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Victim",0,strlen("Victim"),255);
	}
	else if(vrsta == 15) // Suburban
	{
        FirmaInfo[firmaid][fIzlazX] = 203.895294; FirmaInfo[firmaid][fIzlazY] = -50.656700;
    	FirmaInfo[firmaid][fIzlazZ] = 1001.804687; FirmaInfo[firmaid][fInt] = 1;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_SUBURBAN; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Suburban",0,strlen("Suburban"),255);
	}
	else if(vrsta == 16) // night club
	{
        FirmaInfo[firmaid][fIzlazX] = -2636.5781; FirmaInfo[firmaid][fIzlazY] = 1402.7936;
    	FirmaInfo[firmaid][fIzlazZ] = 906.4609; FirmaInfo[firmaid][fInt] = 3;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_DISCO; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Night Club",0,strlen("Night Club"),255);
	}
	else if(vrsta == 17) // Elite Restoran
	{
        FirmaInfo[firmaid][fIzlazX] = -794.9584; FirmaInfo[firmaid][fIzlazY] = 490.1105;
    	FirmaInfo[firmaid][fIzlazZ] = 1376.1953; FirmaInfo[firmaid][fInt] = 1;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_RESTORAN; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Elite Restoran",0,strlen("Elite Restoran"),255);
	}
    else if(vrsta == 18) // Gun Shop 2
	{
        FirmaInfo[firmaid][fIzlazX] = 316.524993; FirmaInfo[firmaid][fIzlazY] = -167.706985;
    	FirmaInfo[firmaid][fIzlazZ] = 999.593750; FirmaInfo[firmaid][fInt] = 6;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_GUNSHOP; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Gun Shop",0,strlen("Gun Shop"),255);
	}
	else if(vrsta == 19) // Kladionica
	{
        FirmaInfo[firmaid][fIzlazX] = 2498.7051; FirmaInfo[firmaid][fIzlazY] = 893.6312;
    	FirmaInfo[firmaid][fIzlazZ] = 968.3780; FirmaInfo[firmaid][fInt] = 3;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_KLADIONICA; FirmaInfo[firmaid][fZatvoreno] = 0;
    	strmid(FirmaInfo[firmaid][fNaziv],"Kladionica",0,strlen("Kladionica"),255);
	}
	else if(vrsta == 20) // Posao Firma
	{
	    FirmaInfo[firmaid][fIzlazX] = 0.0; FirmaInfo[firmaid][fIzlazY] = 0.0;
    	FirmaInfo[firmaid][fIzlazZ] = 0.0; FirmaInfo[firmaid][fInt] = 0;
    	FirmaInfo[firmaid][fCena] = cena; FirmaInfo[firmaid][fLevel] = lvl;
    	FirmaInfo[firmaid][fVrsta] = VRSTA_POSAO; FirmaInfo[firmaid][fZatvoreno] = 1;
    	strmid(FirmaInfo[firmaid][fNaziv],"Posao Firma",0,strlen("Posao Firma"),255);
	}
	FirmaInfo[firmaid][SQLID] = firmaid;
    FirmaInfo[firmaid][fUlazX] = Pos[0];
	FirmaInfo[firmaid][fUlazY] = Pos[1];
	FirmaInfo[firmaid][fUlazZ] = Pos[2];
    FirmaInfo[firmaid][fVW] = firmaid;
    FirmaInfo[firmaid][fProdukti] = 300;
    format(string,sizeof(string),"{49d07b}[ FIRMA NA PRODAJU ]\n\n{49d07b}[ {FFFFFF}%s {49d07b}]\nBroj firme: {FFFFFF}%d\n{49d07b}Cena: {FFFFFF}%d$\n{49d07b}Level: {FFFFFF}%d\n{49d07b}Vrsta: {FFFFFF}%s\n{49d07b}Za kupovinu /kupifirmu",FirmaInfo[firmaid][fNaziv],firmaid,FirmaInfo[firmaid][fCena],FirmaInfo[firmaid][fLevel],Vrsta_Firme(FirmaInfo[firmaid][fVrsta]));
    FirmaLabel[firmaid] = CreateDynamic3DTextLabel(string, -1, Pos[0], Pos[1], Pos[2], 10);
    FirmaPickup[firmaid] = CreateDynamicPickup(1274, 1, FirmaInfo[firmaid][fUlazX], FirmaInfo[firmaid][fUlazY], FirmaInfo[firmaid][fUlazZ]);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Firma Kreirana (Ovo je firma ID: %d)!", firmaid);
	
	mysql_tqueryEx(SQL, "INSERT INTO `business` (SQLID, Vrsta, Naziv, UlazX, UlazY, UlazZ, IzlazX, IzlazY, IzlazZ, Level, Cena, Interijer, Zatvoreno, VW, Produkti) \
		VALUES('%d', '%d', '%s', '%f', '%f', '%f', '%f', '%f', '%f', '%d', '%d', '%d', '%d', '%d', '%d')", firmaid, FirmaInfo[firmaid][fVrsta], FirmaInfo[firmaid][fNaziv], Pos[0], Pos[1], Pos[2],
		FirmaInfo[firmaid][fIzlazX], FirmaInfo[firmaid][fIzlazY], FirmaInfo[firmaid][fIzlazZ], FirmaInfo[firmaid][fLevel], FirmaInfo[firmaid][fCena], FirmaInfo[firmaid][fInt],
		FirmaInfo[firmaid][fZatvoreno], firmaid, FirmaInfo[firmaid][fProdukti]);
	
	FirmaLabelIPickup(firmaid);
	return 1;
}

CMD:efirmu(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
	new i = -1;
	for(new x; x < MAX_FIRMI; x++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, FirmaInfo[x][fUlazX], FirmaInfo[x][fUlazY], FirmaInfo[x][fUlazZ]))
		{
			i = x;
			IzmenaFirme[playerid] = x;
			break;
		}
	}
	if(i == -1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste kod firme!");
	new akcija[16];

	if(sscanf(params, "s[16]", akcija))
	    return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/efirmu [ Prodaj | Info | Otkljucaj | Izbrisi ]");
	    
	if(!strcmp(akcija, "prodaj", true))
	{
		if(FirmaInfo[i][fImaVlasnika] == 0)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete prodati firmu jer ta firma nema vlasnika!");

		FirmaInfo[i][fImaVlasnika] = 0;
		FirmaInfo[i][fKasa] = 0;
		FirmaInfo[i][fZatvoreno] = 0;
		FirmaLabelIPickup(i);
		
		mysql_tqueryEx(SQL, "UPDATE `business` SET `ImaVlasnika` = '%d', `Vlasnik` = 'Niko', `Kasa` = '%d', `Zatvoreno` = '%d' WHERE `SQLID` = '%d'",
			FirmaInfo[i][fImaVlasnika], FirmaInfo[i][fVlasnik], FirmaInfo[i][fKasa], FirmaInfo[i][fZatvoreno], FirmaInfo[i][SQLID]);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prodali ste firmu ID: %d!", i);
		IzmenaFirme[playerid] = -1;
	}
	else if(!strcmp(akcija, "info", true))
	{
	    va_SendClientMessage(playerid,-1,"- Vlasnik: %s | Naziv: %s | Level: %d | Zakljucano: %s", FirmaInfo[i][fVlasnik],FirmaInfo[i][fNaziv],FirmaInfo[i][fLevel],FirmaInfo[i][fZatvoreno] == 1 ? "Da" : "Ne");
 	    va_SendClientMessage(playerid,-1,"- Cena: %d$ | ID: %d | Kasa: %d$ | Produkti: %d", FirmaInfo[i][fCena], i, FirmaInfo[i][fKasa], FirmaInfo[i][fProdukti]);
		IzmenaFirme[playerid] = -1;
	}
	else if(!strcmp(akcija, "otkljucaj", true))
	{
		FirmaInfo[i][fZatvoreno] = 0;
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Firma je otkljucana!");
		
		mysql_tqueryEx(SQL, "UPDATE `business` SET `Zatvoreno` = '%d' WHERE `SQLID` = '%d'",
			FirmaInfo[i][fZatvoreno], FirmaInfo[i][SQLID]);
	}
	else if(!strcmp(akcija, "izbrisi", true))
	{
		DestroyDynamic3DTextLabel(FirmaLabel[i]);
		DestroyDynamicPickup(FirmaPickup[i]);
		FirmaInfo[i][fUlazX] = 0;
		FirmaInfo[i][fUlazY] = 0;
    	FirmaInfo[i][fUlazZ] = 0;
		FirmaInfo[i][fIzlazX] = 0;
		FirmaInfo[i][fIzlazY] = 0;
    	FirmaInfo[i][fIzlazZ] = 0;

		mysql_tqueryEx(SQL, "DELETE FROM `business` WHERE `SQLID` = '%d'", i);
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Firma ID: %d obrisana!", i);
	}
	else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Netacno uneseno radnja editovanja!");
	return 1;
}

CMD:efirmu2(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
	new i = -1;
	for(new x; x < MAX_FIRMI; x++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, FirmaInfo[x][fUlazX], FirmaInfo[x][fUlazY], FirmaInfo[x][fUlazZ]))
		{
			i = x;
			IzmenaFirme[playerid] = x;
			break;
		}
	}
	if(i == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste kod firme!");

	new akcija[16],
		radnja;

	if(sscanf(params, "s[16]d", akcija,radnja))
    	return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/efirmu2 [ Level | Cena | Kasa | Proizvodi ]");
		
	if(!strcmp(akcija, "level", true))
	{
        FirmaInfo[IzmenaFirme[playerid]][fLevel] = radnja;
		FirmaLabelIPickup(i);

		mysql_tqueryEx(SQL, "UPDATE `business` SET `Level` = '%d' WHERE `SQLID` = '%d'",
			FirmaInfo[i][fLevel], FirmaInfo[i][SQLID]);
			
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Izmenili ste level firme id: %d u %d!", i, radnja);
		IzmenaFirme[playerid] = -1;
	}
	else if(!strcmp(akcija, "cena", true))
	{
        FirmaInfo[IzmenaFirme[playerid]][fCena] = radnja;
		FirmaLabelIPickup(i);
		
		mysql_tqueryEx(SQL, "UPDATE `business` SET `Cena` = '%d' WHERE `SQLID` = '%d'",
			FirmaInfo[i][fCena], FirmaInfo[i][SQLID]);
			
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Izmenili ste cenu firme id: %d u %d!", i, radnja);
		IzmenaFirme[playerid] = -1;
	}
	else if(!strcmp(akcija, "kasa", true))
	{
        FirmaInfo[IzmenaFirme[playerid]][fKasa] = radnja;
		FirmaLabelIPickup(i);

		mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d' WHERE `SQLID` = '%d'",
			FirmaInfo[i][fKasa], FirmaInfo[i][SQLID]);
			
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Izmenili ste kasu firme id: %d u %d!", i, radnja);
		IzmenaFirme[playerid] = -1;
	}
	else if(!strcmp(akcija, "proizvodi", true))
	{
        FirmaInfo[IzmenaFirme[playerid]][fProdukti] = radnja;
		FirmaLabelIPickup(i);

		mysql_tqueryEx(SQL, "UPDATE `business` SET `Produkti` = '%d' WHERE `SQLID` = '%d'",
			FirmaInfo[i][fProdukti], FirmaInfo[i][SQLID]);
			
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Izmenili ste proizvode firme id: %d u %d!", i, radnja);
		IzmenaFirme[playerid] = -1;
	}
	else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Netacno uneseno radnja editovanja!");
	return 1;
}

CMD:kupifirmu(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	for(new i; i < sizeof(FirmaInfo); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ]))
		{
			if(!strcmp(FirmaInfo[i][fVlasnik], "Niko", true) && FirmaInfo[i][fImaVlasnika] == 0)
			{
				if(PI[playerid][Level] < FirmaInfo[i][fLevel])
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Treba vam level %d za ovu firmu!", FirmaInfo[i][fLevel]);

				if(PI[playerid][Firma] != -1)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imas firmu!!");

				if(PI[playerid][Novac] < FirmaInfo[i][fCena])
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas dovoljno novca za ovo firmu!");

				strmid(FirmaInfo[i][fVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);

				FirmaInfo[i][fImaVlasnika] = 1;
				PI[playerid][Firma] = i;
				FirmaInfo[i][fZatvoreno] = 0;
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo kupili ste firmu, Za komande firme koristite /firma!");

				PI[playerid][Novac] -= FirmaInfo[i][fCena];
				GivePlayerMoney(playerid, -FirmaInfo[i][fCena]);

				UsaoFirma[playerid] = i;
				FirmaLabelIPickup(i);
				CheckQuestDone(playerid, 15);
				
				mysql_tqueryEx(SQL, "UPDATE `business` SET `ImaVlasnika` = '%d', `Vlasnik` = '%s', `Zatvoreno` = '%d' WHERE `SQLID` = '%d'",
					FirmaInfo[i][fImaVlasnika], FirmaInfo[i][fVlasnik], FirmaInfo[i][fZatvoreno], FirmaInfo[i][SQLID]);
				
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Firma` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], i, PI[playerid][SQLID]);
				return 1;
			}
			else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Firma je vec kupljena!");
		}
	}
	return 1;
}

CMD:meni(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	new x;
	for(new i; i < MAX_FIRMI; i++)
    {
	    if(IsPlayerInRangeOfPoint(playerid, 25.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]) && GetPlayerVirtualWorld(playerid) == FirmaInfo[i][fVW])
	    {
		    if(FirmaInfo[i][fVrsta] == VRSTA_RESTORAN)
		    {
			    x++;
				if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");
			    
			    Dialog_Show(playerid, dialog_krestoran, DIALOG_STYLE_TABLIST, "{1b71bc}Restoran", "{1b71bc}> {FFFFFF}Supa\t{6EF83C}20$\n\
							                                                                       {1b71bc}> {FFFFFF}Pasulj\t{6EF83C}30$\n\
																								   {1b71bc}> {FFFFFF}Riblja Corba\t{6EF83C}40$\n\
																								   {1b71bc}> {FFFFFF}Slovenski Kern's Kulen\t{6EF83C}60$\n\
																								   {1b71bc}> {FFFFFF}Pita sa sirom\t{6EF83C}30$\n\
																								   {1b71bc}> {FFFFFF}Raznjici\t{6EF83C}70$\n\
																								   {1b71bc}> {FFFFFF}Palacinke\t{6EF83C}10$\n\
																								   {1b71bc}> {FFFFFF}Cvarci\t{6EF83C}30$\n\
																								   {1b71bc}> {FFFFFF}Biftek\t{6EF83C}90$\n\
																								   {1b71bc}> {FFFFFF}Bllade's Proja\t{6EF83C}50$\n\
																								   {1b71bc}> {FFFFFF}Coca-Cola\t{6EF83C}10$\n\
																								   {1b71bc}> {FFFFFF}Viski\t{6EF83C}100$\n\
																								   {1b71bc}> {FFFFFF}Pivo\t{6EF83C}10$\n\
																								   {1b71bc}> {FFFFFF}Gusti Sok\t{6EF83C}10$", "Odaberi", "Izlaz");
			    break;
			}
		    else if(FirmaInfo[i][fVrsta] == VRSTA_BURG)
		    {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");
			    
			    Dialog_Show(playerid, dialog_kburg, DIALOG_STYLE_TABLIST, "{1b71bc}Burg", "{1b71bc}> {FFFFFF}Hamburger\t{6EF83C}10$\n\
							                                                                       {1b71bc}> {FFFFFF}Cheeseburger\t{6EF83C}15$\n\
																								   {1b71bc}> {FFFFFF}Pomfrit\t{6EF83C}15$\n\
																								   {1b71bc}> {FFFFFF}Pileci Medaljoni\t{6EF83C}20$\n\
																								   {1b71bc}> {FFFFFF}Mijesana Salata\t{6EF83C}25$\n\
																								   {1b71bc}> {FFFFFF}Kafa\t{6EF83C}10$\n\
																								   {1b71bc}> {FFFFFF}Caj\t{6EF83C}15$\n\
																								   {1b71bc}> {FFFFFF}Sladoled\t{6EF83C}20$\n\
																								   {1b71bc}> {FFFFFF}Coca Cola\t{6EF83C}10$\n\
																								   {1b71bc}> {FFFFFF}Voda\t{6EF83C}10$", "Odaberi", "Izlaz");
			    break;
			}
		    else if(FirmaInfo[i][fVrsta] == VRSTA_CLUCKIN)
		    {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");
			    
			    Dialog_Show(playerid, dialog_kcluckin, DIALOG_STYLE_TABLIST, "{1b71bc}Cluckin", "{1b71bc}> {FFFFFF}Hamburger\t{6EF83C}10$\n\
							                                                                       {1b71bc}> {FFFFFF}Sladoledna torta\t{6EF83C}15$\n\
																								   {1b71bc}> {FFFFFF}Sendvic\t{6EF83C}10$\n\
																								   {1b71bc}> {FFFFFF}Burek\t{6EF83C}20$\n\
																								   {1b71bc}> {FFFFFF}Krofna\t{6EF83C}15$\n\
																								   {1b71bc}> {FFFFFF}Kakao\t{6EF83C}15$\n\
																								   {1b71bc}> {FFFFFF}Coca Cola\t{6EF83C}10$\n\
																								   {1b71bc}> {FFFFFF}Kafa\t{6EF83C}10$", "Odaberi", "Izlaz");
			    break;
			}
			else if(FirmaInfo[i][fVrsta] == VRSTA_PIZZA)
		    {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");

				Dialog_Show(playerid, dialog_kpizza, DIALOG_STYLE_TABLIST, "{1b71bc}Pizza", "{1b71bc}> {FFFFFF}Capricoza\t{6EF83C}30$\n\
							                                                                       {1b71bc}> {FFFFFF}Margarita\t{6EF83C}15$\n\
																								   {1b71bc}> {FFFFFF}Piletina\t{6EF83C}15$\n\
																								   {1b71bc}> {FFFFFF}Pomfrit\t{6EF83C}15$\n\
																								   {1b71bc}> {FFFFFF}Limunada\t{6EF83C}10$\n\
																								   {1b71bc}> {FFFFFF}Kafa\t{6EF83C}10$", "Odaberi", "Izlaz");
				break;
			}
		}
	}
	return 1;
}

CMD:pice(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	new x;
	for(new i; i < MAX_FIRMI; i++)
    {
	    if(IsPlayerInRangeOfPoint(playerid, 25.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]) && GetPlayerVirtualWorld(playerid) == FirmaInfo[i][fVW])
	    {
		    if(FirmaInfo[i][fVrsta] == VRSTA_PIGPEN || FirmaInfo[i][fVrsta] == VRSTA_BAR || FirmaInfo[i][fVrsta] == VRSTA_DISCO)
		    {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");
			    
				Dialog_Show(playerid, dialog_kpice, DIALOG_STYLE_TABLIST, "{1b71bc}Pice", "{1b71bc}> {FFFFFF}Pivo\t{6EF83C}10$\n\
																                           {1b71bc}> {FFFFFF}Rakija\t{6EF83C}20$\n\
																						   {1b71bc}> {FFFFFF}Viski\t{6EF83C}50$\n\
																						   {1b71bc}> {FFFFFF}Liker\t{6EF83C}40$\n\
																						   {1b71bc}> {FFFFFF}Pelinkovac\t{6EF83C}35$\n\
																						   {1b71bc}> {FFFFFF}Vodka\t{6EF83C}30$\n\
																						   {1b71bc}> {FFFFFF}Lozovaca\t{6EF83C}25$\n\
																						   {1b71bc}> {FFFFFF}Vino\t{6EF83C}30$\n\
																						   {1b71bc}> {FFFFFF}Voda\t{6EF83C}10$", "Odaberi", "Izlaz");
			    break;
			}
		}
	}
	return 1;
}

CMD:teretana(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	new x;
	for(new i; i < MAX_FIRMI; i++)
    {
		if(IsPlayerInRangeOfPoint(playerid, 25.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]) && GetPlayerVirtualWorld(playerid) == FirmaInfo[i][fVW])
	    {
			if(FirmaInfo[i][fVrsta] == VRSTA_GYM)
			{
				x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");

				Dialog_Show(playerid, dialog_teretana, DIALOG_STYLE_TABLIST, "{1b71bc}Teretana", "{1b71bc}> {FFFFFF}Normalni Trening\t{6EF83C}100$\n\
																							      {1b71bc}> {FFFFFF}Box Trening\t{6EF83C}200$\n\
																								  {1b71bc}> {FFFFFF}Kung Fu Trening\t{6EF83C}300$\n\
																								  {1b71bc}> {FFFFFF}KneeHead Trening\t{6EF83C}400$\n\
																								  {1b71bc}> {FFFFFF}Grabkick Trening\t{6EF83C}500$\n\
																								  {1b71bc}> {FFFFFF}Elbow Trening\t{6EF83C}600$", "Odaberi", "Izlaz");
			    break;
			}
		}
	}
	return 1;
}

CMD:odjeca(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	new x;
	for(new i; i < MAX_FIRMI; i++)
    {
        if(IsPlayerInRangeOfPoint(playerid, 15.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]) && GetPlayerVirtualWorld(playerid) == FirmaInfo[i][fVW])
        {
            if(FirmaInfo[i][fVrsta] == VRSTA_BINCO)
            {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");
			    
			    TogglePlayerControllable(playerid, 0);
            	ShowModelSelectionMenu(playerid, skinlist, "Butik");
			    break;
			}
			else if(FirmaInfo[i][fVrsta] == VRSTA_SUBURBAN)
		    {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");
					
                TogglePlayerControllable(playerid, 0);
            	ShowModelSelectionMenu(playerid, skinlist, "Butik");
			    break;
			}
			else if(FirmaInfo[i][fVrsta] == VRSTA_VICTIM)
		    {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");

                TogglePlayerControllable(playerid, 0);
            	ShowModelSelectionMenu(playerid, skinlist, "Butik");
				break;
			}
			else if(FirmaInfo[i][fVrsta] == VRSTA_ZIP)
		    {
			    x++;
			    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");

                TogglePlayerControllable(playerid, 0);
            	ShowModelSelectionMenu(playerid, skinlist, "Butik");
				break;
			}
		}
	}
	return 1;
}

CMD:firma(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Firma] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate firmu!");

	if(strcmp(FirmaInfo[PI[playerid][Firma]][fVlasnik], ReturnPlayerName(playerid), true))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste vlasnik te firme!");

	Dialog_Show(playerid, dialog_firma, DIALOG_STYLE_LIST, "{1b71bc}Firma", "{1b71bc}> {FFFFFF}Informacije\n\
															                 {1b71bc}> {FFFFFF}%s\n\
																			 {1b71bc}> {FFFFFF}Podigni Novac\n\
																			 {1b71bc}> {FFFFFF}Ostavi Novac\n\
																			 {1b71bc}> {FFFFFF}Promeni Naziv\n\
																			 {1b71bc}> {FFFFFF}Prodaj Firmu", "Odaberi", "Izlaz", FirmaInfo[PI[playerid][Firma]][fZatvoreno] == 1 ? "Otkljucaj Firmu" : "Zakljucaj Firmu");
	return 1;
}

CMD:produkti(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	new Nasao_Firmu = 0;
	for(new fi_id = 1; fi_id < MAX_FIRMI; fi_id++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 8.0, FirmaInfo[fi_id][fUlazX], FirmaInfo[fi_id][fUlazY], FirmaInfo[fi_id][fUlazZ]))
		{
			Nasao_Firmu ++;
			if(PI[playerid][Firma] == fi_id)
			{
   				if(FirmaInfo[fi_id][fProdukti] >= 300)
   					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vasa firma ima dovoljno produkata!");
			}
			else
			{
   				if(FirmaInfo[fi_id][fProdukti] > 0)
   					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}U firmu mozete stavljati produkte kada firma bude imala 0 produkata!");
			}
			if(FirmaInfo[fi_id][fImaVlasnika] == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Firma nema vlasnika pa joj ne mozete preprodati produkte!");

			if(IsPlayerInAnyVehicle(playerid))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti van vozila!");

			Dialog_Show(playerid, dialog_uprodukte, DIALOG_STYLE_INPUT, "{1b71bc}Produkti", "{FFFFFF}Unesite kolicinu produkata koju zelite da preprodate ovoj firmi:", "Preprodaj", "Zatvori");
			break;
		}
	}
	if(Nasao_Firmu == 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u blizini niti jedne firme!");
	return 1;
}

CMD:kupi(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    new x;
	for(new i; i < MAX_FIRMI; i++)
    {
		if(IsPlayerInRangeOfPoint(playerid, 25.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]) && GetPlayerVirtualWorld(playerid) == FirmaInfo[i][fVW])
		{
			if(FirmaInfo[i][fVrsta] == VRSTA_MARKET)
			{
				x++;

				if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");

			    Dialog_Show(playerid, dialog_kmarket, DIALOG_STYLE_TABLIST, "{1b71bc}Market Kupovina", "{1b71bc}> {FFFFFF}Mobilni Telefon\t{6EF83C}150$\n\
				                                                                                        {1b71bc}> {FFFFFF}Imenik\t{6EF83C}50$\n\
																										{1b71bc}> {FFFFFF}Cigare\t{6EF83C}20$\n\
																										{1b71bc}> {FFFFFF}Upaljac\t{6EF83C}10$\n\
																										{1b71bc}> {FFFFFF}Dopuna\t{6EF83C}50$\n\
																										{1b71bc}> {FFFFFF}Dopuna\t{6EF83C}100$\n\
																										{1b71bc}> {FFFFFF}Kanap\t{6EF83C}350$\n\
																										{1b71bc}> {FFFFFF}Naocare\t{6EF83C}300$\n\
																										{1b71bc}> {FFFFFF}Cvece\t{6EF83C}100$\n\
																										{1b71bc}> {FFFFFF}Sok\t{6EF83C}10$\n\
																										{1b71bc}> {FFFFFF}Pivo\t{6EF83C}10$\n\
																										{1b71bc}> {FFFFFF}Sat\t{6EF83C}130$\n\
																										{1b71bc}> {FFFFFF}Hrana\t{6EF83C}300$", "Kupi", "Izlaz");
				break;
			}
			else if(FirmaInfo[i][fVrsta] == VRSTA_SEXSHOP)
			{
				x++;

				if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");

				Dialog_Show(playerid, dialog_kss, DIALOG_STYLE_TABLIST, "{1b71bc}Sex Shop", "{1b71bc}> {FFFFFF}Sivi Vibrator\t{6EF83C}50$\n\
																					         {1b71bc}> {FFFFFF}Beli Vibrator\t{6EF83C}50$\n\
																							 {1b71bc}> {FFFFFF}Ljubicasti Vibrator\t{6EF83C}70$\n\
																							 {1b71bc}> {FFFFFF}Cvece\t{6EF83C}10$", "Kupi", "Izlaz");
				break;
			}
			else if(FirmaInfo[i][fVrsta] == VRSTA_GUNSHOP)
			{
				x++;

				if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");

				if(PI[playerid][Level] < 2)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti najmanje level 2 da bi mogli kupovati oruzije!");
					
                if(PI[playerid][OruzijeDozvola] == 0)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu za oruzije!");

				Dialog_Show(playerid, dialog_kgs, DIALOG_STYLE_TABLIST, "{1b71bc}Gun Shop", "{1b71bc}> {FFFFFF}Noz\t{6EF83C}100$\n\
																							{1b71bc}> {FFFFFF}Palica\t{6EF83C}60$\n\
																							{1b71bc}> {FFFFFF}Shotgun\t{6EF83C}500$\n\
																							{1b71bc}> {FFFFFF}Padobran\t{6EF83C}250$\n\
																							{1b71bc}> {FFFFFF}Dezert\t{6EF83C}600$\n\
																							{1b71bc}> {FFFFFF}M4\t{6EF83C}1000$\n\
																							{1b71bc}> {FFFFFF}AK-47\t{6EF83C}1000$\n\
																							{1b71bc}> {FFFFFF}MP5\t{6EF83C}900$\n\
																							{1b71bc}> {FFFFFF}Sniper\t{6EF83C}2000$", "Kupi", "Izlaz");
				break;
			}
		}
	}
	return 1;
}

CMD:kreirajorg(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
    static orgid,
		orgime[32],
		Float:Pos[3],
		inter,
		vw,
		Float:PosI[3];

	if(sscanf(params, "s[32]fffii", orgime, Pos[0], Pos[1], Pos[2], inter, vw))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/kreirajorg [Ime] [X-int] [Y-int] [Z-int] [INT ID] [VW ID]");

	for(new id = 1; id < MAX_ORG; id++)
	{
	    if(OrgInfo[id][SQLID] < 1)
        {
            orgid = id; break;
        }
	}
    if(orgid == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum organizacija je dostignut!");
		
    if(strlen(orgime) < 3 || strlen(orgime) > 32)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ime organizacije ne mozete biti ispod 3 i iznad 32 znaka!");

	strreplace(orgime, '_', ' ');
	GetPlayerPos(playerid, PosI[0], PosI[1], PosI[2]);
	OrgInfo[orgid][SQLID] = orgid;
	OrgInfo[orgid][oIme] = orgime;
 	OrgInfo[orgid][oInt] = inter; OrgInfo[orgid][oVw] = vw;
    OrgInfo[orgid][oPozExtX] = PosI[0]; OrgInfo[orgid][oPozExtY] = PosI[1]; OrgInfo[orgid][oPozExtZ] = PosI[2];
    OrgInfo[orgid][oPozIntX] = Pos[0]; OrgInfo[orgid][oPozIntY] = Pos[1]; OrgInfo[orgid][oPozIntZ] = Pos[2];
	OrgLabel(orgid);
	
	mysql_tqueryEx(SQL, "INSERT INTO `organizations` (SQLID, Ime, PozExtX, PozExtY, PozExtZ, PozIntX, PozIntY, PozIntZ, IntAngle, ExtAngle, Interijer, VW) \
		VALUES('%d', '%s', '%f', '%f', '%f', '%f', '%f', '%f', '180', '180', '%d', '%d')",
		orgid, OrgInfo[orgid][oIme], PosI[0], PosI[1], PosI[2], Pos[0], Pos[1], Pos[2], OrgInfo[orgid][oInt], OrgInfo[orgid][oVw]);
	
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste kreirali organizaciju ID: %d, sada kreirajte skinove/rankove/spawn/sef!");
    return 1;
}

CMD:orgime(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	static orgid,
		orgime[32];

	if(sscanf(params, "is[32]", orgid, orgime))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/orgime [ID ORG] [Novo Ime]");

	if(strlen(orgime) < 3 || strlen(orgime) > 32)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ime organizacije ne mozete biti ispod 3 i iznad 32 znaka!");
	
	if(OrgInfo[orgid][SQLID] < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}ID te organizacije ne postoji!");
		
    strreplace(orgime, '_', ' ');
	OrgInfo[orgid][oIme] = orgime;
	OrgLabel(orgid); 
	mysql_tqueryEx(SQL, "UPDATE `organizations` SET `Ime` = '%s' WHERE `SQLID` = '%d'", OrgInfo[orgid][oIme], OrgInfo[orgid][SQLID]);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Postavili ste ime organizacije ID: %d na %s.", orgid, orgime);
	return 1;
}

CMD:orgsef(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
    static orgid,
		Float:Pos[3];

	if(sscanf(params, "i", orgid))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/orgsef [ID ORG]");
	
	if(OrgInfo[orgid][SQLID] < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}ID te organizacije ne postoji!");

	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	
	OrgInfo[orgid][oSef] = 1;
	OrgInfo[orgid][oDrzavni_Sef] = 0;
	OrgInfo[orgid][oSefPozX] = Pos[0];
	OrgInfo[orgid][oSefPozY] = Pos[1];
	OrgInfo[orgid][oSefPozZ] = Pos[2];
	OrgLabel(orgid); 

	mysql_tqueryEx(SQL, "UPDATE `organizations` SET `Sef` = '%d', `Drzavni_Sef` = '%d', `SefPozX` = '%f', `SefPozY` = '%f', `SefPozZ` = '%f' WHERE `SQLID` = '%d'",
		OrgInfo[orgid][oSef], OrgInfo[orgid][oDrzavni_Sef], Pos[0], Pos[1], Pos[2], OrgInfo[orgid][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kreirali/Premestili ste sef organizacije ID: %d.", orgid);
	return 1;
}

CMD:esef(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	static orgid,
		opcija;

	if(sscanf(params, "ii", orgid, opcija))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/esef [ID ORG] - [0 obican sef | 1 drzavni sef]");
	
	if(OrgInfo[orgid][SQLID] < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}ID te organizacije ne postoji!");
		
	if(OrgInfo[orgid][oSef] != 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ta organizacije nema sef (/orgsef)!");

	if(opcija == 0)
	{
        if(OrgInfo[orgid][oDrzavni_Sef] == 0)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Toj organizaciji sef je vec postavljen na 0!");

		OrgInfo[orgid][oDrzavni_Sef] = 0;
		mysql_tqueryEx(SQL, "UPDATE `organizations` SET `Drzavni_Sef` = '%d' WHERE `SQLID` = '%d'", OrgInfo[orgid][oDrzavni_Sef], OrgInfo[orgid][SQLID]);
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Postavili ste obican sef organizaciji ID: %d.", orgid);
		OrgLabel(orgid);
	}
	else if(opcija == 1)
	{
	    if(OrgInfo[orgid][oDrzavni_Sef] == 1)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Toj organizaciji sef je vec postavljen na 0!");

		OrgInfo[orgid][oDrzavni_Sef] = 1;
		mysql_tqueryEx(SQL, "UPDATE `organizations` SET `Drzavni_Sef` = '%d' WHERE `SQLID` = '%d'", OrgInfo[orgid][oDrzavni_Sef], OrgInfo[orgid][SQLID]);
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Postavili ste drzavni sef organizaciji ID: %d.", orgid);
		OrgLabel(orgid);
	}
	else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresna opcija!");
	return 1;
}

CMD:orgskin(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	static orgid,
		skin1,
		skin2,
		skin3,
		skin4,
		skin5,
		skin6,
		skin7;

	if(sscanf(params, "iiiiiiii", orgid, skin1, skin2, skin3, skin4, skin5, skin6, skin7))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/orgskin [ID ORG] [Skin 1] [Skin 2] [Skin 3] [Skin 4] [Skin 5] [Skin 6] [Skin 7 - zenski]");
	
	if(OrgInfo[orgid][SQLID] < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}ID te organizacije ne postoji!");
		
	if(skin1 < 1 || skin1 > 311)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ici ispod 1 i iznad 311 (Skin 1)!");

	if(skin2 < 1 || skin2 > 311)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ici ispod 1 i iznad 311 (Skin 2)!");

	if(skin3 < 1 || skin3 > 311) 
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ici ispod 1 i iznad 311 (Skin 3)!");

	if(skin4 < 1 || skin4 > 311) 
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ici ispod 1 i iznad 311 (Skin 4)!");

	if(skin5 < 1 || skin5 > 311) 
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ici ispod 1 i iznad 311 (Skin 5)!");

	if(skin6 < 1 || skin6 > 311) 
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ici ispod 1 i iznad 311 (Skin 6)!");
	    
    if(skin7 < 1 || skin7 > 311)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ici ispod 1 i iznad 311 (Skin 7)!");

	OrgInfo[orgid][oSkin1] = skin1;
	OrgInfo[orgid][oSkin2] = skin2;
	OrgInfo[orgid][oSkin3] = skin3;
	OrgInfo[orgid][oSkin4] = skin4;
	OrgInfo[orgid][oSkin5] = skin5;
	OrgInfo[orgid][oSkin6] = skin6;
	OrgInfo[orgid][oZSkin] = skin7;
	
	mysql_tqueryEx(SQL, "UPDATE `organizations` SET `Skin1` = '%d', `Skin2` = '%d', `Skin3` = '%d', `Skin4` = '%d', `Skin5` = '%d', `Skin6` = '%d', `ZSkin` = '%d' WHERE `SQLID` = '%d'",
		OrgInfo[orgid][oSkin1], OrgInfo[orgid][oSkin2], OrgInfo[orgid][oSkin3], OrgInfo[orgid][oSkin4], OrgInfo[orgid][oSkin5], OrgInfo[orgid][oSkin6], OrgInfo[orgid][oZSkin], OrgInfo[orgid][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Postavili ste skinove organizaciji ID: %d.", orgid);
	va_SendClientMessage(playerid, 0x1b71bcFF, "> {FFFFFF}Skin 1: %d | Skin 2: %d | Skin 3: %d | Skin 4: %d | Skin 5: %d | Skin 6: %d | Skin 7: %d!", skin1, skin2, skin3, skin4, skin5, skin6, skin7);
	return 1;
}

CMD:orgspawn(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	static orgid,
		Float:Pos[3];

	if(sscanf(params, "i", orgid))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/orgspawn [ID ORG]");
	
	if(OrgInfo[orgid][SQLID] < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}ID te organizacije ne postoji!");
		
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	OrgInfo[orgid][oPozSpawnX] = Pos[0];
 	OrgInfo[orgid][oPozSpawnY] = Pos[1];
 	OrgInfo[orgid][oPozSpawnZ] = Pos[2]; 
 	
 	mysql_tqueryEx(SQL, "UPDATE `organizations` SET `PozSpawnX` = '%f', `PozSpawnY` = '%f', `PozSpawnZ` = '%f' WHERE `SQLID` = '%d'",
		Pos[0], Pos[1], Pos[2], OrgInfo[orgid][SQLID]);
    
    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Postavili ste spawn poziciju organizaciji ID: %d.", orgid);
	return 1;
}

CMD:orgulaz(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	static orgid,
		Float:Pos[3];

	if(sscanf(params, "i", orgid))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/orgulaz [ID ORG]");

	if(OrgInfo[orgid][SQLID] < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}ID te organizacije ne postoji!");

	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	OrgInfo[orgid][oPozExtX] = Pos[0];
 	OrgInfo[orgid][oPozExtY] = Pos[1];
 	OrgInfo[orgid][oPozExtZ] = Pos[2];
 	OrgLabel(orgid);

 	mysql_tqueryEx(SQL, "UPDATE `organizations` SET `PozExtX` = '%f', `PozExtY` = '%f', `PozExtZ` = '%f' WHERE `SQLID` = '%d'",
		Pos[0], Pos[1], Pos[2], OrgInfo[orgid][SQLID]);

    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Postavili ste ulaz poziciju organizaciji ID: %d.", orgid);
	return 1;
}

CMD:orgizlaz(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	static orgid,
		Float:Pos[3];

	if(sscanf(params, "i", orgid))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/orgulaz [ID ORG]");

	if(OrgInfo[orgid][SQLID] < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}ID te organizacije ne postoji!");

	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	OrgInfo[orgid][oPozIntX] = Pos[0];
 	OrgInfo[orgid][oPozIntY] = Pos[1];
 	OrgInfo[orgid][oPozIntZ] = Pos[2];
 	OrgLabel(orgid);

 	mysql_tqueryEx(SQL, "UPDATE `organizations` SET `PozIntX` = '%f', `PozIntY` = '%f', `PozIntZ` = '%f' WHERE `SQLID` = '%d'",
		Pos[0], Pos[1], Pos[2], OrgInfo[orgid][SQLID]);

    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Postavili ste izlaz poziciju organizaciji ID: %d.", orgid);
	return 1;
}

CMD:makeleader(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 4)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
	static id,
		orgid;

	if(sscanf(params, "ud", id, orgid))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/makeleader [ID/Ime] [ID ORG]");

	if(orgid < 0 || orgid > MAX_ORG)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ici ispod 0 i iznad ogranicenog broja organizacija!");

	if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogrijesili ste ID!");

	if(orgid == 0)
	{
	    if(PI[id][Lider] == 0)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije lider organizacije!");

		PI[id][Lider] = 0;
		PI[id][Clan] = 0;
		PI[id][Rank] = 0;
		PI[id][Skin] = 240;
		SetPlayerSkin(id, PI[id][Skin]);

		mysql_tqueryEx(SQL, "UPDATE `users` SET `Skin` = '%d', `Lider` = '%d', `Clan` = '%d', `Rank` = '%d' WHERE `SQLID` = '%d'",
			PI[id][Skin], PI[id][Lider], PI[id][Clan], PI[id][Rank], PI[id][SQLID]);
	   
		va_SendClientMessage(playerid, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vam je skinuo lidera.", ReturnPlayerName(playerid));
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Skinuli ste lidera igracu %s.", ReturnPlayerName(id));
	}
	else if(orgid > 0)
	{
	    if(PI[id][Lider] != 0)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je vec lidere neke organizacije, prvo mu skinite lidera!");

		if(orgid == PI[id][Lider])
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je vec lider te organizacije!");

		if(OrgInfo[orgid][SQLID] < 1)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}ID te organizacije ne postoji!");

		PI[id][Lider] = orgid;
		PI[id][Clan] = orgid;
		PI[id][Rank] = 6;
		PI[id][Skin] = OrgInfo[PI[id][Lider]][oSkin6];
		SetPlayerSkin(id, PI[id][Skin]);
		CheckQuestDone(id, 5);
			
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Skin` = '%d', `Lider` = '%d', `Clan` = '%d', `Rank` = '%d' WHERE `SQLID` = '%d'",
			PI[id][Skin], PI[id][Lider], PI[id][Clan], PI[id][Rank], PI[id][SQLID]);
				
		va_SendClientMessage(playerid, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vam je dao lidera organizacije %s.", ReturnPlayerName(playerid), OrgInfo[PI[id][Lider]][oIme]);
        va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Postavili ste lidera igracu %s organizacije %s.", ReturnPlayerName(id), OrgInfo[PI[id][Lider]][oIme]);
	}
	return 1;
}

CMD:offmakeleader(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 4)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	new imeigraca[MAX_PLAYER_NAME];

	if(sscanf(params, "s[24]", imeigraca))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/offmakeleader [Ime_Prezime]");
		
    if(IsPlayerConnected(GetPlayerIdFromName(imeigraca)))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je online (/makeleader).");

	new query[128];
	mysql_format(SQL, query, sizeof(query), "SELECT `SQLID` FROM `users` WHERE `Ime` = '%e' LIMIT 1", imeigraca);
	mysql_tquery(SQL, query, "CheckPlayerLeader", "is", playerid, imeigraca);
	return 1;
}

CMD:ubaci(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	new id;

	if(PI[playerid][Lider] < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo Lideri!");

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/ubaci [ID]");

	if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je offline!");

	if(PI[id][Level] < 2)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac mora biti minimum level 2!");

	if(PozvanOrg[id] > 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Neko je vec pozvao tog igraca!");

	if(PI[id][OrgKazna] != 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac ima kaznu za ulazak!");

	if(id == playerid)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete sebe pozvati u org!");

	if(PI[id][Lider] > 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je lider neke organizacije!");

    if(PI[id][Clan] > 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je vec u nekoj organizaciji!");
	
	va_SendClientMessage(id, 0x1fdea7FF,"#Org-Poziv: {FFFFFF}Lider %s te je pozvao da se pridruzis organizaciji %s!", ReturnPlayerName(playerid), OrgInfo[PI[playerid][Lider]][oIme]);
	va_SendClientMessage(id, -1, "Da prihvatite poziv kucajte /prihvati poziv | Da odbijete kucajte /odbij poziv!");
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Pozvali ste %s da se pridruzi vasoj organizaciji.", ReturnPlayerName(id));
	PozvanOrg[id] = PI[playerid][Lider];
	return 1;
}

CMD:izbaci(playerid, const params[])
{
	if(PI[playerid][Lider] < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo Lideri!");
		
	new id, kazna[10], string[156], OrgID = PI[playerid][Lider];

	if(sscanf(params, "us[10]", id, kazna))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/izbaci [ID] [Kazna Da/Ne]");

	if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je offline!");

	if(Ulogovan[id] != 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije ulogovan!");

	if(id == playerid)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete sami sebe izbaciti iz organizacije!");

	if(PI[id][Clan] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije u organizaciji!");

	if(PI[id][Clan] != OrgID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije clan Vase organizacije!");

	if(PI[id][Lider] > 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je lider neke organizacije");

    if(!strcmp(kazna, "ne", true))
	{
		PI[id][Skin] = 7;
		ResetPlayerWeapons(id);
		SetPlayerSkin(id, PI[id][Skin]);
		if(PI[id][Spawn] == SPAWN_ORGANIZACIJA)
		{
			PI[id][Spawn] = SPAWN_NORMAL;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Spawn Vam je postavljen na 'Spawn' jer ste izbaceni iz organizacije!");
			SpawnPlayer(id);
		}
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Skin` = '%d', `Spawn` = '%d', `Clan` = '0', `Rank` = '0', `RankIme` = 'Nema' WHERE `SQLID` = '%d'", PI[id][Skin], PI[id][Spawn], PI[id][SQLID]);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Lider %s Vas je izbacio iz organizacije %s bez kazne!", ReturnPlayerName(playerid), OrgInfo[OrgID][oIme]);
		format(string, sizeof(string),"#Lider: {FFFFFF}Lider %s je izbacio igraca %s iz organizacije bez kazne!", ReturnPlayerName(playerid), ReturnPlayerName(id));
		OrgPoruka(OrgID, 0x1fdea7FF, string);
	}
	if(!strcmp(kazna, "da", true))
	{
		PI[id][Skin] = 7;
		ResetPlayerWeapons(id);
		SetPlayerSkin(id, PI[id][Skin]);
		if(PI[id][Spawn] == SPAWN_ORGANIZACIJA)
		{
			PI[id][Spawn] = SPAWN_NORMAL;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Spawn Vam je postavljen na 'Spawn' jer ste izbaceni iz organizacije!");
			SpawnPlayer(id);
		}
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Skin` = '%d', `Spawn` = '%d', `Clan` = '0', `Rank` = '0', `RankIme` = 'Nema', `OrgKazna` = '1' WHERE `SQLID` = '%d'", PI[id][Skin], PI[id][Spawn], PI[id][SQLID]);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Lider %s Vas je izbacio iz organizacije %s sa kaznom!", ReturnPlayerName(playerid), OrgInfo[OrgID][oIme]);
		format(string, sizeof(string),"#Lider: {FFFFFF}Lider %s je izbacio igraca %s iz organizacije sa kaznom!", ReturnPlayerName(playerid), ReturnPlayerName(id));
		OrgPoruka(OrgID, 0x1fdea7FF, string);
	}
	return 1;
}

CMD:dodelirank(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Lider] < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo Lideri!");
		
	new id, rank, OrgID = PI[playerid][Lider], rankime[15];

	if(sscanf(params, "uis[15]", id, rank, rankime))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/dodelirank [ID/Ime] [Rank (0-5)] [Rank Ime]");

	if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");

	if(Ulogovan[id] != 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije ulogovan!");

	if(rank < 1 || rank > 5)
 		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Rank ne moze biti manji od 1 i veci od 5!");

	if(PI[id][Rank] == rank)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac vec ima taj rank!");

	if(PI[id][Lider] > 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je lider neke organizacije");

	if(id == playerid)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete sebi davati rank!");

	if(PI[id][Clan] != OrgID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije clan Vase organizacije!");
		
    if(strlen(rankime) < 3 || strlen(rankime) > 15)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ime ranka ne mozete biti ispod 3 i iznad 15 znaka!");
		
	if(rank == 1)
	{
	    if(PI[id][Pol] == 1)
	    {
			PI[id][Skin] = OrgInfo[OrgID][oSkin1]; SetPlayerSkin(id, PI[id][Skin]);
		}
		else
		{
			PI[id][Skin] = OrgInfo[OrgID][oZSkin]; SetPlayerSkin(id, PI[id][Skin]);
		}
	}
	else if(rank == 2)
	{
	    if(PI[id][Pol] == 1)
	    {
			PI[id][Skin] = OrgInfo[OrgID][oSkin2]; SetPlayerSkin(id, PI[id][Skin]);
		}
		else
		{
			PI[id][Skin] = OrgInfo[OrgID][oZSkin]; SetPlayerSkin(id, PI[id][Skin]);
		}
	}
	else if(rank == 3)
	{
	    if(PI[id][Pol] == 1)
	    {
			PI[id][Skin] = OrgInfo[OrgID][oSkin3]; SetPlayerSkin(id, PI[id][Skin]);
		}
		else
		{
			PI[id][Skin] = OrgInfo[OrgID][oZSkin]; SetPlayerSkin(id, PI[id][Skin]);
		}
	}
	else if(rank == 4)
	{
	    if(PI[id][Pol] == 1)
	    {
			PI[id][Skin] = OrgInfo[OrgID][oSkin4]; SetPlayerSkin(id, PI[id][Skin]);
		}
		else
		{
			PI[id][Skin] = OrgInfo[OrgID][oZSkin]; SetPlayerSkin(id, PI[id][Skin]);
		}
	}
	else if(rank == 5)
	{
	    if(PI[id][Pol] == 1)
	    {
			PI[id][Skin] = OrgInfo[OrgID][oSkin5]; SetPlayerSkin(id, PI[id][Skin]);
		}
		else
		{
			PI[id][Skin] = OrgInfo[OrgID][oZSkin]; SetPlayerSkin(id, PI[id][Skin]);
		}
	}
	if(PI[id][Rank] < rank)
	{
		va_SendClientMessage(id, 0x1fdea7FF, "[RANK-UP]: {FFFFFF}Promovisani ste na veci rank od strane Lidera %s | Rank: %d | Rank Ime: %s.", ReturnPlayerName(playerid), rank, rankime);
	}
	else if(PI[id][Rank] > rank)
	{
        va_SendClientMessage(id, 0x1fdea7FF, "[RANK-DOWN]: {FFFFFF}Smanjen Vam je rank od strane Lidera %s | Rank: %d | Rank Ime: %s.", ReturnPlayerName(playerid), rank, rankime);
	}
	strmid(PI[id][RankIme], rankime, 0, strlen(rankime), 15);
	PI[id][Rank] = rank;
	PI[id][RankIme] = rankime;
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Rank` = '%d', `RankIme` = '%e' WHERE `SQLID` = '%d'", PI[id][Rank], PI[id][RankIme], PI[id][SQLID]);
	return 1;
}

CMD:f(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Clan] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti clan neke organizacije!");

	if(PI[playerid][Mutiran] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste mutirani ne mozete koristiti komande!");
        
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zatvoreni ne mozete koristiti ovu komandu!");
        
    new string[256];

	if(isnull(params))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/f [tekst]");

	if(PI[playerid][Rank] >= 0 && PI[playerid][Rank] < 5) format(string, sizeof string, "F | (%s) %s: {FFFFFF}%s", PI[playerid][RankIme], ReturnPlayerName(playerid), params);
	else if(PI[playerid][Rank] == 6) format(string, sizeof string, "F | (Lider) %s: {FFFFFF}%s", ReturnPlayerName(playerid), params);
	OrgPoruka(PI[playerid][Clan], 0x1fdea7FF, string);
	return 1;
}

CMD:clanovi(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	new org, string[128];
	if(PI[playerid][Lider] != 0) org = PI[playerid][Lider];
	else if(PI[playerid][Clan] != 0) org = PI[playerid][Clan];
	else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ovu komandu mogu koristiti samo clanovi/lideri organizacija!");
    va_SendClientMessage(playerid, 0x1fdea7FF, "|----------------- Clanovi Online -----------------|");
	foreach(new i: Player)
	{
		format(string, sizeof(string), "");
		if(PI[i][Lider] == org) format(string, sizeof(string), "{1fdea7}Ime: {FFFFFF}%s | {1fdea7}LEADER", ReturnPlayerName(i));
		else if(PI[i][Clan] == org) format(string, sizeof(string), "{1fdea7}Ime: {FFFFFF}%s | {1fdea7}Rank: {FFFFFF}%d | {1fdea7}Rank Ime: {FFFFFF}%s", ReturnPlayerName(i), PI[i][Rank], PI[i][RankIme]);
		if(strlen(string) > 1) va_SendClientMessage(playerid, -1, string);
	}
	return 1;
}

CMD:lideri(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zatvoreni ne mozete koristiti ovu komandu!");
		
    new Cache:resultt, redovi;
    new DialogStrgEx[2048], globalstring[150];
    resultt = mysql_query(SQL, "SELECT * FROM `users` WHERE `Lider` > '0'");
    cache_get_row_count(redovi);
    if(resultt)
	{
        strdel(DialogStrgEx, 0, sizeof(DialogStrgEx));
        strcat(DialogStrgEx, "{FFFFFF}Ime\t{FFFFFF}Status\t{FFFFFF}Organizacija\n");
        if(redovi)
        {
	        for(new i = 0; i < redovi; i++)
			{
			    new p_name[24],
			    	last_login[30],
			    	org_name,
			    	is_online;
	            cache_get_value_name(i, "Ime", p_name, 24);
	            cache_get_value_name_int(i, "isonline", is_online);
	            cache_get_value_name_int(i, "Lider", org_name);

	            if(is_online == 0)
				{
					cache_get_value_name(i, "LastLogin", last_login, 30);

					format(globalstring, 150, "{FFFFFF}%s\t{FF0000}%s\t%s\n", p_name, last_login, OrgInfo[org_name][oIme]);
					strcat(DialogStrgEx, globalstring);
				}
				else
				{
					new id = GetPlayerIdFromName(p_name);

	            	format(globalstring, 150, "{FFFFFF}[%d] %s\t{00FF00}Online\t%s\n", id, p_name, OrgInfo[org_name][oIme]);
					strcat(DialogStrgEx, globalstring);
				}
			}
			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Lista Lidera", DialogStrgEx, "OK", "");
			strdel(DialogStrgEx, 0, sizeof(DialogStrgEx));
		}
		else va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nema lidera na listi.");
		cache_delete(resultt);
    }
	return 1;
}

CMD:koristi(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zatvoreni ne mozete koristiti ovu komandu!");

	static koristi[32], 
		string[156];
	
	if(sscanf(params, "s[32]", koristi)) 
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/koristi ( drogu | hranu )");
	
	if(!strcmp(koristi, "drogu"))
	{
	    if(PI[playerid][Droga] < 10) 
	    	return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno droge potrebno vam je 10g!");
		
		if(KoristiDrogu[playerid] == 1) 
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec koristis drogu sacekaj da prodje efekat!");
		
		static Float:ar, 
			Float:nar; 

		GetPlayerArmour(playerid, ar);
		
		if(ar >= 99.0) 
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Previse ste naduvani!");
		
		nar = floatadd(ar, 49.5); 
		SetPlayerArmour(playerid, nar);
		
		format(string, sizeof(string), "{C2A2DA}* %s koristi drogu.", ReturnPlayerName(playerid));
		ProxMessage(playerid, string, 10.0);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste uzeli drogu, efekat droge ce proci za 30 sekundi!");
		
		SetTimerEx("DrogaEfekat", 30000, false, "d", playerid); 
		
		PI[playerid][Droga] -= 10;
		PI[playerid][DrogaUzeoPuta] ++;
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Droga` = '%d', `DrogaUzeoPuta` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Droga], PI[playerid][DrogaUzeoPuta], PI[playerid][SQLID]);
		if(PI[playerid][DrogaUzeoPuta] == 10)
		{
			PI[playerid][DrogaOvisan] = 1;
			mysql_tqueryEx(SQL, "UPDATE `users` SET `DrogaOvisan` = '%d' WHERE `SQLID` = '%d'", PI[playerid][DrogaOvisan], PI[playerid][SQLID]);
			GameTextForPlayer(playerid,"~r~Postali ste zavisnik droge ~w~!", 8000, 3);
		}

		SetPlayerWeather(playerid, -68); 
		KoristiDrogu[playerid] = 1;
		if(nar > 100.0) SetPlayerArmour(playerid, 99.0);
	}
	else if(!strcmp(koristi, "hranu"))
	{
	    if(PI[playerid][Hrana] == 0) 
	    	return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate hrane!");
	    
	    static Float:hp, 
	   		Float:nhp; 

	   	GetPlayerHealth(playerid, hp);
	    
	    if(hp >= 99.0) 
	    	return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste gladni!");
		
		nhp = floatadd(hp, 49.5); 
		SetPlayerHealth(playerid, nhp);
		
		PI[playerid][Hrana] --;
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Hrana` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Hrana], PI[playerid][SQLID]);
		
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste se najeli!");
		format(string, sizeof(string), "{C2A2DA}* %s koristi hranu.", ReturnPlayerName(playerid));
		ProxMessage(playerid, string, 10.0);
		
		if(nhp > 99.0) SetPlayerHealth(playerid, 99.0);
	}
	else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nepoznato ime!");    
	return 1;
}

CMD:prihvati(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zatvoreni ne mozete koristiti ovu komandu!");
		
	new ime[24], string[156];
	if(sscanf(params, "s[24]", ime))
	{
		va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/prihvati [Ime]");
		va_SendClientMessage(playerid, -1, "Poziv | Pojacanje | Kaznu");
		return 1;
	}
	if(!strcmp(ime, "poziv", true))
	{
	    new OrgID = PozvanOrg[playerid];
		PI[playerid][Clan] = OrgID;
		if(PI[playerid][Pol] == 1) PI[playerid][Skin] = OrgInfo[OrgID][oSkin1];
		if(PI[playerid][Pol] == 2) PI[playerid][Skin] = OrgInfo[OrgID][oZSkin];
		SetPlayerSkin(playerid, PI[playerid][Skin]);
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Skin` = '%d', `Clan` = '%d', `Rank` = '1' WHERE `SQLID` = '%d'", PI[playerid][Skin], PI[playerid][Clan], PI[playerid][SQLID]);

		format(string, sizeof(string),"#Org-Poziv: {FFFFFF}Igrac %s je prihvatio poziv i pridruzio se organizaciji!", ReturnPlayerName(playerid));
		OrgPoruka(PozvanOrg[playerid], 0x1fdea7FF, string);
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prihvatili ste poziv i pridruzili ste se organizaciji.");
  		PozvanOrg[playerid] = 0;
  		CheckQuestDone(playerid, 5);
	}
	else if(!strcmp(ime, "pojacanje", true))
	{
		if(ClanDB(playerid))
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

		if(PolicijaDuznost[playerid] == 0)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");

		if(PozvaoPojacanje == -1)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niko nije pozvao pojacanje!");

		static Float:Poz[3];
		GetPlayerPos(PozvaoPojacanje, Poz[0], Poz[1], Poz[2]);
		Lociranje[playerid] = 1;
		SetPlayerCheckpoint(playerid, Poz[0], Poz[1], Poz[2], 3.0);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prihvatili ste poziv za pojacanje idite na crveni marker!");
        va_SendClientMessage(PozvaoPojacanje, 0x1b71bcFF, "#Info: {FFFFFF}Policajac %s je prihvatio vas poziv za pojacanje!", ReturnPlayerName(playerid));
	}
	else if(!strcmp(ime, "kaznu", true))
 	{
		static Float:Poz[3];
		GetPlayerPos(KaznuNapisao[playerid], Poz[0], Poz[1], Poz[2]);

		if(KaznuNapisao[playerid] == -1)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niko vam nije napisao kaznu!");

		if(!IsPlayerInRangeOfPoint(playerid, 5.0, Poz[0], Poz[1], Poz[2]))
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Predaleko ste od igraca koji vam je napisao kaznu!");

		if(!IsPlayerConnected(KaznuNapisao[playerid]))
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac koji vam je napisao kaznu je offline!");

		if(PI[playerid][Novac] < CenaKazne[playerid])
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas dovoljno novca da platis kaznu!");

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Platili ste kaznu u iznosu od %d$.", CenaKazne[playerid]);
		va_SendClientMessage(KaznuNapisao[playerid], 0x1b71bcFF, "#Info: {FFFFFF}Igrac %s je platio kaznu u iznosu od %d$.", ReturnPlayerName(playerid), CenaKazne[playerid]);

		GivePlayerMoney(playerid, -CenaKazne[playerid]);
		GivePlayerMoney(KaznuNapisao[playerid], CenaKazne[playerid]);
		
		PI[playerid][Novac] -= CenaKazne[playerid];
		PI[KaznuNapisao[playerid]][Novac] += CenaKazne[playerid];
		OrgInfo[1][oSefNovac] += CenaKazne[playerid];
		OrgInfo[2][oSefNovac] += CenaKazne[playerid];
		
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[KaznuNapisao[playerid]][Novac], PI[KaznuNapisao[playerid]][SQLID]);
        mysql_tqueryEx(SQL, "UPDATE `organizations` SET `SefNovac` = '%d' WHERE `SQLID` = '%d'", OrgInfo[1][oSefNovac], OrgInfo[1][SQLID]);
        mysql_tqueryEx(SQL, "UPDATE `organizations` SET `SefNovac` = '%d' WHERE `SQLID` = '%d'", OrgInfo[2][oSefNovac], OrgInfo[2][SQLID]);
        
		CenaKazne[playerid] = 0;
		KaznuNapisao[playerid] = -1;
	}
	else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresna opcija!");
    return 1;
}

CMD:odbij(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zatvoreni ne mozete koristiti ovu komandu!");

	new ime[24], string[256];
	if(sscanf(params, "s[24]", ime))
	{
		va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/odbij [Ime]");
		va_SendClientMessage(playerid, -1, "Poziv | Pojacanje | Kaznu");
		return 1;
	}
	if(!strcmp(ime, "poziv", true))
	{
		format(string, sizeof(string),"#Org-Poziv: {FFFFFF}Igrac %s je odbio poziv da se pridruzi organizaciji!", ReturnPlayerName(playerid));
		OrgPoruka(PozvanOrg[playerid], 0x1fdea7FF, string);
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odbili ste poziv da se pridruzite organizaciji.");
  		PozvanOrg[playerid] = 0;
	}
	else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresna opcija!");
    return 1;
}

CMD:anim(playerid, const params[])
{
    if(StavljeneLisice[playerid] > 0 || Zavezan[playerid] > 0 || PI[playerid][Zatvor] > 0 || IsPlayerInAnyVehicle(playerid))
    {
    	va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete koristiti animacije iz sledecih mogucih razloga: u zatvoru ste, stavljene su vam lisice, u vozilu ste.");
    	return 1;
    }
    new stvar[25];
    if(sscanf(params, "s[25]", stvar))
	{
		va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/anim [Animacija]");
		va_SendClientMessage(playerid,-1, "{1b71bc}Animacije: {FFFFFF}Kucajte /anim list da vidite listu animacija.");
		va_SendClientMessage(playerid,-1, "{1b71bc}Animacije: {FFFFFF}Da prekinite animaciju stisnite DESNI KLIK ILI ENTER.");
		return 1;
	}
	if(!strcmp(stvar, "list", true))
	{
        Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Animacije", "{1b71bc}Animacije: {FFFFFF}drunk | bomb | laugh | lookout | robman | lay | tired1 | tired2\n\
																			        {1b71bc}Animacije: {FFFFFF}wave | slapass | deal | crack | groundsit | chat | chat2\n\
																			        {1b71bc}Animacije: {FFFFFF}fucku | taichi | kiss | injured | sup1 | sup2 | sup3 | rap1\n\
																			        {1b71bc}Animacije: {FFFFFF}rap2 | rap3 | rap4 | push | medic | koface | lifejump | lay2 | strip\n\
																			        {1b71bc}Animacije: {FFFFFF}dance1 | dance2 | dance3 | dance4 | bed | lean | kneekick | gpunch\n\
																			        {1b71bc}Animacije: {FFFFFF}elbow | airkick | carlock | lightcig | tapcig | box | chant | finger\n\
																			        {1b71bc}Animacije: {FFFFFF}shouting | knife | cop | lean | dealstance | robman | basket\n\
																			        {1b71bc}Animacije: {FFFFFF}basket2 | basket3 | basket4 | bakset5 | basket6 | wank | wankoff\n\
																			        {1b71bc}Animacije: {FFFFFF}sit1 | sit2 | sit3 | sit4 | handsup | kiss 2 | kiss3 | carry | crossarms\n\
																			        {1b71bc}Animacije: {FFFFFF}fall | gangwalk | gangwalk2 | policewalk | blindwalk | oldwalk | sneakwalk",
																					"OK", "");
	}
    else if(!strcmp(stvar, "tired1", true))
    {
        LoopingAnim(playerid,"PED", "IDLE_tired", 4.0, 1, 0, 0, 0, 0);
    }
    else if(!strcmp(stvar, "tired2", true))
    {
        LoopingAnim(playerid,"FAT", "Idle_Tired", 4.0, 1, 0, 0, 0, 0);
    }
    else if(!strcmp(stvar, "wank", true))
	{
		LoopingAnim(playerid,"PAULNMAC","wank_loop",4.0,0,1,1,1,0);
	}
	else if(!strcmp(stvar, "wankoff", true))
	{
		LoopingAnim(playerid,"PAULNMAC","wank_in",4.0,0,1,1,1,0);
	}
	else if(!strcmp(stvar, "gangwalk", true))
	{
		LoopingAnim(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
	}
	else if(!strcmp(stvar, "gangwalk2", true))
	{
		LoopingAnim(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
	}
	else if(!strcmp(stvar, "policewalk", true))
	{
		LoopingAnim(playerid,"POLICE","Cop_move_FWD",4.1,1,1,1,1,1);
	}
	else if(!strcmp(stvar, "blindwalk", true))
	{
		LoopingAnim(playerid,"PED","Walk_Wuzi",4.1,1,1,1,1,1);
	}
	else if(!strcmp(stvar, "oldwalk", true))
	{
		LoopingAnim(playerid,"PED","WALK_old",4.1,1,1,1,1,1);
	}
	else if(!strcmp(stvar, "sneakwalk", true))
	{
		LoopingAnim(playerid,"PED","Player_Sneak",4.1,1,1,1,1,1);
	}
	else if(!strcmp(stvar, "fall", true))
	{
    	LoopingAnim(playerid,"PED","KO_skid_front",4.1,0,1,1,1,0);
	}
	else if(!strcmp(stvar, "crossarms", true))
	{
    	LoopingAnim(playerid, "COP_AMBIENT", "Coplook_loop", 4.1,0,1,1,1,0);
	}
	else if(!strcmp(stvar, "carry", true))
	{
    	OnePlayAnim(playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1);
	}
	else if(!strcmp(stvar, "kiss3", true))
	{
        OnePlayAnim(playerid, "BD_Fire", "grlfrd_kiss_03", 2.0, 0, 0, 0, 0, 0);
	}
	else if(!strcmp(stvar, "kiss2", true))
	{
        OnePlayAnim(playerid, "KISSING", "Playa_Kiss_02", 3.0, 0, 0, 0, 0, 0);
	}
	else if(!strcmp(stvar, "handsup", true))
	{
        OnePlayAnim(playerid, "ROB_BANK", "SHP_HandsUp_Scr", 4.0, 0, 1, 1, 1, 0);
	}
	else if(!strcmp(stvar, "drunk", true))
	{
	    LoopingAnim(playerid,"PED","WALK_DRUNK",4.1,1,1,1,1,1);
	}
	else if(!strcmp(stvar, "bomb", true))
	{
	    LoopingAnim(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
	}
	else if(!strcmp(stvar, "laugh", true))
	{
		OnePlayAnim(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0);
	}
	else if(!strcmp(stvar, "lookout", true))
	{
		OnePlayAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);
	}
	else if(!strcmp(stvar, "robman", true))
	{
		LoopingAnim(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0);
	}
	else if(!strcmp(stvar, "lay", true))
	{
		LoopingAnim(playerid,"BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
	}
	else if(!strcmp(stvar, "wave", true))
	{
	    LoopingAnim(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0);
	}
	else if(!strcmp(stvar, "slapass", true))
	{
		OnePlayAnim(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);
	}
	else if(!strcmp(stvar, "deal", true))
	{
	    OnePlayAnim(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0);
	}
	else if(!strcmp(stvar, "crack", true))
	{
	    LoopingAnim(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
	}
	else if(!strcmp(stvar, "groundsit", true))
	{
	    LoopingAnim(playerid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);
	}
	else if(!strcmp(stvar, "chat", true))
	{
	    LoopingAnim(playerid,"PED","IDLE_CHAT",4.0,1,0,0,1,0);
	}
	else if(!strcmp(stvar, "chat2", true))
	{
	    LoopingAnim(playerid,"MISC","Idle_Chat_02",4.0,1,0,0,1,0);
	}
	else if(!strcmp(stvar, "fucku", true))
	{
	    OnePlayAnim(playerid,"PED","fucku",4.0,0,0,0,0,0);
	}
	else if(!strcmp(stvar, "taichi", true))
	{
  		LoopingAnim(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0);
	}
	else if(!strcmp(stvar, "kiss", true))
	{
	    LoopingAnim(playerid, "KISSING", "Playa_Kiss_02", 3.0, 1, 1, 1, 1, 0);
	}
	else if(!strcmp(stvar, "injured", true))
	{
		LoopingAnim(playerid, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0);
	}
	else if(!strcmp(stvar, "sup1", true))
	{
	    OnePlayAnim(playerid,"GANGS","hndshkba",4.0,0,0,0,0,0);
	}
	else if(!strcmp(stvar, "sup2", true))
	{
	    OnePlayAnim(playerid,"GANGS","hndshkda",4.0,0,0,0,0,0);
	}
	else if(!strcmp(stvar, "sup3", true))
	{
	    OnePlayAnim(playerid,"GANGS","hndshkfa_swt",4.0,0,0,0,0,0);
	}
	else if(!strcmp(stvar, "rap1", true))
	{
	    LoopingAnim(playerid,"RAPPING","RAP_A_Loop",4.0,1,0,0,0,0);
	}
	else if(!strcmp(stvar, "rap2", true))
	{
	    LoopingAnim(playerid,"GANGS","prtial_gngtlkD",4.0,1,0,0,0,0);
	}
	else if(!strcmp(stvar, "rap3", true))
	{
	    LoopingAnim(playerid,"RAPPING","RAP_B_Loop",4.0,1,1,1,1,0);
	}
	else if(!strcmp(stvar, "rap4", true))
	{
	    LoopingAnim(playerid,"RAPPING","RAP_C_Loop",4.0,1,1,1,1,0);
	}
	else if(!strcmp(stvar, "push", true))
	{
	    OnePlayAnim(playerid,"GANGS","shake_cara",4.0,0,0,0,0,0);
	}
	else if(!strcmp(stvar, "medic", true))
	{
		OnePlayAnim(playerid,"MEDIC","CPR",4.0,0,0,0,0,0);
	}
	else if(!strcmp(stvar, "koface", true))
	{
	    LoopingAnim(playerid,"PED","KO_shot_face",4.0,0,1,1,1,0);
	}
	else if(!strcmp(stvar, "lifejump", true))
	{
	    LoopingAnim(playerid,"PED","EV_dive",4.0,0,1,1,1,0);
	}
	else if(!strcmp(stvar, "lay2", true))
	{
	    LoopingAnim(playerid,"SUNBATHE","Lay_Bac_in",3.0,0,1,1,1,0);
	}
	else if(!strcmp(stvar, "strip", true))
	{
		LoopingAnim(playerid,"STRIP", "strip_A", 4.1, 1, 1, 1, 1, 1 );
	}
	else if(!strcmp(stvar, "dance1", true))
	{
	    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
	}
	else if(!strcmp(stvar, "dance2", true))
	{
	    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
	}
	else if(!strcmp(stvar, "dance3", true))
	{
	    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
	}
	else if(!strcmp(stvar, "dance4", true))
	{
	    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
	}
	else if(!strcmp(stvar, "bed", true))
	{
	    LoopingAnim(playerid,"INT_HOUSE","BED_Loop_R",4.0,1,0,0,0,0);
	}
	else if(!strcmp(stvar, "lean", true))
	{
	    LoopingAnim(playerid,"GANGS","leanIDLE",4.0,0,1,1,1,0);
	}
	else if(!strcmp(stvar, "kneekick", true))
	{
		OnePlayAnim(playerid,"FIGHT_D","FightD_2",4.0,0,1,1,0,0);
	}
	else if(!strcmp(stvar, "gpunch", true))
	{
		OnePlayAnim(playerid,"FIGHT_B","FightB_G",4.0,0,0,0,0,0);
	}
    else if(!strcmp(stvar, "elbow", true))
	{
		OnePlayAnim(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
	}
    else if(!strcmp(stvar, "airkick", true))
	{
		OnePlayAnim(playerid,"FIGHT_C","FightC_M",4.0,0,1,1,0,0);
	}
    else if(!strcmp(stvar, "carlock", true))
	{
        OnePlayAnim(playerid,"PED","CAR_doorlocked_LHS",4.0,0,0,0,0,0);
	}
    else if(!strcmp(stvar, "lightcig", true))
	{
        OnePlayAnim(playerid,"SMOKING","M_smk_in",3.0,0,0,0,0,0);
	}
    else if(!strcmp(stvar, "tapcig", true))
	{
        OnePlayAnim(playerid,"SMOKING","M_smk_tap",3.0,0,0,0,0,0);
	}
    else if(!strcmp(stvar, "box", true))
	{
        LoopingAnim(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,0);
	}
    else if(!strcmp(stvar, "chant", true))
	{
        LoopingAnim(playerid,"RIOT","RIOT_CHANT",4.0,1,1,1,1,0);
	}
    else if(!strcmp(stvar, "finger", true))
	{
        OnePlayAnim(playerid,"RIOT","RIOT_FUKU",2.0,0,0,0,0,0);
	}
    else if(!strcmp(stvar, "shouting", true))
	{
         LoopingAnim(playerid,"RIOT","RIOT_shout",4.0,1,0,0,0,0);
	}
    else if(!strcmp(stvar, "knife", true))
	{
         OnePlayAnim(playerid,"KNIFE","KILL_Knife_Player",4.0,0,0,0,0,0);
	}
    else if(!strcmp(stvar, "cop", true))
	{
         OnePlayAnim(playerid,"SWORD","sword_block",50.0,0,1,1,1,1);
	}
    else if(!strcmp(stvar, "dealstance", true))
	{
         LoopingAnim(playerid,"DEALER","DEALER_IDLE",4.0,1,0,0,0,0);
	}
    else if(!strcmp(stvar, "robman", true))
	{
         LoopingAnim(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0);
	}
    else if(!strcmp(stvar, "basket", true))
	{
  		 LoopingAnim(playerid,"BSKTBALL","BBALL_idleloop",4.0,1,0,0,0,0);
 	}
    else if(!strcmp(stvar, "basket2", true))
	{
  		 OnePlayAnim(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0);
 	}
    else if(!strcmp(stvar, "basket3", true))
	{
        OnePlayAnim(playerid,"BSKTBALL","BBALL_pickup",4.0,0,0,0,0,0);
 	}
    else if(!strcmp(stvar, "basket4", true))
	{
        LoopingAnim(playerid,"BSKTBALL","BBALL_run",4.1,1,1,1,1,1);
 	}
    else if(!strcmp(stvar, "basket5", true))
	{
        LoopingAnim(playerid,"BSKTBALL","BBALL_def_loop",4.0,1,0,0,0,0);
 	}
    else if(!strcmp(stvar, "basket6", true))
	{
        LoopingAnim(playerid,"BSKTBALL","BBALL_Dnk",4.0,1,0,0,0,0);
 	}
    else if(!strcmp(stvar, "sit2", true))
	{
        LoopingAnim(playerid,"MISC","seat_lr",2.0,1,0,0,0,0);
 	}
    else if(!strcmp(stvar, "sit3", true))
	{
        LoopingAnim(playerid,"MISC","seat_lr",2.0,1,0,0,0,0);
 	}
    else if(!strcmp(stvar, "sit4", true))
	{
        LoopingAnim(playerid,"MISC","seat_talk_02",2.0,1,0,0,0,0);
 	}
	else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresno ime animacije!");
    return 1;
}

CMD:specijalnaoprema(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(!LiderDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo lider drzavne bezbednosti!");

	new string[156], status[20];
	if(PI[playerid][Lider] == 1) status = "Policije";
	else if(PI[playerid][Lider] == 2) status = "SAJ-a";
	if(soprema == 0)
	{
		soprema = 1;
        format(string, sizeof(string), "#OPREMA: {FFFFFF}Lider %s %s je odobrio koristenje specijalne opreme!", status, ReturnPlayerName(playerid));
		OrgPoruka(1, 0x1fdea7FF, string);
	}
	else
	{
		soprema = 0;
		format(string, sizeof(string), "#OPREMA: {FFFFFF}Lider %s %s je onemogucio koristenje specijalne opreme!", status, ReturnPlayerName(playerid));
		OrgPoruka(1, 0x1fdea7FF, string);
	}
	return 1;
}

CMD:cuff(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	static id,
 		str[144];

	if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/cuff [ID]");

	if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan ID!");

	if(IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes staviti igracu lisice dok si u vozilu!");

	if(id == playerid)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete sebi staviti lisice!");

	if(ClanDB(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete staviti lisice clanu drzavne bezbednosti!");
		
	if(IsPlayerInAnyVehicle(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes staviti igracu lisice dok je u vozilu!");

	if(!DaljinaIgraca(5.0, playerid, id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije blizu tebe!");

	if(IgracTazovan[id] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras prvo tazovati igraca!");

	if(StavljeneLisice[id] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igracu su vec stavljene lisice!");

    if(PljackaBanku[id] == 1)
	{
		KillTimer(PBSefTimer[id]); PljackaBanku[id] = 0; PljackaBankuVrijeme[id] = 0; vanrednostanje = 0;
		va_SendClientMessageToAll(-1, "{FF0000}UDARNE VESTI | {FFFFFF}Pljacka Los Santos Banke je upravo sprecena jer je pljackas uhapsen!");
	}
	
    if(PljackaZlataru[id] == 1)
	{
		KillTimer(PBSefTimer[id]); PljackaZlataru[id] = 0; PljackaZlataruVrijeme[id] = 0; vanrednostanje = 0;
		va_SendClientMessageToAll(-1, "{FF0000}UDARNE VESTI | {FFFFFF}Pljacka Los Santos Zlatare je upravo sprecena jer je pljackas uhapsen!");
	}
	
	if(Zauzimanje_ID[id] != -1)
 	{
		new T_ID = Zauzimanje_ID[id], t_string[250];
		GangZoneStopFlashForAll(TeritorijeInfo[T_ID][t_ID]);
	    Zauzimanje_Time[id] = 0;
	    KillTimer(Zauzimanje_Timer[id]);
	    if(TeritorijeInfo[T_ID][t_Org_ID] != -1)
		{
			format(t_string, sizeof(t_string), "#TERITORIJA: {FFFFFF}Clan protivnicka banda/mafija '%s' koji je zauzimao je uhapsen!", OrgInfo[PI[id][Clan]][oIme]);
	    	OrgPoruka(TeritorijeInfo[Zauzimanje_ID[id]][t_Org_ID], 0x1fdea7FF, t_string);
		}
		format(t_string, sizeof(t_string), "#TERITORIJA: {FFFFFF}Clan Vase organizacije %s koji je zauzimao je upravo uhapsen!", ReturnPlayerName(id));
    	OrgPoruka(PI[id][Clan], 0x1fdea7FF, t_string);
	    Zauzimanje_ID[id] = -1;
        if(Zauzimanje_CP[id] != 0)
        {
	    	Zauzimanje_CP[id] = 0;
	    	DisablePlayerCheckpoint(id);
		}
	}
	
	StavljeneLisice[id] = 1;

	va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}%s vam je stavio lisice!", ReturnPlayerName(playerid));
	va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Stavili ste lisice igracu %s!", ReturnPlayerName(id));

    format(str, sizeof(str), "{C2A2DA}* %s vadi lisice i stavlja ih %s-u.", ReturnPlayerName(playerid), ReturnPlayerName(id));
	ProxMessage(playerid, str, 10.0);

	KillTimer(TazerTimer[id]);
	IgracTazovan[id] = 0;
	TogglePlayerControllable(id, 0);
	SetPlayerSpecialAction(id, SPECIAL_ACTION_CUFFED);
	SetPlayerAttachedObject(id, 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
	return 1;
}

CMD:uncuff(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	static id,
 		str[144];

	if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/uncuff [ID]");

	if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan ID!");

	if(!DaljinaIgraca(5.0, playerid, id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije blizu tebe!");

	if(StavljeneLisice[id] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igracu nisu stavljene lisice!");

	StavljeneLisice[id] = 0;

	va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}%s vam je skinuo lisice!", ReturnPlayerName(playerid));
	va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Skinuli ste lisice igracu %s!", ReturnPlayerName(id));

    format(str, sizeof(str), "{C2A2DA}* %s skida lisice igracu %s-u.", ReturnPlayerName(playerid), ReturnPlayerName(id));
	ProxMessage(playerid, str, 10.0);
	
	TogglePlayerControllable(id, 1);
	SetPlayerSpecialAction(id, SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(id, 0);
	return 1;
}

CMD:vuci(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");
		
	new id, string[80];

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/vuci [ID]");

	if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan ID!");

	if(IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes vuci igraca dok si u vozilu!");

	if(id == playerid)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete vuci sami sebe!");

	if(!DaljinaIgraca(5.0, playerid, id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije blizu tebe!");

	if(StavljeneLisice[id] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igracu nisu stavljene lisice!");

	if(PI[id][Zatvor] != 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je u zatvoru!");

	VuciTimer[playerid] = SetTimerEx("Vuci", 1000, true, "ii", playerid, id);
	TogglePlayerControllable(id, 0);
	VuceIgraca[id] = playerid;

	format(string,sizeof(string),"{C2A2DA}* %s je poceo vuci igraca %s-u.", ReturnPlayerName(playerid), ReturnPlayerName(id));
	ProxMessage(playerid, string, 10.0);
	return 1;
}

CMD:pusti(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");

	new id, string[80];

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/pusti [ID]");

	if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan ID!");

	if(IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes pustiti igraca dok si u vozilu!");

	if(id == playerid)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete pustiti sami sebe!");

	if(!DaljinaIgraca(5.0, playerid, id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije blizu tebe!");

	if(VuceIgraca[id] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niko ne vuce tog igraca!");

	KillTimer(VuciTimer[playerid]);
	KillTimer(VuciTimer[id]);
	TogglePlayerControllable(id, 1);
	VuceIgraca[id] = -1;
	VuceIgraca[playerid] = -1;
	
	if(StavljeneLisice[id] == 1) TogglePlayerControllable(id, 0);

	format(string,sizeof(string),"{C2A2DA}* %s je prestao vuci igraca %s-u.", ReturnPlayerName(playerid), ReturnPlayerName(id));
	ProxMessage(playerid, string, 10.0);
	return 1;
}

CMD:tazer(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");

	static str[156];
	if(Tazer[playerid] == 0)
	{
		GivePlayerWeapon(playerid, WEAPON_SILENCED, 300);
		format(str,sizeof(str),"{C2A2DA}* %s uzima tazer.", ReturnPlayerName(playerid));
		ProxMessage(playerid, str, 10.0);
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste tazer, da vratite tazer kucajte /tazer!");
		Tazer[playerid] = 1;
	}
	else
	{
		GivePlayerWeapon(playerid,WEAPON_DEAGLE,150);
		format(str,sizeof(str),"{C2A2DA}* %s vraca tazer.", ReturnPlayerName(playerid));
		ProxMessage(playerid, str, 10.0);
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Vratili ste tazer, da ga ponovo uzmete kucajte /tazer!");
		Tazer[playerid] = 0;
	}
	return 1;
}

CMD:trazeni(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");
		
    new string[150];
    foreach(new i: Player)
	{
		if(IsPlayerConnected(i))
		{
			if(Trazeni_Level[i] > 0)
			{
			    format(string, 150, "{FFFFFF}[ID %d] {FF0000}Ime: {FFFFFF}%s | {FF0000}WL: {FFFFFF}%d", i, ReturnPlayerName(i), Trazeni_Level[i]);
				strcat(string, "\n");
			}
		}
	}
	if(strlen(string) == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nema osumljicenih igraca!");
	Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{FF0000}Lista Osumljicenih", string, "OK", "");
	return 1;
}

CMD:zatvoreni(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    new string[150];
    foreach(new i: Player)
	{
		if(IsPlayerConnected(i))
		{
			if(Trazeni_Level[i] > 0)
			{
			    format(string, 150, "{FFFFFF}[ID %d] {FF0000}Ime: {FFFFFF}%s | {FF0000}Vreme: {FFFFFF}%s", i, ReturnPlayerName(i), KonvertujVreme(PI[i][ZatvorVreme]));
				strcat(string, "\n");
			}
		}
	}
	if(strlen(string) == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nema zatvorenih igraca!");
	Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{FF0000}Lista Zatvorenih", string, "OK", "");
	return 1;
}

CMD:fine(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	
	if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	
    static id, 
		novac, 
		razlog[128], 
		string[300];
	
	if(sscanf(params, "uis[128]", id, novac, razlog)) 
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/fine [ID] [Novac] [Razlog]");
	
	if(id == playerid)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete sami sebe!");
	
	if(novac < 0 || novac > 100000) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ici ispod 0 i iznad 100000!");
	
	if(id == INVALID_PLAYER_ID) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");
	
	if(Ulogovan[id] != 1) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nije ulogovan!");
    
	if(PI[playerid][Admin] < 5 && PI[id][Admin] >= 5) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete koristiti ovu komandu na Direktoru!");
		
	if(PI[playerid][Admin] < 6 && PI[id][Admin] >= 6) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete koristiti ovu komandu na Vlasniku!");
	
	PI[playerid][Novac] -= novac;
	GivePlayerMoney(id, -novac); 
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[id][Novac], PI[id][SQLID]);
	
	va_SendClientMessage(id, 0xFF0000FF, "#FINE: {FFFFFF}Admin %s Vam je oduzeo %d$ novca | Razlog: %s.", ReturnPlayerName(playerid), novac, razlog);
	
	format(string, sizeof(string), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je oduzeo %d$ novca igracu %s | Razlog: %s.", ReturnPlayerName(playerid), novac, ReturnPlayerName(id), razlog);
	AdminMessage(-1, string);
	return 1;
}

CMD:count(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	
	if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
		
	static vreme;
	
	if(sscanf(params, "i", vreme)) 
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/count [sekundi]");
		
	if(BrojanjeAktivirano == 1) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Brojanje je vec zapoceto!");
		
	if(vreme > 10 || vreme <= 0) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Brojanje ne moze biti vise od 10 a manje od 0 sekundi.");
		
	BrojanjeTimer = SetTimer("Brojanje", 1000, true);
	BrojanjeVreme = vreme; 
	BrojanjeAktivirano = 1;
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Brojanje zapoceto!");
	return 1;
}

CMD:pm(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	
	if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	
    static id, 
		poruka[128],
		string[300];
 	
	if(sscanf(params, "us[128]", id, poruka)) 
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/pm [ID/Ime] [Tekst]");
	
	if(id == INVALID_PLAYER_ID) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogrijesili ste ID!");
	
	if(Ulogovan[id] != 1) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije ulogovan!");
	
	if(strlen(poruka) < 1 || strlen(poruka) > 120) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Tekst ne moze imati manje od 2 i vise od 120 znamenki!");
	
	if(id == playerid) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete sami sebi poslati privatnu poruku!");
	
	if(PI[playerid][Zatvor] != 0) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete slati privatnu poruku dok ste u zatvoru!");
	
	if(PI[playerid][Mutiran] != 0) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Mutirani ste pa ne mozete koristiti tu komandu!");
	
	if(PI[playerid][Admin] < 6 && PI[id][Admin] >= 6) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete slati privatnu poruku Vlasniku!");
	
	if(PI[playerid][Admin] == 1 && PI[id][Admin] >= 2) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete slati privatnu poruku vecem Adminu od sebe!");
		
	if(PI[playerid][Admin] == 2 && PI[id][Admin] >= 3) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete slati privatnu poruku vecem Adminu od sebe!");
	
	if(PI[playerid][Admin] == 3 && PI[id][Admin] >= 4) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete slati privatnu poruku vecem Adminu od sebe!");
	
	if(PI[playerid][Admin] == 4 && PI[id][Admin] >= 5) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete slati privatnu poruku vecem Adminu od sebe!");
	
	if(PI[playerid][Admin] == 5 && PI[id][Admin] >= 6) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete slati privatnu poruku vecem Adminu od sebe!");
    
	format(string, sizeof(string),"{ddd74e}[AdminInfo]: {FFFFFF}Admin %s salje PM igracu %s - 'Tekst: %s'.", ReturnPlayerName(playerid), ReturnPlayerName(id), poruka);
	AdminMessage(-1, string);
	va_SendClientMessage(id, 0xFF8282AA, "PM: {FFFFFF}Privatna poruka od Admina %s - 'Tekst: %s'", ReturnPlayerName(playerid), poruka);
	va_SendClientMessage(playerid, 0x33AA33AA, "PM: {FFFFFF}Poslali ste privatnu poruku igracu %s - 'Tekst: %s'", ReturnPlayerName(id), poruka); 
	return 1;
}

CMD:zatvori(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	static id,
		vreme,
		razlog[40],
		string[156];

	if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	if(sscanf(params, "uis[40]", id, vreme, razlog))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/zatvori [ID/Nick] [Vreme (minuta)] [Razlog]");

	if(!IsPlayerConnected(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je offline!");

    if(PI[playerid][Admin] < 1 && PI[id][Admin] >= 2)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes izvrsiti akciju na igraca jaceg ranka!");
		
    if(PI[playerid][Admin] < 2 && PI[id][Admin] >= 3)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes izvrsiti akciju na igraca jaceg ranka!");
		
    if(PI[playerid][Admin] < 3 && PI[id][Admin] >= 4)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes izvrsiti akciju na igraca jaceg ranka!");
		
	if(PI[playerid][Admin] < 5 && PI[id][Admin] >= 5)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes izvrsiti akciju na igraca jaceg ranka!");
		
    if(PI[playerid][Admin] < 5 && PI[id][Admin] >= 6)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes izvrsiti akciju na igraca jaceg ranka!");
		
	ResetPlayerWeapons(id);
	new rand = random(sizeof(RandomZatvor));
	SetPlayerPos(id, RandomZatvor[rand][0], RandomZatvor[rand][1], RandomZatvor[rand][2]);
	SetPlayerInterior(id, 0);
	TogglePlayerControllable(id, 0);
	Ucitavanje_Objekata(id);
	BojaIgraca(id);
	Trazeni_Level[id] = 0;
	SetPlayerVirtualWorld(id, 500);

	PI[id][Zatvor] = 1;
	PI[id][ZatvorVreme] = vreme*60;
	
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Zatvor` = '%d', `ZatvorVreme` = '%d' WHERE `SQLID` = '%d'", PI[id][Zatvor], PI[id][ZatvorVreme], PI[id][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Zatvorili ste %s u zatvor na %d minuta!.", ReturnPlayerName(id), vreme);
	va_SendClientMessage(playerid, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vas je zatvorio na %d minuta | Razlog: {FF0000}%s.", ReturnPlayerName(playerid), vreme, razlog);

	format(string, sizeof(string), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je zatvorio igraca %s | Minuti: %d | Razlog: %s", ReturnPlayerName(playerid), ReturnPlayerName(id), vreme, razlog);
	AdminMessage(-1, string);
	return 1;
}

CMD:oslobodi(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 5)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	static id,
		string[156];

	if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
		
	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/oslobodi [ID/Nick]");

	if(!IsPlayerConnected(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je offline!");

	if(PI[id][Zatvor] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nije zatvoren!");

	PI[id][Zatvor] = 0;
	PI[id][ZatvorVreme] = 0;
	
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Zatvor` = '%d', `ZatvorVreme` = '%d' WHERE `SQLID` = '%d'", PI[id][Zatvor], PI[id][ZatvorVreme], PI[id][SQLID]);
	SetPlayerWorldBounds(id, 20000.0000,-20000.0000,20000.0000,-20000.0000);
	SetPlayerInterior(id, 0); SetPlayerVirtualWorld(id, 0);
	SetPlayerPos(id, 1802.7881, -1577.6869, 13.4119);
	SetPlayerFacingAngle(id, 281.0);
	SetCameraBehindPlayer(id);
	va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vas je oslobodio iz zatvora!", ReturnPlayerName(playerid));
	GameTextForPlayer(id, "~g~Pusteni ste iz zatvora...", 5000, 3);
	SetPlayerSpecialAction(id, SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(id, 0);

	format(string, sizeof(string), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je pustio %s iz zatvora!", ReturnPlayerName(playerid), ReturnPlayerName(id));
	AdminMessage(-1, string);
	return 1;
}

CMD:uhapsi(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");
		
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, 1535.3369,-1674.6057,13.3828) && !IsPlayerInRangeOfPoint(playerid, 3.0, 1247.1675,-1654.1355,13.5729))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste kod mesta za hapsenje!");

	static id,
		vreme;

	if(sscanf(params, "ui", id, vreme))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/uhapsi [ID/Nick] [Vreme (5-45min)]");

	if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan ID!");

	if(ClanDB(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete uhapsiti policajca!");

	if(vreme < 5 || vreme > 45)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete igraca zatvoriti manje od 5 minuta i vise od 45 minuta!");

	if(Trazeni_Level[id] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nema wanted level!");

	if(!DaljinaIgraca(8.0,playerid,id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije blizu tebe!");

	ResetPlayerWeapons(id);
	new rand = random(sizeof(RandomZatvor));
	SetPlayerPos(id, RandomZatvor[rand][0], RandomZatvor[rand][1], RandomZatvor[rand][2]);

	PI[id][Zatvor] = 1;
	PI[id][ZatvorVreme] = vreme*60;
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Zatvor` = '%d', `ZatvorVreme` = '%d' WHERE `SQLID` = '%d'", PI[id][Zatvor], PI[id][ZatvorVreme], PI[id][SQLID]);
	
	TogglePlayerControllable(id, 0);
	Trazeni_Level[id] = 0;
	StavljeneLisice[id] = 0;
	strmid(ZlocinInfo[id][zPrijavio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[id][zPocinio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[id][zZlocin], "Nema", 0, strlen("Nema"), 255);
	SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(id, 0);
	Ucitavanje_Objekata(id);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uhapsili ste %s na %d minuta!", ReturnPlayerName(id), vreme);
	va_SendClientMessageToAll(0xFF0000FF, "[Novo Hapsenje]: {FFFFFF}Policajac %s je uhapsio igraca %s",ReturnPlayerName(playerid),ReturnPlayerName(id));
	return 1;
}

CMD:pojas(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	static string[156];

	if(!IsPlayerInAnyVehicle(playerid))
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u vozilu!");

	if(VoziloJeBrod(GetVehicleModel(GetPlayerVehicleID(playerid))))
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete koristiti ovo, na brodu!");

	if(VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))) )
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete koristiti ovo, na bicikli!");

	if(VoziloJeMotor(GetVehicleModel(GetPlayerVehicleID(playerid))))
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete koristiti ovo, na motoru!");

	if(Pojas[playerid] == 0)
    {
		format(string, sizeof(string), "{C2A2DA}* %s vezuje pojas.", ReturnPlayerName(playerid));
		ProxMessage(playerid, string, 30.0);
		Pojas[playerid] = 1;
	}
	else
    {
	    format(string, sizeof(string), "{C2A2DA}* %s skida pojas.", ReturnPlayerName(playerid));
		ProxMessage(playerid, string, 30.0);
        Pojas[playerid] = 0;
	}
	return 1;
}

CMD:proveripojas(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");
		
	static id;

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/proveripojas [ID/Ime]");

	if(!IsPlayerConnected(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je offline!");
	
	if(!DaljinaIgraca(3.0,playerid,id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije pored vas!");
	
	if(!IsPlayerInAnyVehicle(id))
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nije u vozilu!");

	if(Pojas[id] == 1) return va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Igrac je vezao pojas.");
	else return va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Igrac nije vezao pojas.");
}

CMD:alkotest(playerid, const params[])
{
   	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");
		
    static id;

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/alkotest [ID/Ime]");

    if(!IsPlayerConnected(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je offline!");
		
    if(id == playerid)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete sami sebi dati test alkoholiziranost!");
	
	if(!DaljinaIgraca(5.0,playerid,id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste blizu igraca kojem zelite dati alkotest!");

	new alkohol = GetPlayerDrunkLevel(id),
		Float:promila = alkohol / 1000.0;

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}%s je ispuhao %.2f promila.", ReturnPlayerName(id), promila);

	va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Ispuhali ste %.2f promila.", promila);

	new string[156];
	format(string, sizeof(string), "{C2A2DA}* Policajac %s daje test alkoholizma igracu %s.", ReturnPlayerName(playerid), ReturnPlayerName(id));
	ProxMessage(playerid, string, 20.0);
	return 1;
}

CMD:kazna(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");
		
	new id, cena, razlog[32];

	if(sscanf(params, "uis[32]", id, cena, razlog))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/kazna [ID] [Iznos (1-1500)] [Razlog]");

	if(!IsPlayerConnected(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je offline!");

	if(id == playerid)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete sami sebi napisati kaznu!");

	if(cena < 1 || cena > 1500)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Cena ne moze biti manja od 1$,ni vec od 1500$!");

	if(strlen(razlog) > 32)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Napisali ste prevelik razlog!");

	if(!DaljinaIgraca(5.0,playerid,id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije blizu tebe!");

	KaznuNapisao[id] = playerid;
	CenaKazne[id] = cena;

	va_SendClientMessage(id, 0xFF0000FF, "#Kazna: {FFFFFF}Policajac %s vam je napisao kaznu | Iznos Kazne: {FF0000}%d {FFFFFF}| Prekrsaj: {FF0000}%s.", ReturnPlayerName(playerid), cena, razlog);
	va_SendClientMessage(id, -1, "Da prihvatite kaznu kucajte /prihvati kaznu.");
	va_SendClientMessage(playerid, 0xFF0000FF, "#Kazna: {FFFFFF}Napisali ste kaznu igracu %s u iznosu od {FF0000}%d$! {FFFFFF}| Prekrsaj: {FF0000}%s.", ReturnPlayerName(id), cena, razlog);
	return 1;
}

CMD:najava(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(!LiderDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo lideri drzavne bezbednosti!");

	if(isnull(params))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/najava [tekst]");

	va_SendClientMessageToAll(-1, "{0049FF}|-----------------------------[ {FFFFFF}Najava iz Uprave {0049FF}]-----------------------------|");
	va_SendClientMessageToAll(-1, "Lider %s: {0049FF}%s", ReturnPlayerName(playerid), params);
	va_SendClientMessageToAll(-1, "{0049FF}|--------------------------------------------------------------------------------|");
	return 1;
}

CMD:su(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");
		
	static id,
		zlocin[64],
		wl;

	if(sscanf(params, "us[64]i", id, zlocin, wl))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/su [ID] [Opis zlocina] [WL]");

	if(!IsPlayerConnected(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je offline!");

	if(id == playerid)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete sebi dati wanted level!");

	if(ClanDB(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes dati wanted level policajcu!");
		
    if(wl > 6 || wl < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kolicina Wanteda ne moze biti veca od 6 niti manja od 1!");

	Trazeni_Level[id] = wl;
	PostaviWanted(id, zlocin, ReturnPlayerName(playerid));
	return 1;
}

CMD:pretresi(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");

	if(IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemozes koristiti tu komandu kad si u vozilu!");

	static id,
		string[156];

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/pretresi [ID/Ime]");

	if(!IsPlayerConnected(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je offline!");

	if(!DaljinaIgraca(5.0, playerid, id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije blizu tebe!");

	va_SendClientMessage(playerid, 0x1b71bcFF, "|----------------[ {FFFFFF}Stvari %s {1b71bc}]----------------|", ReturnPlayerName(id));
	va_SendClientMessage(playerid, -1, "- Droga: {1b71bc}%s", PI[id][Droga] != 0 ? "Poseduje" : "Ne Poseduje");
	va_SendClientMessage(playerid, -1, "- Materijali: {1b71bc}%s", PI[id][Mats] != 0 ? "Poseduje" : "Ne Poseduje");
	va_SendClientMessage(playerid, -1, "- Oruzije: {1b71bc}%s", GetPlayerWeapon(id) != WEAPON_FIST ? "Poseduje" : "Ne Poseduje");

	format(string, sizeof(string), "{C2A2DA}* Policajac %s pretresa %s.", ReturnPlayerName(playerid), ReturnPlayerName(id));
	ProxMessage(playerid, string, 20.0);
	return 1;
}

CMD:aocistidosije(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 2)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	static id,
		str[156];

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/aocistidosije [ID/Ime]");

    if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan ID!");

	if(Trazeni_Level[id] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nema wanted level!");

	Trazeni_Level[id] = 0;
	BojaIgraca(id);

	strmid(ZlocinInfo[id][zPrijavio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[id][zPocinio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[id][zZlocin], "Nema", 0, strlen("Nema"), 255);

	va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}%s vam je ocistio dosije!", ReturnPlayerName(playerid));
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ocistili ste dosije igracu %s!", ReturnPlayerName(id));
	
	format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je ocistio dosije igracu %s!", ReturnPlayerName(playerid), ReturnPlayerName(id));
	AdminMessage(-1, str);
	return 1;
}

CMD:ocistidosije(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(!LiderDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo lider drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");
		
    if(!IsPlayerInRangeOfPoint(playerid, 2.0, -4.2782,1705.8209,-24.6057) && !IsPlayerInRangeOfPoint(playerid, 2.0, 978.5750,2591.0854,-68.7635))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u prostoriji za ciscenje dosije-a!");

	static id;
	
	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/ocistidosije [ID/Ime]");
		
    if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan ID!");
		
	if(Trazeni_Level[id] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nema wanted level!");
	    
    if(id == playerid)
    	return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemozes sam sebi ocistiti wanted!");

	Trazeni_Level[id] = 0;
	BojaIgraca(id);

	strmid(ZlocinInfo[id][zPrijavio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[id][zPocinio], "Nema", 0, strlen("Nema"), 255);
	strmid(ZlocinInfo[id][zZlocin], "Nema", 0, strlen("Nema"), 255);

	va_SendClientMessage(id, 0x1b71bcFF, "#Dosije: {FFFFFF}Policajac %s vam je ocistio dosije!", ReturnPlayerName(playerid));
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Dosije: {FFFFFF}Ocistili ste dosije igracu %s!", ReturnPlayerName(id));
	return 1;
}

CMD:proveridosije(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");
		
    new veh = GetPlayerVehicleID(playerid);

	if(!PolicijaVozila(veh) && !SAJVozila(veh))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u policijskom vozilu!");

	static id;

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/proveridosije [ID/Nick]");

	if(!IsPlayerConnected(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je offline!");

	va_SendClientMessage(playerid, 0xFF0000FF, "|----------------------DOSIJE-----------------------|");
	va_SendClientMessage(playerid, 0xFF0000FF, "Ime: {FFFFFF}%s", ZlocinInfo[id][zPocinio]);
	va_SendClientMessage(playerid, 0xFF0000FF, "Zlocin: {FFFFFF}%s", ZlocinInfo[id][zZlocin]);
	va_SendClientMessage(playerid, 0xFF0000FF, "Prijavio: {FFFFFF}%s", ZlocinInfo[id][zPrijavio]);
	va_SendClientMessage(playerid, 0xFF0000FF, "|------------------------------------------------------|");
	return 1;
}

CMD:lociraj(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");
		
	static id,
		Float:Poz[3];

	if(sscanf(params, "i", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/lociraj [ID/Ime]");

	if(Trazeni_Level[id] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nema Wanted Level!");

	GetPlayerPos(id, Poz[0], Poz[1], Poz[2]);
	SetPlayerCheckpoint(playerid, Poz[0], Poz[1], Poz[2], 5.0);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Igrac %s je oznacen crveno na mapi (/ponistilociranje)!", ReturnPlayerName(id));
	Lociranje[playerid] = 1;
	return 1;
}

CMD:ponistilociranje(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");
		
	if(Lociranje[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nikog ne locirate!");

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prekinuli ste lociranje!");
	Lociranje[playerid] = 0;
	DisablePlayerCheckpoint(playerid);
	return 1;
}

CMD:apu(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 3)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");

    static id,
		sediste;

	if(sscanf(params, "ui", id, sediste))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/apu [ID] [Sediste 1,2,3]");

	if(!IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u vozilu!");

	if(!IsPlayerConnected(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je offline!");

	if(!DaljinaIgraca(6.0,playerid,id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije blizu tebe!");

	if(IsPlayerInAnyVehicle(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je vec u nekom vozilu!");

	if(sediste > 3 || sediste < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Broj sedista moze biti samo 1,2,3!");

	PutPlayerInVehicle(id, GetPlayerVehicleID(playerid), sediste);

	new string[128];
	format(string, sizeof(string), "{C2A2DA}* %s ubacuje %s u auto.", ReturnPlayerName(playerid), ReturnPlayerName(id));
	ProxMessage(playerid, string, 20.0);

	va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}%s vas je ubacio u auto!", ReturnPlayerName(playerid));
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ubacili ste %s u auto!", ReturnPlayerName(id));
	return 1;
}

CMD:pu(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");
		
    static id,
		sediste;

	if(sscanf(params, "ui", id, sediste))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/pu [ID] [Sediste 1,2,3]");

	if(!IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u vozilu!");

	if(!IsPlayerConnected(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je offline!");

	if(!DaljinaIgraca(6.0,playerid,id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije blizu tebe!");

	if(IsPlayerInAnyVehicle(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je vec u nekom vozilu!");

	if(sediste > 3 || sediste < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Broj sedista moze biti samo 1,2,3!");

	PutPlayerInVehicle(id, GetPlayerVehicleID(playerid), sediste);

	new string[128];
	format(string, sizeof(string), "{C2A2DA}* %s ubacuje %s u auto.", ReturnPlayerName(playerid), ReturnPlayerName(id));
	ProxMessage(playerid, string, 20.0);

	va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}%s vas je ubacio u auto!", ReturnPlayerName(playerid));
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ubacili ste %s u auto!", ReturnPlayerName(id));
	return 1;
}

CMD:pojacanje(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");
		
	new string[256];
	format(string, sizeof(string), "#Pojacanje: {FFFFFF}Igracu %s je potrebno pojacanje, kucaj /prihvati pojacanje da vidis njegovu lokaciju.", ReturnPlayerName(playerid));
	PDMessage(0x1b71bcFF, string);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Pozvali ste pojacanje!");
	PozvaoPojacanje = playerid;
	SetTimerEx("UkloniPoj", 100000, false, "d", playerid);
	return 1;
}

CMD:oduzmi(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(!ClanDB(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi drzavne bezbednosti!");

	if(PolicijaDuznost[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost pa nemozete koristi tu komandu!");

	if(IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemozes koristiti tu komandu kad si u vozilu!");
		
	if(PI[playerid][Zatvor] != 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete oduzimati stvari u zatvoru!");

	static id,
		stvar[32];

	if(sscanf(params, "us[32]", id, stvar))
	{
		va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/oduzmi [ID/Ime] [Ime stvari]");
		va_SendClientMessage(playerid, 0x1b71bcFF, "> {FFFFFF}vozacka dozvola | motor dozvola | kamion/bus dozvola | avion dozvola");
		va_SendClientMessage(playerid, 0x1b71bcFF, "> {FFFFFF}brod dozvola | oruzije dozvola | droga | materijali | oruzije");
		return 1;
	}

	if(!IsPlayerConnected(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je offline!");

	if(!DaljinaIgraca(5.0, playerid, id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije blizu tebe!");

	if(id == playerid)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete sami sebi oduzimati stvari!");
	
	if(!strcmp(stvar, "vozacka dozvola"))
	{
		if(PI[id][ADozvola] == 0)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nema vozacku dozvolu!");

		PI[id][ADozvola] = 0;

		mysql_tqueryEx(SQL, "UPDATE `users` SET `ADozvola` = '%d' WHERE `SQLID` = '%d'", PI[id][ADozvola], PI[id][SQLID]);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Oduzeli ste vozacku dozvolu igracu %s.", ReturnPlayerName(id));
		va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Policajac %s vam je oduzeo vozacku dozvolu.", ReturnPlayerName(playerid));
	}
	else if(!strcmp(stvar, "motor dozvola"))
	{
		if(PI[id][MotorDozvola] == 0)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nema dozvolu za motor!");

		PI[id][MotorDozvola] = 0;

		mysql_tqueryEx(SQL, "UPDATE `users` SET `MotorDozvola` = '%d' WHERE `SQLID` = '%d'", PI[id][MotorDozvola], PI[id][SQLID]);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Oduzeli ste dozvolu za motor igracu %s.", ReturnPlayerName(id));
		va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Policajac %s vam je oduzeo dozvolu za motor.", ReturnPlayerName(playerid));
	}
	else if(!strcmp(stvar, "kamion/bus dozvola"))
	{
		if(PI[id][KamionDozvola] == 0)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nema dozvolu za kamion!");

		PI[id][KamionDozvola] = 0;

		mysql_tqueryEx(SQL, "UPDATE `users` SET `KamionDozvola` = '%d' WHERE `SQLID` = '%d'", PI[id][KamionDozvola], PI[id][SQLID]);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Oduzeli ste dozvolu za kamion/bus igracu %s.", ReturnPlayerName(id));
		va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Policajac %s vam je oduzeo dozvolu za kamion/bus.", ReturnPlayerName(playerid));
	}
	else if(!strcmp(stvar, "avion dozvola"))
	{
		if(PI[id][AvionDozvola] == 0)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nema dozvolu za avion!");

		PI[id][AvionDozvola] = 0;

		mysql_tqueryEx(SQL, "UPDATE `users` SET `AvionDozvola` = '%d' WHERE `SQLID` = '%d'", PI[id][AvionDozvola], PI[id][SQLID]);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Oduzeli ste dozvolu za avion igracu %s.", ReturnPlayerName(id));
		va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Policajac %s vam je oduzeo dozvolu za avion.", ReturnPlayerName(playerid));
	}
	else if(!strcmp(stvar, "brod dozvola"))
	{
		if(PI[id][BrodDozvola] == 0)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nema dozvolu za brod!");

		PI[id][BrodDozvola] = 0;

		mysql_tqueryEx(SQL, "UPDATE `users` SET `BrodDozvola` = '%d' WHERE `SQLID` = '%d'", PI[id][BrodDozvola], PI[id][SQLID]);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Oduzeli ste dozvolu za brod igracu %s.", ReturnPlayerName(id));
		va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Policajac %s vam je oduzeo dozvolu za brod.", ReturnPlayerName(playerid));
	}
	else if(!strcmp(stvar, "oruzije dozvola"))
	{
		if(PI[id][OruzijeDozvola] == 0)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nema dozvolu za oruzije!");

		PI[id][OruzijeDozvola] = 0;

		mysql_tqueryEx(SQL, "UPDATE `users` SET `OruzijeDozvola` = '%d' WHERE `SQLID` = '%d'", PI[id][OruzijeDozvola], PI[id][SQLID]);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Oduzeli ste dozvolu za oruzije igracu %s.", ReturnPlayerName(id));
		va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Policajac %s vam je oduzeo dozvolu za oruzije.", ReturnPlayerName(playerid));
	}
	else if(!strcmp(stvar, "droga"))
	{
		if(PI[id][Droga] == 0)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nema droge!");

		PI[id][Droga] = 0;

		mysql_tqueryEx(SQL, "UPDATE `users` SET `Droga` = '%d' WHERE `SQLID` = '%d'", PI[id][Droga], PI[id][SQLID]);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Oduzeli ste drogu igracu %s.", ReturnPlayerName(id));
		va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Policajac %s vam je oduzeo drogu.", ReturnPlayerName(playerid));
	}
	else if(!strcmp(stvar, "materijali"))
	{
		if(PI[id][Mats] == 0)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nema materijale!");

		PI[id][Mats] = 0;

		mysql_tqueryEx(SQL, "UPDATE `users` SET `Mats` = '%d' WHERE `SQLID` = '%d'", PI[id][Mats], PI[id][SQLID]);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Oduzeli ste materijale igracu %s.", ReturnPlayerName(id));
		va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Policajac %s vam je oduzeo materijale.", ReturnPlayerName(playerid));
	}
	else if(!strcmp(stvar, "oruzije"))
	{
		ResetPlayerWeapons(id);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Oduzeli ste oruzije igracu %s.", ReturnPlayerName(id));
		va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Policajac %s vam je oduzeo oruzije.", ReturnPlayerName(playerid));
	}
	else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nepoznato ime!");
	return 1;
}

CMD:sl(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	static id,
		string[156];

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/sl [ID]");

	if(!IsPlayerConnected(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je offline!");

	static Float:Poz[3];
	GetPlayerPos(id, Poz[0], Poz[1], Poz[2]);

	if(!IsPlayerInRangeOfPoint(playerid, 3.0, Poz[0], Poz[1], Poz[2]))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Predaleko ste!");
	
	va_SendClientMessage(id,0x1b71bcFF,"|---------------------- [ {FFFFFF}Dozvole od %s {1b71bc}]----------------------|", ReturnPlayerName(playerid));
	va_SendClientMessage(id,-1,"- Dozvola za voznju: {1b71bc}%s", PI[playerid][ADozvola] != 0 ? "Poseduje" : "Ne Poseduje");
	va_SendClientMessage(id,-1,"- Dozvola za plovidbu: {1b71bc}%s", PI[playerid][BrodDozvola] != 0 ? "Poseduje" : "Ne Poseduje");
	va_SendClientMessage(id,-1,"- Dozvola za letenje: {1b71bc}%s", PI[playerid][AvionDozvola] != 0 ? "Poseduje" : "Ne Poseduje");
	va_SendClientMessage(id,-1,"- Dozvola za motor: {1b71bc}%s", PI[playerid][MotorDozvola] != 0 ? "Poseduje" : "Ne Poseduje");
	va_SendClientMessage(id,-1,"- Dozvola za kamion/bus: {1b71bc}%s", PI[playerid][KamionDozvola] != 0 ? "Poseduje" : "Ne Poseduje");
	va_SendClientMessage(id,-1,"- Dozvola za oruzije: {1b71bc}%s", PI[playerid][OruzijeDozvola] != 0 ? "Poseduje" : "Ne Poseduje");
	va_SendClientMessage(id,0x1b71bcFF,"|------------------------------------------------------------------------------|");

	format(string,sizeof(string), "{C2A2DA}* %s vadi dokumenta i pokazuje ih %s.", ReturnPlayerName(playerid), ReturnPlayerName(id));
	ProxMessage(playerid, string, 20.0);
	return 1;
}

CMD:kreirajport(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
	static idport,
		imeport[35],
	    vrsta,
	    Float:Pos[3];
	    
    if(sscanf(params, "s[35]i", imeport, vrsta))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/kreirajport [Naziv] [Vrsta (1. Lokacije | 2. Organizacije | 3. Poslovi)]");
		
		
    for(new id = 1; id < MAX_PORT; id++)
	{
	    if(PortInfo[id][SQLID] < 1)
        {
            idport = id; break;
        }
	}
    if(idport == 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum portova je dostignut!");
    
    GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
    
    strreplace(imeport, '_', ' ');
    
    PortInfo[idport][SQLID] = idport;
    PortInfo[idport][PortIme] = imeport;
    PortInfo[idport][PozicijaX] = Pos[0];
    PortInfo[idport][PozicijaY] = Pos[1];
    PortInfo[idport][PozicijaZ] = Pos[2];
    PortInfo[idport][PortVrsta] = vrsta;
    
    mysql_tqueryEx(SQL, "INSERT INTO `ports` (SQLID, PortIme, PortKreiran, PozicijaX, PozicijaY, PozicijaZ, PortVrsta) \
		VALUES('%d', '%s', '1', '%f', '%f', '%f', '%d')", idport, PortInfo[idport][PortIme], Pos[0], Pos[1], Pos[2], vrsta);
		
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Lokacija %s uspesno kreirana (ID Lokacije: %d)!", imeport, idport);
	return 1;
}

CMD:kreirajulicu(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	static idulice,
		imeulice[35],
        Float:Pos[3],
		str[256];

	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	
    if(sscanf(params, "s[35]", imeulice))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/kreirajulicu [Ime]");
		
    for(new id = 1; id < MAX_ULICA; id++)
	{
	    if(UliceInfo[id][SQLID] < 1)
        {
            idulice = id; break;
        }
	}
    if(idulice == 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum ulica je dostignut!");
    
    strreplace(imeulice, '_', ' ');
    
    UliceInfo[idulice][SQLID] = idulice;
    UliceInfo[idulice][uPostavljena] = 1;
    UliceInfo[idulice][uIme] = imeulice;
	UliceInfo[idulice][uX] = Pos[0];
	UliceInfo[idulice][uY] = Pos[1];
	UliceInfo[idulice][uZ] = Pos[2];
	
	mysql_tqueryEx(SQL, "INSERT INTO `streets` (SQLID, Postavljena, Ime, X, Y, Z) \
		VALUES('%d', '%d', '%s', '%f', '%f', '%f')", idulice, UliceInfo[idulice][uPostavljena], UliceInfo[idulice][uIme], Pos[0], Pos[1], Pos[2]);

	if(UliceInfo[idulice][uPostavljena] == 1)
	{
 		format(str, sizeof(str), "{FF0000}[ULICA]\n\n{FFFFFF}Adresa: {FF0000}%d\n{FFFFFF}Naziv: {FF0000}%s", UliceInfo[idulice][SQLID], UliceInfo[idulice][uIme]);
   		Ulica3D[idulice] = CreateDynamic3DTextLabel(str, -1, UliceInfo[idulice][uX], UliceInfo[idulice][uY], UliceInfo[idulice][uZ], 10.0,_,_,_, 0, 0,_,_);
		UlicaPickup[idulice] = CreateDynamicPickup(1314, 1, UliceInfo[idulice][uX], UliceInfo[idulice][uY], UliceInfo[idulice][uZ], 0);
	}
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ulica uspesno kreirana (ID Ulice: %d)!", idulice);
	return 1;
}

CMD:obrisiulicu(playerid, const params[])
{
    static id;

    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 6)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	if(sscanf(params, "i", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/obrisiulicu [ID]");

	mysql_tqueryEx(SQL, "DELETE FROM `streets` WHERE `SQLID` = '%d'", id);
	DestroyDynamic3DTextLabel(Ulica3D[id]);
	DestroyDynamicPickup(UlicaPickup[id]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Obrisali ste ulicu ID: %d!", id);
    return 1;
}

CMD:portime(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
	new DialogStrgEx[5000];
    strdel(DialogStrgEx, 0, sizeof(DialogStrgEx));

	for(new i = 0; i < MAX_PORT; i++)
	{
		if(PortInfo[i][PortKreiran] == 1)
		{
 			format(DialogStrgEx, sizeof(DialogStrgEx), "%s{1b71bc}> {FFFFFF}%s\n", DialogStrgEx, PortInfo[i][PortIme]);
		}
	}
	Dialog_Show(playerid, dialog_portime, DIALOG_STYLE_LIST, "{1b71bc}Izaberi port", DialogStrgEx, "Odaberi", "Izlaz");
	return 1;
}

CMD:portpoz(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	new DialogStrgEx[5000];
    strdel(DialogStrgEx, 0, sizeof(DialogStrgEx));

	for(new i = 0; i < MAX_PORT; i++)
	{
		if(PortInfo[i][PortKreiran] == 1)
		{
 			format(DialogStrgEx, sizeof(DialogStrgEx), "%s{1b71bc}> {FFFFFF}%s\n", DialogStrgEx, PortInfo[i][PortIme]);
		}
	}
	Dialog_Show(playerid, dialog_portpoz, DIALOG_STYLE_LIST, "{1b71bc}Izaberi port", DialogStrgEx, "Odaberi", "Izlaz");
	return 1;
}

CMD:gps(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(!IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u vozilu!");
		
	Dialog_Show(playerid, dialog_gps, DIALOG_STYLE_LIST, "{1b71bc}GPS", "{1b71bc}> {FFFFFF}Spawn\n\
                                                          {1b71bc}> {FFFFFF}Banka\n\
                                                          {1b71bc}> {FFFFFF}Opstina\n\
                                                          {1b71bc}> {FFFFFF}Zlatara\n\
                                                          {1b71bc}> {FFFFFF}Auto Skola\n\
														  {1b71bc}> {FFFFFF}Market 24/7\n\
														  {1b71bc}> {FFFFFF}Burg\n\
														  {1b71bc}> {FFFFFF}Tuning Garaza LS 1\n\
														  {1b71bc}> {FFFFFF}Tuning Garaza LS 2\n\
														  {1b71bc}> {FFFFFF}Tuning Garaza SF\n\
														  {1b71bc}> {FFFFFF}Tuning Garaza LV\n\
														  {1b71bc}> {FFFFFF}Bugatti Auto Salon\n\
														  {1b71bc}> {FFFFFF}Policijska Stanica\n\
														  {1b71bc}> {FFFFFF}SAJ\n\
														  {1b71bc}> {FFFFFF}Pijaca\n\
														  {1b71bc}> {FFFFFF}Lutrija\n\
														  {1b71bc}> {FFFFFF}Bolnica", "Odaberi", "Izlaz");
	return 1;
}

CMD:gpsoff(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(Lociranje[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vas GPS uredjaj nije upaljen!");

    Lociranje[playerid] = 0;
    DisablePlayerCheckpoint(playerid);

    va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}GPS iskljucen.");
	return 1;
}

CMD:port(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Vip] < 3 && PI[playerid][Admin] < 1 && PI[playerid][MTeam] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	    
    if(IgracTazovan[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete se portati dok ste Tazovani!");

	if(StavljeneLisice[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete se portati dok imate Lisice!");

	if(Zavezan[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete se portati dok ste Zavezani!");

	Dialog_Show(playerid, dialog_port, DIALOG_STYLE_LIST, "{1b71bc}Port", "{1b71bc}> {FFFFFF}Lokacije\n\
                                                                           {1b71bc}> {FFFFFF}Organizacije\n\
                                                                           {1b71bc}> {FFFFFF}Poslovi", "Odaberi", "Izlaz");
	return 1;
}

CMD:aprodajstan(playerid, params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
	static id;

	if(sscanf(params, "i", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/aprodajstan [ID]");
	
	if(StanInfo[id][SQLID] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan ID kuce!");

	if(StanInfo[id][sProveraVlasnika] == 0)
		 return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj stan nema vlasnika pa ne mozete ga prodati!");

	StanInfo[id][sProveraVlasnika] = 0;
	StanInfo[id][sOruzije] = -1;
	StanInfo[id][sNovac] = 0;
	StanInfo[id][sZatvoreno] = 1;
	StanInfo[id][sMunicija] = 0;
	StanLP(id);
	strmid(StanInfo[id][sVlasnik], "Niko", 0, strlen("Niko"), 255);

    mysql_tqueryEx(SQL, "UPDATE `apartments` SET `ProveraVlasnika` = '%d', `Vlasnik` = 'Niko', `Novac` = '%d', `Zatvoreno` = '%d', `Oruzije` = '%d', `Municija` = '%d' WHERE `SQLID` = '%d'", StanInfo[id][sProveraVlasnika], StanInfo[id][sNovac], StanInfo[id][sZatvoreno],
		StanInfo[id][sOruzije], StanInfo[id][sMunicija], StanInfo[id][SQLID]);
		
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prodali ste stan ID: %d!", id);
	return 1;
}

CMD:estan(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
	static sta[20],
		ide;

	if(sscanf(params, "s[20]i",sta,ide))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/estan [level,cena,novac] [kol]");

	for(new i; i < MAX_STANOVA; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, StanInfo[i][sUlazX], StanInfo[i][sUlazY], StanInfo[i][sUlazZ]))
		{
			if(!strcmp(sta, "level", true))
			{
		        StanInfo[i][sLevel] = ide;
				StanLP(i);

				mysql_tqueryEx(SQL, "UPDATE `apartments` SET `Level` = '%d' WHERE `SQLID` = '%d'", ide, StanInfo[i][SQLID]);

				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Izmenili ste level u stanu (ID: %d) u %d!", i, ide);
			}
			else if(!strcmp(sta, "cena", true))
			{
		        StanInfo[i][sCena] = ide;
				StanLP(i);

				mysql_tqueryEx(SQL, "UPDATE `apartments` SET `Cena` = '%d' WHERE `SQLID` = '%d'", ide, StanInfo[i][SQLID]);

				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Izmenili ste cenu u stanu (ID: %d) u %d!", i, ide);
			}
			else if(!strcmp(sta, "novac", true))
			{
		        StanInfo[i][sNovac] = ide;
				StanLP(i);

				mysql_tqueryEx(SQL, "UPDATE `apartments` SET `Novac` = '%d' WHERE `SQLID` = '%d'", ide, StanInfo[i][SQLID]);
				
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Izmenili ste novac u stanu (ID: %d) u %d!", i, ide);
			}
		}
	}
	return 1;
}

CMD:kupistan(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    for(new i; i < sizeof(StanInfo); i++)
	{
    	if(IsPlayerInRangeOfPoint(playerid, 3.0, StanInfo[i][sUlazX], StanInfo[i][sUlazY], StanInfo[i][sUlazZ]))
    	{
    		if(!strcmp(StanInfo[i][sVlasnik], "Niko", true) && StanInfo[i][sProveraVlasnika] == 0)
    		{
		        if(PI[playerid][Stan] != -1)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imas stan!");

				if(GetPlayerScore(playerid) < StanInfo[i][sLevel])
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljan level za kupovinu stana!");

				if(PI[playerid][Novac] < StanInfo[i][sCena])
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca za kupovinu stana!");

				strmid(StanInfo[i][sVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);

				StanInfo[i][sProveraVlasnika] = 1;
				PI[playerid][Stan] = i;
		        StanInfo[i][sZatvoreno] = 1;
                PI[playerid][Novac] -= StanInfo[i][sCena];
				GivePlayerMoney(playerid, -StanInfo[i][sCena]);
				StanLP(i); 
				CheckQuestDone(playerid, 14);

                mysql_tqueryEx(SQL, "UPDATE `apartments` SET `ProveraVlasnika` = '1', `Vlasnik` = '%s' WHERE `SQLID` = '%d'", StanInfo[i][sVlasnik], StanInfo[i][SQLID]);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Stan` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], i, PI[playerid][SQLID]);
				
		        va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo kupili ste stan, Za komande stana kucajte /stan!");
		        return 1;
			}
			else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj stan se ne prodaje!");
		}
	}
    return 1;
}

CMD:kupikucu(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    for(new i; i < sizeof(KucaInfo); i++)
	{
    	if(IsPlayerInRangeOfPoint(playerid, 3.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]))
    	{
    		if(!strcmp(KucaInfo[i][kVlasnik], "Niko", true) && KucaInfo[i][kProveraVlasnika] == 0)
    		{
		        if(PI[playerid][Kuca] != -1)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imas kucu!");

				if(GetPlayerScore(playerid) < KucaInfo[i][kLevel])
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljan level za kupovinu kuce!");

				if(PI[playerid][Novac] < KucaInfo[i][kCena])
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca za kupovinu kuce!");

				if(PI[playerid][Rent] != -1)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Rentate kucu prvo unrentajte kucu da bi kupili ovu!");

				strmid(KucaInfo[i][kVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
		        KucaInfo[i][kProveraVlasnika] = 1;
				SetPlayerInterior(playerid, KucaInfo[i][kInt]);
				PI[playerid][Kuca] = i;
		        SetPlayerVirtualWorld(playerid, KucaInfo[i][kVW]);
				SetPlayerPos(playerid, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]);
		        KucaInfo[i][kZatvoreno] = 1;
		        PI[playerid][Novac] -= KucaInfo[i][kCena];
				GivePlayerMoney(playerid, -KucaInfo[i][kCena]);
				KuceLP(i);
				CheckQuestDone(playerid, 13);
				
				mysql_tqueryEx(SQL, "UPDATE `houses` SET `ProveraVlasnika` = '1', `Vlasnik` = '%s' WHERE `SQLID` = '%d'", KucaInfo[i][kVlasnik], KucaInfo[i][SQLID]);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Kuca` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], i, PI[playerid][SQLID]);

				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo kupili ste kucu, Za komande kuce kucajte /kuca!");
		        return 1;
			}
			else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ta kuca se ne prodaje!");
		}
	}
    return 1;
}

CMD:promenispawn(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zatvoreni ne mozete koristiti ovu komandu!");

	Dialog_Show(playerid, dialog_pspawn, DIALOG_STYLE_LIST, "{1b71bc}Spawn", "{1b71bc}> {FFFFFF}Spawn\n\
																			  {1b71bc}> {FFFFFF}Kuca\n\
																			  {1b71bc}> {FFFFFF}Rent Kuca\n\
																			  {1b71bc}> {FFFFFF}Stan\n\
																			  {1b71bc}> {FFFFFF}Organizacija", "Potvrdi", "Izadji");
	return 1;
}

CMD:zapalicigaru(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Cigare] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas cigara!");

	if(PI[playerid][Upaljac] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas upaljac!");

	if(PI[playerid][Cigare] > 0) PI[playerid][Cigare]--;
	PI[playerid][Upaljac]--;
	if(PI[playerid][Upaljac] == 0) va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Istrosili ste upaljac | Kupite novi.");

	mysql_tqueryEx(SQL, "UPDATE `users` SET `Cigare` = '%d', `Upaljac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Cigare], PI[playerid][Upaljac], PI[playerid][SQLID]);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);

	new str[128];
	format(str, sizeof(str), "{C2A2DA}* %s vadi upaljac iz dzepa i pali cigaru.", ReturnPlayerName(playerid));
	ProxMessage(playerid, str, 20.0);
	return 1;
}

CMD:ugasicigaru(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_SMOKE_CIGGY)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas cigaru!");

	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	
	new str[128];
	format(str, sizeof(str), "{C2A2DA}* %s zavrsava cigaru i baca je na pod.", ReturnPlayerName(playerid));
	ProxMessage(playerid, str, 20.0);
	return 1;
}

CMD:zavezi(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	static id,
		string[60];

	if(PI[playerid][Kanap] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate kanap!");

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/zavezi [ID/Ime]");

	if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan ID!");

    if(!DaljinaIgraca(5.0, playerid, id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije blizu tebe!");

	if(GetPlayerVehicleID(id) != GetPlayerVehicleID(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nije sa vama u vozilu!");
	
    if(GetPlayerState(id) == PLAYER_STATE_DRIVER)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete zavezati vozaca!");

	if(Zavezan[id] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je vec zavezan!");

	if(Zavezan[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zavezani ne mozete nikoga vezati!");
		
    if(PI[id][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je zatvoren ne mozes to!");

	Zavezan[id] = 1;
	TogglePlayerControllable(id, 0);
	GameTextForPlayer(id, "~r~Zavezani ste!", 5, 5000);
	PI[playerid][Kanap] = 0;
	
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Kanap` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Kanap], PI[playerid][SQLID]);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
	
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Zavezali ste igraca %s!", ReturnPlayerName(id));
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Igrac %s vas je svezao | Ukoliko izadjete sa servera skinuce vam se 20k!", ReturnPlayerName(playerid));

	format(string,sizeof(string), "{C2A2DA}* %s uzima kanap i veze %s.", ReturnPlayerName(playerid), ReturnPlayerName(id));
	ProxMessage(playerid, string, 20.0);
	return 1;
}

CMD:odvezi(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	static id,
		string[60];

	if(PI[playerid][Kanap] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate kanap!");

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/zavezi [ID/Ime]");

	if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan ID!");

    if(!DaljinaIgraca(5.0, playerid, id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije blizu tebe!");

	if(Zavezan[id] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nije zavezan!");

	if(id == playerid)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes odvezati sebe!");
		
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je zatvoren ne mozes to!");

	Zavezan[id] = 0;
	TogglePlayerControllable(id, 0);
	GameTextForPlayer(id, "~g~Odvezani ste!", 5, 5000);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odvezali ste igraca %s!", ReturnPlayerName(id));
	
	format(string,sizeof(string), "{C2A2DA}* %s uzima noz i odveze igraca %s.", ReturnPlayerName(playerid), ReturnPlayerName(id));
	ProxMessage(playerid, string, 20.0);
	return 1;
}

CMD:call(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Mutiran] != 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Mutirani ste pa ne mozete koristiti tu komandu!");

	if(PI[playerid][Mobilni] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate mobilni telefon!");

	if(PI[playerid][Imenik] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate imenik!");

	if(TelefonZvoni[playerid] == true)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Zvoni vam telefon prvo se javite ili odbijte poziv!");
		
    if(IgracTazovan[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to tazovani ste!");

	if(StavljeneLisice[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to imate lisice!");

	if(Zavezan[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to zavezani ste!");
		
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zatvoreni ne mozete koristiti ovu komandu!");

	static broj,
		string[100];

	if(sscanf(params, "i", broj))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/call [broj telefona]");
		
	if(broj == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete zvati taj broj!");

	if(broj == PI[playerid][Mobilni])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete zvati taj broj!");

	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
		{
			if(broj == PI[i][Mobilni])
			{
				if(TelefonZvoni[i] == true)
					return va_SendClientMessage(playerid, 0xbe1fdeFF, "[TELEKOM]: {FFFFFF}Veza zauzeta (Igracev telefon vec zvoni)!");

				if(TelefonRazgovor[i] != -1)
					return va_SendClientMessage(playerid, 0xbe1fdeFF, "[TELEKOM]: {FFFFFF}{FFFFFF}Veza zauzeta (Igrac prica sa nekim)!");

				TelefonRazgovor[i] = playerid;
				TelefonRazgovor[playerid] = i;
				TelefonZvoni[i] = true;

				va_SendClientMessage(i, 0xbe1fdeFF, "[TELEKOM]: {FFFFFF}Zvoni vam telefon | Pozivatelj: %d | /p - za javljanje | /h - za prekidanje", PI[playerid][Mobilni]);

				format(string,sizeof(string), "{C2A2DA}* Mobilni od %s zvoni.", ReturnPlayerName(i));
				ProxMessage(i, string, 20.0);

				format(string,sizeof(string), "{C2A2DA}* %s vadi mobilni iz dzepa.", ReturnPlayerName(playerid));
				ProxMessage(playerid, string, 20.0);

				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
				SetPlayerAttachedObject(playerid, 4, 330, 6, 0.04, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
				return 1;
			}
		}
	}
	return va_SendClientMessage(playerid, 0xbe1fdeFF, "[TELEKOM]: {FFFFFF}Telefonski broj koji ste upisali ne postoji!");
}

CMD:p(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Mobilni] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate mobilni telefon!");
		
	if(TelefonZvoni[playerid] == false)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne zvoni vam telefon!");
		
	if(TelefonRazgovor[playerid] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne zvoni vam telefon!");
		
    if(IgracTazovan[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to tazovani ste!");

	if(StavljeneLisice[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to imate lisice!");

	if(Zavezan[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to zavezani ste!");
		
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zatvoreni ne mozete koristiti ovu komandu!");

	new string[100];
	TelefonZvoni[playerid] = false;

	va_SendClientMessage(TelefonRazgovor[playerid], 0xbe1fdeFF, "[TELEKOM]: {FFFFFF}Igrac se javio na telefon | Sada mozete pricati na telefon sa T!");
	va_SendClientMessage(playerid, 0xbe1fdeFF, "[TELEKOM]: {FFFFFF}Javili ste se na telefon | Sada mozete pricati na telefon sa T!");

	format(string,sizeof(string), "* %s se javlja na telefon.", ReturnPlayerName(playerid));
	ProxMessage(playerid, string, 20.0);
	MobilniCenaRazgovora[TelefonRazgovor[playerid]] = SetTimerEx("CenaRazgovora", 10000, true, "i", TelefonRazgovor[playerid]);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
	SetPlayerAttachedObject(playerid, 4, 330, 6, 0.04, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
	return 1;
}

CMD:h(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Mobilni] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate mobilni telefon!");
		
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zatvoreni ne mozete koristiti ovu komandu!");
		
	if(TelefonRazgovor[playerid] != -1)
	{
		TelefonZvoni[playerid] = false;
		TelefonZvoni[TelefonRazgovor[playerid]] = false;

		va_SendClientMessage(TelefonRazgovor[playerid], 0xbe1fdeFF, "[TELEKOM]: {FFFFFF}Veza prekinuta (Igrac sa kojim ste pricali je prekinuo poziv)!"),

		SetPlayerSpecialAction(TelefonRazgovor[playerid], SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(TelefonRazgovor[playerid], 4);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);

		RemovePlayerAttachedObject(playerid, 4);
		KillTimer(MobilniCenaRazgovora[playerid]);
	 	KillTimer(MobilniCenaRazgovora[TelefonRazgovor[playerid]]);
		TelefonRazgovor[TelefonRazgovor[playerid]] = -1;
		TelefonRazgovor[playerid] = -1;

		va_SendClientMessage(playerid, 0xbe1fdeFF, "[TELEKOM]: {FFFFFF}Prekinuli ste poziv!");
	}
	else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u pozivu!");
    return 1;
}

CMD:sms(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Mutiran] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste mutirani ne mozete koristiti komande!");

	if(PI[playerid][Mobilni] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate mobilni telefon!");

	if(PI[playerid][Imenik] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate imenik!");
		
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zatvoreni ne mozete koristiti ovu komandu!");

	static broj,
		poruka[128];

	if(sscanf(params, "is[128]", broj, poruka))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/sms [broj telefona] [tekst poruke]" );

	if(broj == 0)
		return va_SendClientMessage(playerid, 0xbe1fdeFF, "[TELEKOM]: {FFFFFF}Ne mozete zvati taj broj!");

	if(broj == PI[playerid][Mobilni])
		return va_SendClientMessage(playerid, 0xbe1fdeFF, "[TELEKOM]: {FFFFFF}Ne mozete zvati taj broj!");

	if(PI[playerid][MobKredit] <= 0)
		return va_SendClientMessage(playerid, 0xbe1fdeFF, "[TELEKOM]: {FFFFFF}Nemate kredita!");

    if(IgracTazovan[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to tazovani ste!");

	if(StavljeneLisice[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to imate lisice!");

	if(Zavezan[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to zavezani ste!");

	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
		{
			if(broj == PI[i][Mobilni])
			{
				va_SendClientMessage(i, 0xbe1fdeFF, "[NOVA PORUKA]: {FFFFFF}Posiljac: %d | Ime: %s", PI[playerid][Mobilni], ReturnPlayerName(playerid));
				va_SendClientMessage(i, 0xbe1fdeFF, "[TEKST]: {FFFFFF}%s", poruka);

				va_SendClientMessage(playerid, 0xbe1fdeFF, "[TELEKOM]: {FFFFFF}Uspesno ste poslali poruku na broj %d!", broj);
				va_SendClientMessage(i, 0xbe1fdeFF, "[TEKST]: {FFFFFF}%s", poruka);

				PI[playerid][MobKredit] --;
				mysql_tqueryEx(SQL, "UPDATE `users` SET `MobKredit` = '%d' WHERE `SQLID` = '%d'", PI[playerid][MobKredit], PI[playerid][SQLID]);
				return 1;
			}
		}
	}
 	return 1;
}

CMD:smsoglas(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(PI[playerid][MobKredit] < 15)
		return va_SendClientMessage(playerid, 0xbe1fdeFF, "[TELEKOM]: {FFFFFF}Nemate dovoljno kredita!");
		
    if(PI[playerid][Mobilni] == 0)
		return va_SendClientMessage(playerid, 0xbe1fdeFF, "[TELEKOM]: {FFFFFF}Nemate telefon!");

	if(PI[playerid][Level] < 3)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti minimum level 3!");
		
    if(ServerInfo[sOglas] == 0)
   		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Oglasi su trenutno iskljuceni!");

	if(isnull(params))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/smsoglas [tekst]");
    
    if(PI[playerid][Mutiran] != 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste mutirani ne mozete koristiti komande!");
		
    if(IgracTazovan[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to tazovani ste!");

	if(StavljeneLisice[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to imate lisice!");

	if(Zavezan[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to zavezani ste!");
		
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zatvoreni ne mozete koristiti ovu komandu!");
		
    if(gettime() < DaoOglas)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate sacekati jos %d sekundi, neko je vec dao oglas!", DaoOglas-gettime());
        
	DaoOglas = gettime() + 60;
		
    PI[playerid][MobKredit] -= 15;
    CheckQuestDone(playerid, 10);
    mysql_tqueryEx(SQL, "UPDATE `users` SET `MobKredit` = '%d' WHERE `SQLID` = '%d'", PI[playerid][MobKredit], PI[playerid][SQLID]);
	va_SendClientMessageToAll(0x1b71bcFF, "[OGLAS]: {FFFFFF}%s", params);
	va_SendClientMessageToAll(0x1b71bcFF, "Kontakt: {FFFFFF}%s | {1b71bc}Telefon: {FFFFFF}%d", ReturnPlayerName(playerid), PI[playerid][Mobilni]);
	
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste dali oglas oduzeto vam je 15 kredita!");
	return 1;
}

CMD:broj(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(PI[playerid][Imenik] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate imenik!");
		
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zatvoreni ne mozete koristiti ovu komandu!");

	static id;

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/broj [ID/Ime]");

	if(!IsPlayerConnected(id))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je offline!");

	if(PI[id][Mobilni] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nema mobilni telefon!");

	va_SendClientMessage(playerid, 0xbe1fdeFF, "[TELEKOM]: {FFFFFF}Igrac: %s | Broj: %d", ReturnPlayerName(id), PI[id][Mobilni]);
    return 1;
}

CMD:naocare(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Naocare] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas naocare!");

	new string[128];
	if(SNaocare[playerid] == true)
	{
	    RemovePlayerAttachedObject(playerid, 1);
	    format(string,sizeof(string), "{C2A2DA}* %s skida naocare.", ReturnPlayerName(playerid));
		ProxMessage(playerid, string, 20.0);
	    SNaocare[playerid] = false;
	}
	else
	{
        SetPlayerAttachedObject(playerid, 1, 19006, 2, 0.09, 0.04, 0, 88, 75, 0);
	    format(string,sizeof(string), "{C2A2DA}* %s stavlja naocare.", ReturnPlayerName(playerid));
		ProxMessage(playerid, string, 20.0);
	    SNaocare[playerid] = true;
	}
	return 1;
}

CMD:sastavitiket(const playerid)
{
    if(PI[playerid][Level] < 3)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3!");

	if(PI[playerid][Novac] < 1000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate imati barem 1.000$");

	if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");

	new bool:ukladionici = false;
    for(new i; i < MAX_FIRMI; i++)
    {
        if(UsaoFirma[playerid] != -1 && FirmaInfo[i][fVrsta] == VRSTA_KLADIONICA && IsPlayerInRangeOfPoint(playerid, 25.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]) && GetPlayerVirtualWorld(playerid) == FirmaInfo[i][fVW])
        {
            ukladionici = true;
        }
    }

	if(ukladionici == false)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u kladionici!");

	if(sastavljatiket[playerid] == true)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec sastavljate tiket!");

	biltenstr[playerid] = 0;
    tikettime[playerid] = gettime()+300;

	new query[256];
    format(query, sizeof(query), "SELECT `Ime` FROM `tickets` WHERE `IME` = '%s'", ReturnPlayerName(playerid));
    mysql_tquery(SQL, query, "CheckTiket1", "i", playerid);
    return 1;
}

CMD:isplatitiket(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    new bool:ukladionici = false;
    for(new i; i < MAX_FIRMI; i++)
    {
        if(UsaoFirma[playerid] != -1 && FirmaInfo[i][fVrsta] == VRSTA_KLADIONICA && IsPlayerInRangeOfPoint(playerid, 25.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]) && GetPlayerVirtualWorld(playerid) == FirmaInfo[i][fVW])
        {
            ukladionici = true;
        }
    }

	if(ukladionici == false)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u kladionici!");

	new query[256];
    format(query, sizeof(query), "SELECT * FROM `tickets` WHERE `Ime` = '%s'", ReturnPlayerName(playerid));
    mysql_tquery(SQL, query, "CheckTiket10", "i", playerid);
    return 1;
}

CMD:bacitiket(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    new query[256];
    format(query, sizeof( query ), "SELECT * FROM `tickets` WHERE `Ime` = '%s'", ReturnPlayerName(playerid));
    mysql_tquery(SQL, query, "CheckTiket6", "i", playerid);
    return 1;
}

CMD:tiket(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    new query[256];
    format(query, sizeof(query), "SELECT * FROM `tickets` WHERE `Ime` = '%s'", ReturnPlayerName(playerid));
    mysql_tquery(SQL, query, "CheckTiket5", "i", playerid);
    return 1;
}

CMD:vreme(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	new string[250], sati, minuta; gettime(sati, minuta);

	if(PI[playerid][Sat] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate sat!");

    if(PI[playerid][Zatvor] != 0 && PI[playerid][Mutiran] == 0)
	{
		format(string, sizeof(string), "~y~| ~w~%d:%d ~y~|~n~~y~Zatvorska kazna: ~r~%d", sati,minuta, PI[playerid][ZatvorVreme]);
	}
	else if(PI[playerid][Zatvor] == 0 && PI[playerid][Mutiran] != 0)
	{
		format(string, sizeof(string), "~w~%02d~b~:~w~%02d ~n~~b~Utisani ste jos: ~w~%s min", sati, minuta, KonvertujVreme(PI[playerid][Mutiran]));
	}
	else if(PI[playerid][Zatvor] != 0 && PI[playerid][Mutiran] != 0)
	{
		format(string, sizeof(string), "~w~%02d~b~:~w~%02d ~n~~b~Zatvoreni ste jos: ~w~%s min~n~~b~Utisani ste jos: ~w~%s min", sati, minuta, KonvertujVreme(PI[playerid][ZatvorVreme]), KonvertujVreme(PI[playerid][Mutiran]));
	}
	else
	{
		format(string, sizeof(string),"~w~%02d~b~:~w~%02d", sati, minuta);
	}
	GameTextForPlayer(playerid, string, 5000, 3);
	if(!IsPlayerInAnyVehicle(playerid))
	{
		ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_watch", 3.5, false, false, false, false, 0, SYNC_NONE);
	}
	format(string, sizeof(string), "* %s podize ruku i gleda na sat.", ReturnPlayerName(playerid));
	ProxMessage(playerid, string, 20.0);
	return 1;
}

CMD:kuca(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Kuca] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate kucu!");

	if(strcmp(KucaInfo[PI[playerid][Kuca]][kVlasnik], ReturnPlayerName(playerid), true))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste vlasnik te kuce!");

    Dialog_Show(playerid, dialog_kuca, DIALOG_STYLE_LIST, "{1b71bc}Kuca", "{1b71bc}> {FFFFFF}Informacije\n\
																           {1b71bc}> {FFFFFF}Otkljucaj\n\
																		   {1b71bc}> {FFFFFF}Zakljucaj\n\
																		   {1b71bc}> {FFFFFF}Ostavi u kuci\n\
																		   {1b71bc}> {FFFFFF}Uzmi iz kuce\n\
																		   {1b71bc}> {FFFFFF}Prodaj kucu\n\
																		   {1b71bc}> {FFFFFF}Dozvoli/Zabrani Rent\n\
																		   {1b71bc}> {FFFFFF}Cena Renta\n\
																		   {1b71bc}> {FFFFFF}Nadogradi  -  Preuredi\n\
																		   {1b71bc}> {FFFFFF}Namernice iz frizdera", "Odaberi", "Izlaz");
	return 1;
}

CMD:kupivozilo(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
    	return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");
		
    if(UsaoAutoProdaja[playerid] != -1)
    {
        new i = UsaoAutoProdaja[playerid];
        if(VoziloInfo[i][vImaVlasnika] == 0)
		{
		    if(PI[playerid][Novac] < VoziloInfo[i][vCena]/2)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

            if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

				PI[playerid][Vozilo1] = i;
				PI[playerid][Novac] -= VoziloInfo[i][vCena]/2;
				GivePlayerMoney(playerid, -VoziloInfo[i][vCena]/2);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

				PI[playerid][Vozilo2] = i;
				PI[playerid][Novac] -= VoziloInfo[i][vCena]/2;
				GivePlayerMoney(playerid, -VoziloInfo[i][vCena]/2);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

				PI[playerid][Vozilo3] = i;
				PI[playerid][Novac] -= VoziloInfo[i][vCena]/2;
				GivePlayerMoney(playerid, -VoziloInfo[i][vCena]/2);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			strmid(VoziloInfo[i][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);

			mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Vlasnik` = '%s', `ImaVlasnika` = '1', `Zakljucan` = '1', `Droga` = '0', `Mats` = '0', \
				`Oruzije` = '-1', `Municija` = '0', `Radio` = '0', `NaPijaci` = '0' WHERE `SQLID` = '%d'", VoziloInfo[i][vVlasnik], VoziloInfo[i][SQLID]);
  			TogglePlayerControllable(playerid, 1);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste kupili polovan auto za %d$ novca!", VoziloInfo[i][vCena]/2);
  			UsaoAutoProdaja[playerid] = -1;
		}
		else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}To vozilo nije na prodaju!");
    }
	return 1;
}

CMD:izlaz(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(!IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u vozilu!");
		
	RemovePlayerFromVehicle(playerid);
	TogglePlayerControllable(playerid, 1);
	return 1;
}

CMD:v(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Vozilo1] == -1 && PI[playerid][Vozilo2] == -1 && PI[playerid][Vozilo3] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne posedujes vozilo/a!");

	if(PI[playerid][Vozilo1] != -1)
	{
		if(VoziloInfo[PI[playerid][Vozilo1]][SQLID] > 0)
		{
			if(strcmp(VoziloInfo[PI[playerid][Vozilo1]][vVlasnik], ReturnPlayerName(playerid), true))
			{
				va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vozilo na slotu 1 koje je bilo u vasem vlasnistvu je prodato, kljuc vam je skinut!");
				PI[playerid][Vozilo1] = -1;
	            mysql_tqueryEx(SQL, "UPDATE `users` SET `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Vozilo1], PI[playerid][SQLID]);
             	return 1;
			}
		}
		else
		{
	 		va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vozilo na slotu 1 koje je bilo u vasem vlasnistvu je obrisano, kljuc vam je skinut!");
			PI[playerid][Vozilo1] = -1;
	  		mysql_tqueryEx(SQL, "UPDATE `users` SET `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Vozilo1], PI[playerid][SQLID]);
	  		return 1;
		}
	}
	if(PI[playerid][Vozilo2] != -1)
	{
		if(VoziloInfo[PI[playerid][Vozilo2]][SQLID] > 0)
		{
			if(strcmp(VoziloInfo[PI[playerid][Vozilo2]][vVlasnik], ReturnPlayerName(playerid), true))
			{
				va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vozilo na slotu 2 koje je bilo u vasem vlasnistvu je prodato, kljuc vam je skinut!");
				PI[playerid][Vozilo2] = -1;
	            mysql_tqueryEx(SQL, "UPDATE `users` SET `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Vozilo2], PI[playerid][SQLID]);
	            return 1;
			}
		}
		else
		{
	 		va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vozilo na slotu 2 koje je bilo u vasem vlasnistvu je obrisano, kljuc vam je skinut!");
			PI[playerid][Vozilo2] = -1;
	  		mysql_tqueryEx(SQL, "UPDATE `users` SET `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Vozilo2], PI[playerid][SQLID]);
	  		return 1;
		}
	}
	if(PI[playerid][Vozilo3] != -1)
	{
		if(VoziloInfo[PI[playerid][Vozilo3]][SQLID] > 0)
		{
            if(strcmp(VoziloInfo[PI[playerid][Vozilo3]][vVlasnik], ReturnPlayerName(playerid), true))
			{
				va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vozilo na slotu 3 koje je bilo u vasem vlasnistvu je prodato, kljuc vam je skinut!");
				PI[playerid][Vozilo3] = -1;
	            mysql_tqueryEx(SQL, "UPDATE `users` SET `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Vozilo3], PI[playerid][SQLID]);
	            return 1;
			}
		}
		else
		{
	 		va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vozilo na slotu 3 koje je bilo u vasem vlasnistvu je obrisano, kljuc vam je skinut!");
			PI[playerid][Vozilo3] = -1;
	  		mysql_tqueryEx(SQL, "UPDATE `users` SET `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Vozilo3], PI[playerid][SQLID]);
	  		return 1;
		}
	}
	new v1[30], v2[30], v3[30], str[200];
 	if(PI[playerid][Vozilo1] != -1) { format(v1, sizeof(v1), "%s", ImenaVozila[VoziloInfo[PI[playerid][Vozilo1]][vModel] - 400]); }
 	if(PI[playerid][Vozilo1] == -1) { format(v1, sizeof(v1), "Prazno"); }
 	if(PI[playerid][Vozilo2] != -1) { format(v2, sizeof(v2), "%s", ImenaVozila[VoziloInfo[PI[playerid][Vozilo2]][vModel] - 400]); }
 	if(PI[playerid][Vozilo2] == -1) { format(v2, sizeof(v2), "Prazno"); }
  	if(PI[playerid][Vozilo3] != -1) { format(v3, sizeof(v3), "%s", ImenaVozila[VoziloInfo[PI[playerid][Vozilo3]][vModel] - 400]); }
 	if(PI[playerid][Vozilo3] == -1) { format(v3, sizeof(v3), "Prazno"); }
	format(str, sizeof(str), "{1b71bc}> {FFFFFF}%s\n{1b71bc}> {FFFFFF}%s\n{1b71bc}> {FFFFFF}%s", v1, v2, v3);
 	Dialog_Show(playerid, dialog_vozila, DIALOG_STYLE_LIST, "{1b71bc}Vozila", str, "Odaberi", "Izlaz");
	return 1;
}

CMD:avobrisi(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	new vehid;

	if(sscanf(params, "i", vehid))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/avobrisi [ID]");

	if(VoziloInfo[vehid][SQLID] > 0)
	{
	    VoziloInfo[vehid][SQLID] = 0;
	    VoziloInfo[vehid][vID] = 0;
		VoziloInfo[vehid][vPozX] = 0;
		VoziloInfo[vehid][vPozY] = 0;
		VoziloInfo[vehid][vPozZ] = 0;
		VoziloInfo[vehid][vPozA] = 0;

		mysql_tqueryEx(SQL, "DELETE FROM `vehicles` WHERE `SQLID` = '%d'", vehid);

		if(VoziloInfo[vehid][vID] != 0) DestroyVehicle(VoziloInfo[vehid][vID]), DestroyDynamic3DTextLabel(VoziloInfo[vehid][v3DText]);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Vozilo ID: %d je uspesno obrisano!", vehid);
	}
	return 1;
}

CMD:stan(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Stan] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate stan!");

	if(strcmp(KucaInfo[PI[playerid][Kuca]][kVlasnik], ReturnPlayerName(playerid), true))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste vlasnik tog stana!");

    Dialog_Show(playerid, dialog_stan, DIALOG_STYLE_LIST, "{1b71bc}Stan", "{1b71bc}> {FFFFFF}Informacije\n\
																           {1b71bc}> {FFFFFF}Otkljucaj\n\
																		   {1b71bc}> {FFFFFF}Zakljucaj\n\
																		   {1b71bc}> {FFFFFF}Ostavi u stanu\n\
																		   {1b71bc}> {FFFFFF}Uzmi iz stana\n\
																		   {1b71bc}> {FFFFFF}Prodaj stan\n\
																		   {1b71bc}> {FFFFFF}Preuredi", "Odaberi", "Izlaz");
	return 1;
}

CMD:rentajkucu(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
   	for(new i = 0; i < MAX_KUCA; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]))
		{
	        if(PI[playerid][Kuca] != -1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imas kucu pa ne mozes rentati!");

			if(KucaInfo[i][kRent] == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}U toj kuci rent nije dozvoljen!");

			if(PI[playerid][Novac] < KucaInfo[i][kCenaRenta])
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas dovoljno novca za rent!");

			PI[playerid][Novac] -= KucaInfo[i][kCenaRenta];
			GivePlayerMoney(playerid, -KucaInfo[i][kCenaRenta]);
			KucaInfo[i][kNovac] += KucaInfo[i][kCenaRenta];

			PI[playerid][Rent] = i;
			SetPlayerInterior(playerid, KucaInfo[i][kInt]);
			SetPlayerVirtualWorld(playerid, KucaInfo[i][kVW]);
			
			mysql_tqueryEx(SQL, "UPDATE `houses` SET `Novac` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kCenaRenta], KucaInfo[i][SQLID]);
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `RentKuca` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Rent], PI[playerid][SQLID]);
			
			SetPlayerPos(playerid, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste rentali kucu za %d$!", KucaInfo[i][kCenaRenta]);
			return 1;
		}
	}
    return 1;
}

CMD:zvoni(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	for(new i = 0; i < sizeof(KucaInfo); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]))
		{
	        if(KucaInfo[i][kZvono] == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ta kuca nema zvono!");

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Zvonite na vrata...");

			foreach(new k: Player)
			{
				if(IsPlayerInRangeOfPoint(k,25.0,KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]))
				{
	            	va_SendClientMessage(k, 0x1b71bcFF, "#Info: {FFFFFF}Neko zvoni na vratima.");
				}
			}
		}
	}
	return 1;
}

CMD:unrentajkucu(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Kuca] != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imas kucu ne mozes to!");

	if(PI[playerid][Rent] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne rentas kucu!");

	PI[playerid][Rent] = -1;
    mysql_tqueryEx(SQL, "UPDATE `users` SET `RentKuca` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Rent], PI[playerid][SQLID]);
    
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Unrent ste kucu!");
	return 1;
}

CMD:aprodajkucu(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
	static id;

	if(sscanf(params, "i", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/aprodajkucu [ID]");

    if(KucaInfo[id][SQLID] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan ID kuce!");

	if(KucaInfo[id][kProveraVlasnika] == 0)
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}Ta kuca nema vlasnika pa je ne mozete prodati!");

	KucaInfo[id][kProveraVlasnika] = 0;
	KucaInfo[id][kFrizder] = 0;
	KucaInfo[id][kOruzije] = -1;
	KucaInfo[id][kOdjeca] = 0;
    KucaInfo[id][kNovac] = 0;
	KucaInfo[id][kZatvoreno] = 1;
	KucaInfo[id][kZvono] = 0;
	KucaInfo[id][kDroga] = 0;
    KucaInfo[id][kMunicija] = 0;
	KucaInfo[id][kRent] = 0;
	KucaInfo[id][kMats] = 0;
	KucaInfo[id][kHrana] = 0;
    strmid(KucaInfo[id][kVlasnik],"Niko",0,strlen("Niko"),255);
    
    mysql_tqueryEx(SQL, "UPDATE `houses` SET `ProveraVlasnika` = '%d', `Vlasnik` = 'Niko', `Zatvoreno` = '%d', `Oruzije` = '%d', `Municija` = '%d', `Rent` = '%d', `Zvono` = '%d', `Heal` = '%d', `Mats` = '%d', `Droga` = '%d',\
		`Odjeca` = '%d', `Hrana` = '%d' WHERE `SQLID` = '%d'", KucaInfo[id][kProveraVlasnika], KucaInfo[id][kZatvoreno], KucaInfo[id][kOruzije], KucaInfo[id][kMunicija], KucaInfo[id][kRent], KucaInfo[id][kZvono],
		KucaInfo[id][kFrizder], KucaInfo[id][kMats], KucaInfo[id][kDroga], KucaInfo[id][kOdjeca], KucaInfo[id][kHrana], KucaInfo[id][SQLID]);

    KuceLP(id);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prodali ste kucu ID: %d!", id);
	return 1;
}

CMD:obrisikucu(playerid, const params[])
{
    static id;
    
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 6)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	if(sscanf(params, "i", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/obrisikucu [ID]");

	mysql_tqueryEx(SQL, "DELETE FROM `houses` WHERE `SQLID` = '%d'", id);
	DestroyDynamic3DTextLabel(KucaLabel[id]);
	DestroyDynamicPickup(KucaPickup[id]);
	
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Obrisali ste kucu ID: %d!", id);
    return 1;
}

CMD:obrisistan(playerid, const params[])
{
    static id;

    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 6)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	if(sscanf(params, "i", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/obrisistan [ID]");

	mysql_tqueryEx(SQL, "DELETE FROM `apartments` WHERE `SQLID` = '%d'", id);
    DestroyDynamic3DTextLabel(StanLabel[id]);
	DestroyDynamicPickup(StanPickup[id]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Obrisali ste stan ID: %d!", id);
    return 1;
}

CMD:ekucu(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
	static sta[20],
		ide;

	if(sscanf(params, "s[20]i",sta,ide))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/ekucu [level,cena,novac, izbrisi] [kol]");

	for(new i; i < MAX_KUCA; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]))
		{
			if(!strcmp(sta, "level", true))
			{
			    KucaInfo[i][kLevel] = ide;
				KuceLP(i);
				mysql_tqueryEx(SQL, "UPDATE `houses` SET `Level` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kLevel], KucaInfo[i][SQLID]);
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Izmenili ste level kuce ID: %d u %d!", i, ide);
			}
			else if(!strcmp(sta, "cena", true))
			{
			    KucaInfo[i][kCena] = ide;
		        KuceLP(i);
				mysql_tqueryEx(SQL, "UPDATE `houses` SET `Cena` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kCena], KucaInfo[i][SQLID]);
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Izmenili ste cenu kuce ID: %d u %d!", i, ide);
			}
			else if(!strcmp(sta, "novac", true))
			{
                KucaInfo[i][kNovac] = ide;
		        KuceLP(i);
				mysql_tqueryEx(SQL, "UPDATE `houses` SET `Novac` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kNovac], KucaInfo[i][SQLID]);
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Izmenili ste novac u kuci ID: %d u %d!", i, ide);
			}
		}
	}
	return 1;
}

CMD:sviheal(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 5)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	foreach(new i : Player) { SetPlayerHealth(i, 100); }
	va_SendClientMessageToAll(0xFF0000FF, "#Health: {FFFFFF}Admin %s je napunio helte svim igracima.", ReturnPlayerName(playerid));
	return 1;
}

CMD:svipancir(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 5)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	foreach(new i : Player) { SetPlayerArmour(i, 100); }
	va_SendClientMessageToAll(0x1b71bcFF, "#Armour: {FFFFFF}Admin %s je napunio pancir svim igracima.", ReturnPlayerName(playerid));
	return 1;
}

CMD:ao(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras se ulogovati da bi koristio ovu komandu!");

	if(PI[playerid][Admin] < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	static text[128];

	if(sscanf(params, "s[128]", text))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/ao [tekst]");

	va_SendClientMessageToAll(0xFF0000FF, "(( {FFFFFF}%s {FF0000}%s: {FFFFFF}%s {FF0000}))", GetStaffRankName(PI[playerid][Admin]), ReturnPlayerName(playerid), text);
	return 1;
}

CMD:admini(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    new Cache:resultt, redovi;
    new DialogStrgEx[2048], globalstring[150];
    resultt = mysql_query(SQL, "SELECT * FROM `users` WHERE `Admin` > '0'");
    cache_get_row_count(redovi);
    if(resultt)
	{
        strdel(DialogStrgEx, 0, sizeof(DialogStrgEx));
        strcat(DialogStrgEx, "{FFFFFF}Ime\t{FFFFFF}Status\t{FFFFFF}Level\tDuty\n");
        if(redovi)
        {
	        for(new i = 0; i < redovi; i++)
			{
			    new p_name[24],
			    	last_login[30],
			    	level,
			    	is_online;
	            cache_get_value_name(i, "Ime", p_name, 24);
	            cache_get_value_name_int(i, "isonline", is_online);
	            cache_get_value_name_int(i, "Admin", level);

	            if(is_online == 0)
				{
					cache_get_value_name(i, "LastLogin", last_login, 30);

					format(globalstring, 150, "{FFFFFF}%s\t{FF0000}%s\t%d\t{FF0000}Van Duznosti\n", p_name, last_login, level);
					strcat(DialogStrgEx, globalstring);
				}
				else
				{
					new id = GetPlayerIdFromName(p_name);

	            	format(globalstring, 150, "{FFFFFF}[%d] %s\t{00FF00}Online\t%d\t%s\n", id, p_name, level, (AdminDuty[id] == 1) ? ("{00FF00}Na Duznosti") : ("{FF0000}Van Duznosti"));
					strcat(DialogStrgEx, globalstring);
				}
			}
			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Lista Admina", DialogStrgEx, "OK", "");
			strdel(DialogStrgEx, 0, sizeof(DialogStrgEx));
		}
		else va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nema admina na listi.");
		cache_delete(resultt);
    }
	return 1;
}

CMD:mute(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 2)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
        
    if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na admin duznosti!");

	static id,
	    vreme,
		razlog[40];

	if(sscanf(params, "uis[40]", id, vreme, razlog))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/mute [id] [vreme 1 - 10000] [razlog]");

	if(PI[id][Mutiran] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac je vec mutiran!");

	if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");
		
    if(vreme < 0 || vreme > 10000)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kazna kuce nemoze biti manja od 1 a veca od 10000!");

	PI[id][Mutiran] = vreme;
	
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Mutiran` = '%d' WHERE `SQLID` = '%d'", PI[id][Mutiran], PI[id][SQLID]);

	va_SendClientMessage(id, 0xFF0000FF, "#Mute: {FFFFFF}Mutirani ste od strane admina %s | Vreme: %d | Razlog: %s!", ReturnPlayerName(playerid), vreme, razlog);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Mutirali ste igraca %s | Vreme: %d | Razlog: %s!", ReturnPlayerName(id), vreme, razlog);
	return 1;
}

CMD:unmute(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 2)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na admin duznosti!");

	static id;

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/unmute [id]");

	if(PI[id][Mutiran] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije mutiran!");

	if(id == INVALID_PLAYER_ID)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");

	PI[id][Mutiran] = 0;

	mysql_tqueryEx(SQL, "UPDATE `users` SET `Mutiran` = '%d' WHERE `SQLID` = '%d'", PI[id][Mutiran], PI[id][SQLID]);

	va_SendClientMessage(id, 0xFF0000FF, "#Unmute: {FFFFFF}Unmutirani ste od strane admina %s, Sada mozete opet pisati!", ReturnPlayerName(playerid));
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Unmutirali ste igraca %s!", ReturnPlayerName(id));
	return 1;
}

CMD:mlista(const playerid)
{
   	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 2)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na admin duznosti!");

    new string[150];
	foreach(new i: Player)
	{
		if(PI[i][Mutiran] != 0)
		{
		    format(string, 150, "{FFFFFF}[ID: %d] | %s", i, ReturnPlayerName(i));
			strcat(string, "\n");
		}
	}
	if(strlen(string) == 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nema mutiranih igraca!");
	Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{FFFFFF}Mutirani Igraci", string, "OK", "");
	return 1;
}

CMD:vipskin(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	    
    if(IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes to u vozilu si");

	Dialog_Show(playerid, dialog_vipskin, DIALOG_STYLE_LIST, "{1fde79}Vip Skinovi", "{FFFFFF}Bumbar\nMrsa\nMiki\nMilos\nMica\nNikola\nCelavi\nProsjak\nSeljak\nKokosar\nZoran\nPeder\nGradjevinac\nKlovn\nStreberko", "OK", "Izadji");
	return 1;
}

CMD:dodaci(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
    if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
        
    Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Dodaci", "{FFFFFF}/ak47naledjima /m4naledjima /vodokotlic /pec /nilskikonj /tabla\n\
                                                                               /tec /baklja /ppancir /dollar /vatrenikostur /potkovica /kurcina /moneybag\n\
 																		       /padobran /papagaj /katana /testera /drvo /cigara /pstinger /dodacioff", "OK", "");
	return 1;
}

CMD:m4naledjima(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 0, 356, 1, 0.222186, -0.146085, 0.085346, 0.000000, 151.341934, 0.000000, 1.000000, 1.000000, 1.000000);
	return 1;
}

CMD:ak47naledjima(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 1, 355, 1, 0.253790, -0.141571, 0.094299, 0.000000, 155.042755, 0.000000, 1.000000, 1.000000, 1.000000);
	return 1;
}

CMD:tec(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

  	SetPlayerAttachedObject(playerid, 2, 372, 7, -0.149622, 0.041156, -0.073983, 270.018768, 359.987884, 357.778808, 1.000000, 1.000000, 1.000000);
	return 1;
}

CMD:baklja(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 3, 3461, 6, 0.069429, 0.032604, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); 
	return 1;
}

CMD:pancir(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 4, 373, 1, 0.286601, -0.014752, -0.169651, 74.940216, 23.071197, 33.927280, 1.000000, 1.000000, 1.000000);
	return 1;
}

CMD:padobran(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 8, 371, 1, 0.087999, -0.125000, -0.014000, 3.299999, 86.200019, -5.300003, 1.000000, 1.000000, 1.000000);
	return 1;
}

CMD:ppancir(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 4, 19142, 1, 0.0789, 0.0449, 0.0040, 0.0000, 0.0000, -2.5999, 1.0000, 1.1139, 1.0880, 0, 0);
    return 1;
}

CMD:pstinger(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 5, 360, 1, 0.1389, -0.1640, -0.0999, 0.0000, 35.4999, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0);
    return 1;
}

CMD:kurcina(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 2, 19086, 8, -0.049768, -0.014062, -0.108385, 87.458297, 263.478149, 184.123764, 0.622413, 1.041609, 1.012785);
	return 1;
}

CMD:dollar(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 5, 1274, 1, 0.806575, 0.052928, 0.013146, 0.000000, 87.540878, 0.000000, 1.000000, 1.000000, 1.000000);
	return 1;
}

CMD:cigara(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
	return 1;
}

CMD:vatrenikostur(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 6, 3524, 6, 0.100679, -0.061841, 2.545831, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
	return 1;
}

CMD:potkovica(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 7, 954, 1, 0.954922, 0.030687, 0.000000, 0.000000, 268.403228, 0.000000, 1.000000, 1.000000, 1.000000);
	return 1;
}

CMD:moneybag(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 0, 1550, 1, -0.008714, -0.188819, -0.026564, 159.138153, 86.558647, 0.000000, 1.005565, 0.984468, 1.014210);
	return 1;
}

CMD:papagaj(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 8, 19078, 1, 0.311434, -0.063826, -0.161611, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
	return 1;
}

CMD:katana(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 9, 339, 1, -0.248040, 0.000000, 0.178634, 88.912078, 172.776626, 5.334595, 1.000000, 1.000000, 1.000000);
	return 1;
}

CMD:testera(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 1, 341, 1, -0.340437, -0.203787, -0.068695, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
	return 1;
}

CMD:drvo(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 2, 674, 1, -1.193789, 0.051014, 0.099190, 0.000000, 90.430030, 0.000000, 1.000000, 1.000000, 1.000000);
	return 1;
}

CMD:vodokotlic(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 3, 1211, 1, 0.916536, 0.012704, -0.003792, 0.000000, 89.479736, 0.000000, 1.000000, 1.000000, 1.000000); 
	return 1;
}

CMD:tabla(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 4, 1233, 6, 0.085374, 0.030156, 1.154913, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); 
	return 1;
}

CMD:pec(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 5, 1777, 1, -0.455288, 0.122999, 0.000000, 0.000000, 90.075103, 177.894760, 1.000000, 1.000000, 1.000000);
	return 1;
}

CMD:nilskikonj(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 1 && PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	SetPlayerAttachedObject(playerid, 6, 1371, 1, 0.177012, 0.000000, -0.008047, 0.000000, 89.795104, 182.353408, 1.000000, 1.000000, 1.000000);
	return 1;
}

CMD:dodacioff(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i++)
    {
		if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
    }
    return 1;
}

CMD:bojavozila(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Admin] < 3)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	static id,
		col[2];

	if(sscanf(params, "udd", id, col[0], col[1]))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/bojavozila [ID/Ime] [ID Boje 1] [ID Boje 2]");

    if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");
	    
	if(!IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac mora biti u vozilu!");

	ChangeVehicleColours(GetPlayerVehicleID(id), col[0], col[1]);
	return 1;
}

CMD:setdozvole(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

    if(PI[playerid][Admin] < 4)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
        
    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");
	    
	static id,
		stat;
	    
	if(sscanf(params, "ui", id, stat))
	{
		va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/adozvole [ID/Nick] [Kod (1-6)]");
		va_SendClientMessage(playerid, -1, "| (1). Auto Dozvola | (2). Motor Dozvola | (3). Kamion Dozvola");
		va_SendClientMessage(playerid, -1, "| (4). Avion Dozvola | (5). Brod Dozvola | (6). Oruzije Dozvola");
		return 1;
	}
	
	if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");
	
	if(stat == 1)
	{
		PI[id][ADozvola] = 1;

		mysql_tqueryEx(SQL, "UPDATE `users` SET `ADozvola` = '%d' WHERE `SQLID` = '%d'", PI[id][ADozvola], PI[id][SQLID]);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Dali ste %s dozvolu za voznju.", ReturnPlayerName(id));
		va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vam je dao dozvolu za voznju.", ReturnPlayerName(playerid));
	}
	else if(stat == 2)
	{
		PI[id][MotorDozvola] = 1;

		mysql_tqueryEx(SQL, "UPDATE `users` SET `MotorDozvola` = '%d' WHERE `SQLID` = '%d'", PI[id][MotorDozvola], PI[id][SQLID]);
		
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Dali ste %s dozvolu za motor.", ReturnPlayerName(id));
		va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vam je dao dozvolu za motor.", ReturnPlayerName(playerid));
	}
	else if(stat == 3)
	{
		PI[id][KamionDozvola] = 1;

		mysql_tqueryEx(SQL, "UPDATE `users` SET `KamionDozvola` = '%d' WHERE `SQLID` = '%d'", PI[id][KamionDozvola], PI[id][SQLID]);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Dali ste %s dozvolu za kamion.", ReturnPlayerName(id));
		va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vam je dao dozvolu za kamion.", ReturnPlayerName(playerid));
	}
	else if(stat == 4)
	{
		PI[id][AvionDozvola] = 1;
		
		mysql_tqueryEx(SQL, "UPDATE `users` SET `AvionDozvola` = '%d' WHERE `SQLID` = '%d'", PI[id][AvionDozvola], PI[id][SQLID]);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Dali ste %s dozvolu za avion.", ReturnPlayerName(id));
		va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vam je dao dozvolu za avion.", ReturnPlayerName(playerid));
	}
	else if(stat == 5)
	{
		PI[id][BrodDozvola] = 1;
		
		mysql_tqueryEx(SQL, "UPDATE `users` SET `BrodDozvola` = '%d' WHERE `SQLID` = '%d'", PI[id][BrodDozvola], PI[id][SQLID]);
		
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Dali ste %s dozvolu za brod.", ReturnPlayerName(id));
		va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vam je dao dozvolu za brod.", ReturnPlayerName(playerid));
	}
	else if(stat == 6)
	{
		PI[id][OruzijeDozvola] = 1;

		mysql_tqueryEx(SQL, "UPDATE `users` SET `OruzijeDozvola` = '%d' WHERE `SQLID` = '%d'", PI[id][OruzijeDozvola], PI[id][SQLID]);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Dali ste %s dozvolu za oruzije.", ReturnPlayerName(id));
		va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vam je dao dozvolu za oruzije.", ReturnPlayerName(playerid));
	}
	else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan kod!");
	return 1;
}

CMD:gorivo(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(!IsPlayerInRangeOfPoint(playerid, 8.0, 1004.0422,-937.5357,42.3281) && !IsPlayerInRangeOfPoint(playerid, 8.0, 171.6999,-1923.0776,4.4559) && !IsPlayerInRangeOfPoint(playerid, 8.0, -91.2488,-1169.7260,2.4204) &&
		!IsPlayerInRangeOfPoint(playerid, 8.0, 1942.3732,-1772.7740,13.6406) && !IsPlayerInRangeOfPoint(playerid, 8.0, 1382.2139,460.1810,20.3452) && !IsPlayerInRangeOfPoint(playerid, 8.0, 1004.8034,-937.3431,48.2118))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na benzinskoj pumpi da bi sipali gorivo!");

	if(!IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u vozilu!");

	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na mestu vozaca!");

	if(VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete sipati gorivo u biciklo!");

	new l;
	if(sscanf(params, "i", l))
	{
		va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/gorivo [Litara]");
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cena po 1 litru je 50$!");
		return 1;
	}

	if(l < 1 || l > 80)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Minimalno Litara 1 - Maximalno Litara 20 odjednom!");

	if(PI[playerid][Novac] < l*50)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

	if(PuniGorivo[playerid] == true)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec tocite gorivo!");

	if(VoziloJeMotor(GetVehicleModel(GetPlayerVehicleID(playerid))))
	{
	    if(floatadd(Fuel[GetPlayerVehicleID(playerid)], l) > 45)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Zapremina tog rezervoara je 45 litara!");
	}
	if(VoziloJeAvion(GetVehicleModel(GetPlayerVehicleID(playerid))) || VoziloJeBrod(GetVehicleModel(GetPlayerVehicleID(playerid))) || VoziloJeKamion(GetVehicleModel(GetPlayerVehicleID(playerid))))
	{
	    if(floatadd(Fuel[GetPlayerVehicleID(playerid)], l) > 80)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Zapremina tog rezervoara je 80 litara!");
	}
	else
	{
		if(floatadd(Fuel[GetPlayerVehicleID(playerid)], l) > 45)
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Zapremina tog rezervoara je 45 litara!");
	}
	Fuel[GetPlayerVehicleID(playerid)] = Fuel[GetPlayerVehicleID(playerid)] += l;

	GivePlayerMoney(playerid, -l*50);
	PI[playerid][Novac] -= l*50;
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
	PuniGorivo[playerid] = true;
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Tocenje Goriva: {FFFFFF}Litara: %d | Cena: %d$.", l, l*50);
	GameTextForPlayer(playerid, "~w~Tocenje goriva~n~u toku...", 7000, 3);
	PlayerTimer[playerid] = SetTimerEx("GorivoFriz", 7000, false, "d", playerid);
	TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:agorivo(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Admin] < 4)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	for(new o; o < MAX_VOZILA; o++)
	{
		if(VoziloJeAvion(GetVehicleModel(o)) || VoziloJeBrod(GetVehicleModel(o)) || VoziloJeKamion(GetVehicleModel(o))) Fuel[o] = 80;
 		else if(VoziloJeMotor(GetVehicleModel(o))) Fuel[o] = 25;
  		else if(VoziloJeBicikla(GetVehicleModel(o)) || GetVehicleModel(o) == 538) Fuel[o] = 1000000;
  		else Fuel[o] = 45;
	}

	static str[256];
	format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je napunio sva vozila gorivom.", ReturnPlayerName(playerid));
	AdminMessage(-1, str);

	foreach(new i: Player)
	{
	    format(str, sizeof(str), "%dL", Fuel[GetPlayerVehicleID(i)]),
		PlayerTextDrawSetString(playerid, BrzinaTD[playerid][10], str);
	}
	return 1;
}

CMD:fban(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 4)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	    
	static id,
		razlog[40];

    if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	if(sscanf(params, "us[40]", id, razlog))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/fban [ID/Nick] [Razlog]");

	if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");

	va_SendClientMessageToAll(0xFF0000FF, "#BAN: {FFFFFF}Admin %s je banovao igraca %s | Razlog: %s.", ReturnPlayerName(playerid), ReturnPlayerName(id), razlog);

    va_SendClientMessage(id, 0xA9C4E4AA, "Server closed the connection.");
	va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Ovo je lazni ban debilu hehe xD.");
	return 1;
}

CMD:setskin(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Admin] < 4)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	static id,
		skin;

	if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	if(sscanf(params, "ui", id, skin))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/setskin [ID] [Skin ID]");

	if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");

	PI[id][Skin] = skin;
	SetPlayerSkin(id, skin);

	va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vam je setovao skin ID %d!", ReturnPlayerName(playerid), skin);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste postavili skin igracu %s!", ReturnPlayerName(id));
	
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Skin` = '%d' WHERE `SQLID` = '%d'", PI[id][Skin], PI[id][SQLID]);
	return 1;
}

CMD:aoruzje(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");
		
	if(PI[playerid][Admin] < 5)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	static id,
		oruzje,
		municija;

	if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	if(sscanf(params, "uii", id, oruzje, municija))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/aoruzje [ID] [Oruzje] [Municija]");

	if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");
	    
	GivePlayerWeapon(id, WEAPON:oruzje, municija);
	
	va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vam je dao oruzje ID %d!", ReturnPlayerName(playerid), oruzje);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Dali ste oruzje ID %d igracu %s!", oruzje, ReturnPlayerName(id));
	return 1;
}

CMD:ubisve(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	    
    if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	foreach(new i: Player) { SetPlayerHealth(i,0); }
	va_SendClientMessageToAll(0x1b71bcFF, "#Kill All: {FFFFFF}Admin %s je ubio sve igrace.", ReturnPlayerName(playerid));
	return 1;
}

CMD:vipfix(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Vip] < 3 && PI[playerid][MTeam] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	if(!IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u vozilu!");

	RepairVehicle(GetPlayerVehicleID(playerid));

	static str[128];
 	format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Vip %s je popravio svoje vozilo!", ReturnPlayerName(playerid));
	AdminMessage(-1, str);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Vozilo Popravljeno!");
	return 1;
}

CMD:fv(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	
	if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti!");

	if(isnull(params))
	{
	    if(!IsPlayerInAnyVehicle(playerid))
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u vozilu!");

		RepairVehicle(GetPlayerVehicleID(playerid));

		static str[128];
	    format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je popravio svoje vozilo!", ReturnPlayerName(playerid));
		AdminMessage(-1, str);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Vozilo Popravljeno!");
	}
	else
	{
	    static id;

		if(sscanf(params, "u", id))
			return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/fv [ID]");
			
        if(id == INVALID_PLAYER_ID)
	    	return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");
	    	
        if(!IsPlayerInAnyVehicle(id))
			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac mora biti u vozilu!");
			
        RepairVehicle(GetPlayerVehicleID(playerid));

		static str[128];
	    format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je popravio vozilo igracu %s!", ReturnPlayerName(playerid), ReturnPlayerName(id));
		AdminMessage(-1, str);

		va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s vam je popravio vozilo.", ReturnPlayerName(playerid));
	}
	return 1;
}

CMD:dajnovac(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	    
	static id,
		novac,
		str[128];

	if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti!");
		
	if(sscanf(params, "ud", id, novac))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/dajnovac [ID/Ime] [Kolicina Novca]");

    if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");
	    
	if(PI[id][Novac] <= 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je u minusu sa novcem, prvo mu podesi novac na 0!");

	PI[id][Novac] += novac;
    GivePlayerMoney(id, novac);
    
	va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s ti je dao $%d novca.", ReturnPlayerName(playerid), novac);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Dali ste %s %d novca.", ReturnPlayerName(id), novac);

	format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je dao %d$ igracu %s.", ReturnPlayerName(playerid), novac, ReturnPlayerName(id));
	AdminMessage(-1, str);

	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[id][Novac], PI[id][SQLID]);
	return 1;
}

CMD:podesinovac(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 6)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	static id,
	    novac,
		str[128];

	if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti!");

	if(sscanf(params, "ud", id, novac))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/podesinovac [ID/Ime] [Novac]");

    if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");

	ResetPlayerMoney(id);
	PI[id][Novac] += novac;
    GivePlayerMoney(id, novac);

	va_SendClientMessage(id, 0xFF0000FF, "[ADMIN]: {FFFFFF}Admin %s ti je podesio novac na $%d.", ReturnPlayerName(playerid), novac);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Podesi ste novac igracu %s na %d$.", ReturnPlayerName(id), novac);

	format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je podesio %d$ igracu %s.", ReturnPlayerName(playerid), novac, ReturnPlayerName(id));
	AdminMessage(-1, str);

	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[id][Novac], PI[id][SQLID]);
	return 1;
}

CMD:spec(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	static id;
	
	if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti!");

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/spec [ID]");
	
	if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");

	TogglePlayerSpectating(playerid, 1);
	PlayerSpectatePlayer(playerid, id);
	SetPlayerInterior(playerid, GetPlayerInterior(id));
	SpecaID[playerid] = id;
	SpecTip[playerid] = 1;
	return 1;
}

CMD:specoff(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate se ulogovati da bi koristili komande!");

	if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	
 	if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti!");

	TogglePlayerSpectating(playerid, 0);
	SetPlayerHealth(playerid, 99.0);
	SpecaID[playerid] = INVALID_PLAYER_ID;
	SpecTip[playerid] = 0;
	return 1;
}

CMD:avozilo(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras se ulogovati da bi koristio ovu komandu!");

    if(PI[playerid][Admin] < 1)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	
	if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti!");

	if(AdminVozilo[playerid] == -1)
	{
	    Dialog_Show(playerid, dialog_avozila, DIALOG_STYLE_LIST, "{1b71bc}Admin Vozila", "{1b71bc}(1). {FFFFFF}Sultan\n\
																						  {1b71bc}(2). {FFFFFF}NRG-500\n\
																						  {1b71bc}(3). {FFFFFF}Huntley", "Odaberi", "Izadji");
	}
	else
	{
		DestroyVehicle(AdminVozilo[playerid]);
		DestroyDynamic3DTextLabel(StaffVeh[AdminVozilo[playerid]]);
		AdminVozilo[playerid] = -1;
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Unistili ste Admin Vozilo.");
	}
	return 1;
}

CMD:a(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras se ulogovati da bi koristio ovu komandu!");

	if(PI[playerid][Admin] < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	static string[300];

	if(isnull(params))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/a [tekst]");

	format(string, sizeof(string), "{FF0000}[A] %s - %s: {FFFFFF}%s", GetStaffRankName(PI[playerid][Admin]), ReturnPlayerName(playerid), params);
	AdminMessage(-1,string);
	return 1;
}

CMD:g(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras se ulogovati da bi koristio ovu komandu!");

	if(PI[playerid][Admin] < 1 && PI[playerid][Vip] < 1 && PI[playerid][MTeam] < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
		
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zatvoreni ne mozete koristiti ovu komandu!");

	static string[300],
		 rank[25];

	if(isnull(params))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/g [tekst]");
		
	switch(PI[playerid][Admin])
	{
	    case 1: rank = "Admin Level 1";
	    case 2: rank = "Admin Level 2";
	    case 3: rank = "Admin Level 3";
	    case 4: rank = "Head Admin";
	    case 5: rank = "Direktor";
	    case 6: rank = "Vlasnik";
	}
	switch(PI[playerid][Vip])
	{
	    case 1: rank = "Vip Level 1";
	    case 2: rank = "Vip Level 2";
	    case 3: rank = "Vip Level 3";
	    case 4: rank = "Vip Level 4";
	}
	switch(PI[playerid][MTeam])
	{
	    case 1: rank = "Marketing Team";
	}
	format(string, sizeof(string), "{1fde79}[G] %s - %s: {FFFFFF}%s", rank, ReturnPlayerName(playerid), params);
	AVipPMessage(-1,string);
	return 1;
}

CMD:n(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras se ulogovati da bi koristio ovu komandu!");
		
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zatvoreni ne mozete koristiti ovu komandu!");

	if(PI[playerid][Level] >= 1 || PI[playerid][Level] <= 4 || PI[playerid][Admin] >= 1)
	{
		static string[300];

		if(isnull(params))
			return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/n [newbie chat]");

		if(PI[playerid][Admin] > 0) format(string, sizeof(string), "{e8ad1e}[N] [ {FF0000}Admin - %s {e8ad1e}]: {FFFFFF}%s", ReturnPlayerName(playerid), params);
		else if(PI[playerid][Level] > 0) format(string, sizeof(string), "{e8ad1e}[N] [ {FFFFFF}Novajlija - %s {e8ad1e}]: {FFFFFF}%s", ReturnPlayerName(playerid), params);

		NewbieMessage(-1,string);
	}
	else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ovu komandu mozete korisiti do levela 4!");
	return 1;
}

CMD:warn(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras se ulogovati da bi koristio ovu komandu!");
		
	if(PI[playerid][Admin] < 2)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	static id,
		str[128],
		razlog[40];

	if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na admin duznosti!");

	if(sscanf(params, "us[40]", id, razlog))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/warn [ID] [Razlog]");

	if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");
	    

	PI[id][Warn] += 1;
	
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Warn` = '%d' WHERE `SQLID` = '%d'", PI[id][Warn], PI[id][SQLID]);

	va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Admin %s vam je dao warn (%d po redu) | Razlog: %s", ReturnPlayerName(playerid), PI[id][Warn], razlog);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Dali ste warn igracu %s | Razlog: %s", ReturnPlayerName(id), razlog);

    format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je dao warn igracu %s | Razlog: %s", ReturnPlayerName(playerid), ReturnPlayerName(id), razlog);
	AdminMessage(-1, str);

	if(PI[id][Warn] >= 5)
	{
		va_SendClientMessageToAll(0xFF0000FF, "#Ban: {FFFFFF}Igrac %s je banovan sa servera zbog ogranicenog broja warnova (5/5)", ReturnPlayerName(id));
		PI[id][Banovan] = 1;
		format(PI[id][BRazlog], 40, "5/5 Warnova");
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Banovan` = '%d', `BRazlog` = '%e' WHERE `SQLID` = '%d'", PI[id][Banovan], PI[id][BRazlog], PI[id][SQLID]);
		PlayerTimer[id] = SetTimerEx("KonektBan", 1000, false, "d", id);
	}
	return 1;
}

CMD:skiniwarn(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras se ulogovati da bi koristio ovu komandu!");

	if(PI[playerid][Admin] < 2)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
		
    if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na admin duznosti!");
		
	static id,
		str[128];

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/skiniwarn [ID/Ime]");

	if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");
	
	va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Admin %s vam je skinuo warn | Warn: %d/5", ReturnPlayerName(playerid), PI[id][Warn]);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Skinuli ste warn igracu %s | Warn: %d/5!", ReturnPlayerName(id), PI[id][Warn]);
	
	format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je skinuo warn igracu %s | Warn: %d/5!", ReturnPlayerName(playerid), ReturnPlayerName(id), PI[id][Warn]);
	AdminMessage(-1, str);

	PI[id][Warn] -= 1;
	
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Warn` = '%d' WHERE `SQLID` = '%d'", PI[id][Warn], PI[id][SQLID]);
	return 1;
}

CMD:promenilozinku(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras se ulogovati da bi koristio ovu komandu!");
		
    if(PI[playerid][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ste zatvoreni ne mozete koristiti ovu komandu!");
		
	static pass[26];

	if(sscanf(params,"s[26]", pass))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/promenilozinku [Nova Lozinka (Min 6 - Max 25 znakova)]");

	if(strlen(pass) < 6)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Lozinka je kratka (Min 6 znakova)!");

	if(strlen(pass) > 25)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Lozinka je previse dugacka (Max 25 znakova)!");

	strmid(PI[playerid][Password], pass, 0, strlen(pass), 64);
	bcrypt_hash(playerid, "OnPasswordHash", pass, BCRYPT_COST);

	mysql_tqueryEx(SQL, "UPDATE `users` SET `Password` = '%e' WHERE `SQLID` = '%d'", pass, PI[playerid][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF,"--------------------------------------------------------------");
	va_SendClientMessage(playerid, 0xFF0000FF,"- {FFFFFF}Vasa nova Lozinka je {1b71bc}%s{FFFFFF} .", pass);
	va_SendClientMessage(playerid, 0xFF0000FF,"- {FFFFFF}Slikajte sebi ovo ( F8 ) !");
	va_SendClientMessage(playerid, 0x1b71bcFF,"--------------------------------------------------------------");
	return 1;
}

CMD:changename(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras se ulogovati da bi koristio ovu komandu!");
		
	if(PI[playerid][Admin] < 6)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
		
    if(AdminDuty[playerid] == 0)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	static id,
		novoime[ MAX_PLAYER_NAME ];

	if(sscanf(params, "us[24]", id, novoime))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/changename [id] [Ime_Prezime]");

	if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");

    new q[128];
	mysql_format(SQL, q, sizeof(q), "SELECT `SQLID` FROM `users` WHERE `Ime` = '%e'", novoime);
	mysql_tquery(SQL, q, "CheckPlayerRename", "iis", playerid, id, novoime);
	return 1;
}

CMD:muzika(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras se ulogovati da bi koristio ovu komandu!");
		
    if(PI[playerid][Admin] < 3)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	static link[500],
		pesma[100];

  	if(sscanf(params, "s[100]s[500]", pesma, link))
  		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/muzika [Ime_muzike-izvodjac] [link]");

	strreplace(pesma, '_', ' ');

	foreach(new i : Player)
 	{
		StopAudioStreamForPlayer(i);
		PlayAudioStreamForPlayer(i, link);
    	va_SendClientMessageToAll(-1, "{04CC29}[MUZIKA]: {FFFFFF}Admin %s je pustio pesmu : {04CC29}%s {FFFFFF}(/stopmusic /replay).", ReturnPlayerName(playerid), pesma);
  	}
    return 1;
}

CMD:stopmusic(const playerid)
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras se ulogovati da bi koristio ovu komandu!");

    StopAudioStreamForPlayer(playerid);
    return 1;
}

CMD:replay(playerid, const params[])
{
	if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras se ulogovati da bi koristio ovu komandu!");
		
	static link[500];

  	StopAudioStreamForPlayer(playerid);
  	PlayAudioStreamForPlayer(playerid, link);
	va_SendClientMessageToAll(-1, "{04CC29}[MUZIKA]: {FFFFFF}Ponovo ste pustili muziku.");
    return 1;
}

CMD:goto(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras se ulogovati da bi koristio ovu komandu!");
		
	static id,
		Float:Poz[3];

	if(PI[playerid][Admin] < 1 && PI[playerid][Vip] < 1 && PI[playerid][MTeam] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	    
	if(sscanf(params, "u", id))
	    return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/goto [ID]");
	    
    if(id == playerid)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete se portati sami do sebe!");

    if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");
	    
    if(IgracTazovan[id] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete se portati do igraca koji je tazovan!");

	if(StavljeneLisice[id] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete se portati do igraca koji ima lisice!");

	if(Zavezan[id] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete se portati do igraca koji je zavezan!");
		
    if(IgracTazovan[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to tazovani ste!");

	if(StavljeneLisice[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to imate lisice!");

	if(Zavezan[playerid] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete to zavezani ste!");
		
    if(PI[id][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je zatvoren ne mozes to!");
	    
    GetPlayerPos(id, Poz[0], Poz[1], Poz[2]);
	    
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		SetVehiclePos(tmpcar, Poz[0], Poz[1]+4, Poz[2]);
	}
	else
	{
		SetPlayerPos(playerid, Poz[0], Poz[1]+2, Poz[2]);
	}
	SetPlayerInterior(playerid, GetPlayerInterior(id));
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(id));

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Teleportovani ste.");
	va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}%s se teleportovao do Vas.", ReturnPlayerName(playerid));
	return 1;
}

CMD:gethere(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras se ulogovati da bi koristio ovu komandu!");
		
	if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	static id,
		Float:Pos[3];

	if(AdminDuty[playerid] == 0) 
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti.");

	if(sscanf(params, "u", id))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/gethere [ID]");

	if(id == INVALID_PLAYER_ID)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresili ste ID!");
	    
    if(id == playerid)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete samog sebe!");
	    
    if(IgracTazovan[id] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete se portati do igraca koji je tazovan!");

	if(StavljeneLisice[id] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete se portati do igraca koji ima lisice!");

	if(Zavezan[id] == 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete se portati do igraca koji je zavezan!");
		
    if(PI[id][Zatvor] != 0)
        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac je zatvoren ne mozes to!");

	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	SetPlayerPos(id, Pos[0] + 2.0, Pos[1], Pos[2]);
		
    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Teleportovao si %s-a do sebe!.", ReturnPlayerName(id));
	va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Admin %s te teleportovao do sebe!", ReturnPlayerName(playerid));
	return 1;
}

CMD:nitro(const playerid)
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras se ulogovati da bi koristio ovu komandu!");
		
	if(PI[playerid][Admin] < 1)
	    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
	    
	if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti!");

	if(!IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u vozilu!");

	AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Nitro je uspesno dodat u vozilo!");
	return 1;
}

CMD:podesivreme(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras se ulogovati da bi koristio ovu komandu!");
		
	if(PI[playerid][Admin] < 2)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");

	static vreme;

	if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti!");
		
	if(sscanf(params, "i", vreme))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/podesivreme [vreme ID (0 - 45)]");

	if(vreme > 45 || vreme < 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan ID!");

	va_SendClientMessageToAll(0x3acc51FF, "#Vreme: {FFFFFF}Admin %s je postavio vreme na %d!", ReturnPlayerName(playerid), vreme);
	SetWeather(vreme);
	return 1;
}

CMD:podesisat(playerid, const params[])
{
    if(Ulogovan[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras se ulogovati da bi koristio ovu komandu!");

	if(PI[playerid][Admin] < 2)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu da koristite ovu komandu!");
		
	static sat;

	if(AdminDuty[playerid] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti na Admin duznosti!");
		
	if(sscanf(params, "i", sat))
		return va_SendClientMessage(playerid, 0x3acc51FF, "#Koristi: {FFFFFF}/podesisat [vreme (0 - 23)]");
		
	va_SendClientMessageToAll(0x3acc51FF, "#Vreme: {FFFFFF}Admin %s je promenio vreme u %d sat/i!", ReturnPlayerName(playerid), sat);
	SetWorldTime(sat);
	return 1;
}

public OnPlayerStateChange(playerid, PLAYER_STATE:newstate, PLAYER_STATE:oldstate)
{
	new v = GetPlayerVehicleID(playerid);
	if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
	{
		if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_ONFOOT)
		{
			for(new p = 0; p < 12; p++)
			PlayerTextDrawHide(playerid, BrzinaTD[playerid][p]);
		}
		else if(newstate == PLAYER_STATE_DRIVER)
		{
		    for(new p = 0; p < 12; p++) PlayerTextDrawShow(playerid, BrzinaTD[playerid][p]);
			PlayerTextDrawColor(playerid, BrzinaTD[playerid][5], PI[playerid][TDBoja]);
			PlayerTextDrawShow(playerid, BrzinaTD[playerid][5]);
			PlayerTextDrawColor(playerid, BrzinaTD[playerid][6], PI[playerid][TDBoja]);
			PlayerTextDrawShow(playerid, BrzinaTD[playerid][6]);
			new string[10];
			format(string, sizeof(string), "%dL", Fuel[GetPlayerVehicleID(playerid)]), PlayerTextDrawSetString(playerid, BrzinaTD[playerid][10], string);
			PlayerTextDrawShow(playerid, BrzinaTD[playerid][10]);
			PlayerTextDrawSetPreviewModel(playerid, BrzinaTD[playerid][11], GetVehicleModel(GetPlayerVehicleID(playerid)));
			PlayerTextDrawShow(playerid, BrzinaTD[playerid][11]);
		}
  	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
	    if(PrivatnoVozilo(v))
	 	{
	 	    if(VoziloInfo[v][vNaPijaci] == 0)
			{
	    		VehUlazi[playerid] = 1;
				va_SendClientMessage(playerid, 0x1b71bcFF, "Vozilo: {FFFFFF}ID: %d - Vlasnik: %s - Script ID: %d", VoziloInfo[v][vID], VoziloInfo[v][vVlasnik], v);
				return 1;
	    	}
	 	    else if(VoziloInfo[v][vNaPijaci] == 1)
			{
				va_SendClientMessage(playerid, 0x1b71bcFF, "Polovno vozilo na prodaju | {FFFFFF}/kupivozilo | /izlaz");
				va_SendClientMessage(playerid, 0x1b71bcFF, "Cena: {FFFFFF}%d$ | {1b71bc}Model: {FFFFFF}%s", VoziloInfo[v][vCena]/2, ImenaVozila[GetVehicleModel(v) - 400]);
				UsaoAutoProdaja[playerid] = v;
				TogglePlayerControllable(playerid, 0);
				return 1;
			}
			else RemovePlayerFromVehicle(playerid);
		}
		if(PolicijaVozila(v))
		{
		    if(PI[playerid][Clan] != 1 && PI[playerid][Admin] <= 0)
		    {
				new Float:poz[3];
				GetPlayerPos(playerid, poz[0], poz[1], poz[2]);
				SetPlayerPos(playerid, poz[0], poz[1], poz[2]+1.5);
                GameTextForPlayer(playerid, "~y~Niste clan organizacije", 2000, 1);
				return 1;
			}
		}
		if(SAJVozila(v))
		{
		    if(PI[playerid][Clan] != 2 && PI[playerid][Admin] <= 0)
		    {
				new Float:poz[3];
				GetPlayerPos(playerid, poz[0], poz[1], poz[2]);
				SetPlayerPos(playerid, poz[0], poz[1], poz[2]+1.5);
                GameTextForPlayer(playerid, "~y~Niste clan organizacije", 2000, 1);
				return 1;
			}
		}
		if(GSFVozila(v))
		{
		    if(PI[playerid][Clan] != 3 && PI[playerid][Admin] <= 0)
		    {
				new Float:poz[3];
				GetPlayerPos(playerid, poz[0], poz[1], poz[2]);
				SetPlayerPos(playerid, poz[0], poz[1], poz[2]+1.5);
                GameTextForPlayer(playerid, "~y~Niste clan organizacije", 2000, 1);
				return 1;
			}
		}
		if(BallasVozila(v))
		{
		    if(PI[playerid][Clan] != 4 && PI[playerid][Admin] <= 0)
		    {
				new Float:poz[3];
				GetPlayerPos(playerid, poz[0], poz[1], poz[2]);
				SetPlayerPos(playerid, poz[0], poz[1], poz[2]+1.5);
                GameTextForPlayer(playerid, "~y~Niste clan organizacije", 2000, 1);
				return 1;
			}
		}
		if(MS13Vozila(v))
		{
		    if(PI[playerid][Clan] != 5 && PI[playerid][Admin] <= 0)
		    {
				new Float:poz[3];
				GetPlayerPos(playerid, poz[0], poz[1], poz[2]);
				SetPlayerPos(playerid, poz[0], poz[1], poz[2]+1.5);
                GameTextForPlayer(playerid, "~y~Niste clan organizacije", 2000, 1);
				return 1;
			}
		}
		if(BDTVozila(v))
		{
		    if(PI[playerid][Clan] != 6 && PI[playerid][Admin] <= 0)
		    {
				new Float:poz[3];
				GetPlayerPos(playerid, poz[0], poz[1], poz[2]);
				SetPlayerPos(playerid, poz[0], poz[1], poz[2]+1.5);
                GameTextForPlayer(playerid, "~y~Niste clan organizacije", 2000, 1);
				return 1;
			}
		}
		if(LCNVozila(v))
		{
		    if(PI[playerid][Clan] != 7 && PI[playerid][Admin] <= 0)
		    {
				new Float:poz[3];
				GetPlayerPos(playerid, poz[0], poz[1], poz[2]);
				SetPlayerPos(playerid, poz[0], poz[1], poz[2]+1.5);
                GameTextForPlayer(playerid, "~y~Niste clan organizacije", 2000, 1);
				return 1;
			}
		}
 	}
 	if(oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_PASSENGER)
 	{
 	    if(Pojas[playerid] == 1)
	 	{
        	Pojas[playerid] = 0;
        }
	}
    if(oldstate == PLAYER_STATE_ONFOOT && newstate == PLAYER_STATE_DRIVER)
	{
	    if(VoziloJeKamion(GetVehicleModel(GetPlayerVehicleID(playerid))))
    	{
        	if(PI[playerid][KamionDozvola] <= 0)
    		{
        		va_SendClientMessage(playerid, 0xFF0000FF, "#Kamion Dozvola: {FFFFFF}Nemate dozvolu za kamion, kupite je u auto skoli!");
    		}
    	}
    	if(VoziloJeAvion(GetVehicleModel(GetPlayerVehicleID(playerid))))
    	{
        	if(PI[playerid][AvionDozvola] <= 0)
    		{
        		va_SendClientMessage(playerid, 0xFF0000FF, "#Avion Dozvola: {FFFFFF}Nemate dozvolu za letjelicu, kupite je u auto skoli!");
        		RemovePlayerFromVehicle(playerid);
    		}
    	}
    	if(VoziloJeBrod(GetVehicleModel(GetPlayerVehicleID(playerid))))
    	{
        	if(PI[playerid][BrodDozvola] <= 0)
        	{
            	va_SendClientMessage(playerid, 0xFF0000FF, "#Brod Dozvola: {FFFFFF}Nemate dozvolu za plovilo, kupite je u auto skoli!");
            	RemovePlayerFromVehicle(playerid);
        	}
    	}
    	if(VoziloJeMotor(GetVehicleModel(GetPlayerVehicleID(playerid))))
    	{
        	if(PI[playerid][MotorDozvola] <= 0)
        	{
            	va_SendClientMessage(playerid, 0xFF0000FF, "#Motor Dozvola: {FFFFFF}Nemate dozvolu za motor, kupite je u auto skoli!");
        	}
    	}
    	if(!VoziloJeMotor(GetVehicleModel(GetPlayerVehicleID(playerid))) && !VoziloJeAvion(GetVehicleModel(GetPlayerVehicleID(playerid))) && !VoziloJeBrod(GetVehicleModel(GetPlayerVehicleID(playerid))) && !VoziloJeKamion(GetVehicleModel(GetPlayerVehicleID(playerid))) && !VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
    	{
        	if(PI[playerid][ADozvola] <= 0)
        	{
            	va_SendClientMessage(playerid, 0xFF0000FF, "#Auto Dozvola: {FFFFFF}Nemate dozvolu za voznju, kupite je u auto skoli!");
        	}
    	}
	    if(VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
    	{
        	new engine, lights, alarm, doors, bonnet, boot, objective;
        	GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
        	SetVehicleParamsEx(GetPlayerVehicleID(playerid), 1, lights, alarm, doors, bonnet, boot, objective);
    	}
    	if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
    	{
	    	new engine, lights, alarm, doors, bonnet, boot, objective;
		    GetVehicleParamsEx(v, engine, lights, alarm, doors, bonnet, boot, objective);
	    	if(engine == -1 && !VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
			{
				SetVehicleParamsEx(v, 0, 0, alarm, doors, bonnet, boot, objective);
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
        if(TipVozila[playerid] == 1 && RentVeh[playerid] != GetPlayerVehicleID(playerid))
		{
			RemovePlayerFromVehicle(playerid);
			va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ovo nije vase Rent Vozilo.");
		}
	}
	return 1;
}

public OnPlayerEditDynamicObject(playerid, STREAMER_TAG_OBJECT:objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	switch(response)
	{
		case EDIT_RESPONSE_FINAL:
		{
		    new id = eData[playerid], Float:angle, radar = Radar_Promjena[playerid];
			GetPlayerFacingAngle(playerid, angle);
			if(id != -1)
			{
				AtmInfo[id][aX] = x; AtmInfo[id][aY] = y; AtmInfo[id][aZ] = z;
				AtmInfo[id][aAngle] = angle; DestroyDynamicObject(AtmInfo[id][aObjekat]);
				KreirajAtm(id);
	
				mysql_tqueryEx(SQL, "UPDATE `atms` SET `Poz_X` = '%f',`Poz_Y` = '%f',`Poz_Z` = '%f',`Poz_Angle` = '%f' WHERE `SQLID` = '%d'",
					AtmInfo[id][aX], AtmInfo[id][aY], AtmInfo[id][aZ], AtmInfo[id][aAngle], AtmInfo[id][SQLID]);
	
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Bankomat ID: %d je uspesno editovan!", id);
				eData[playerid] = -1;
				return 1;
			}
			if(radar != -1)
			{
				RadarInfo[radar][raPozX] = x;
				RadarInfo[radar][raPozY] = y;
				RadarInfo[radar][raPozZ] = z;
				RadarInfo[radar][raRot_X] = rx;
				RadarInfo[radar][raRot_Y] = ry;
				RadarInfo[radar][raRot_Z] = rz;
				DestroyDynamicObject(RadarInfo[radar][raObjekat]);
				KreirajRadar(radar, true); 
	
				mysql_tqueryEx(SQL, "UPDATE `radars` SET `PozX` = '%f',`PozY` = '%f',`PozZ` = '%f',`RotX` = '%f',`RotY` = '%f', `RotZ` = '%f' WHERE `SQLID` = '%d'",
					RadarInfo[radar][raPozX], RadarInfo[radar][raPozY], RadarInfo[radar][raPozZ], RadarInfo[radar][raRot_X], RadarInfo[radar][raRot_Y], RadarInfo[radar][raRot_Z], RadarInfo[radar][SQLID]);
				
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Radar ID: %d je uspesno sacuvan!", radar);
				Radar_Promjena[playerid] = -1;
				return 1;
			}
			else if(RentEdit[playerid] > 0)
			{
				new rentid = RentEdit[playerid];
	            RentInfo[rentid][ObjekatX] = x;
	            RentInfo[rentid][ObjekatY] = y;
	            RentInfo[rentid][ObjekatZ] = z;
	            RentInfo[rentid][ObjekatR] = rz;
	            
	            mysql_tqueryEx(SQL, "UPDATE `rent` SET `ObjekatX` = '%f', `ObjekatY` = '%f', `ObjekatZ` = '%f', `ObjekatR` = '%f' WHERE `SQLID` = '%d'",
					RentInfo[rentid][ObjekatX], RentInfo[rentid][ObjekatY], RentInfo[rentid][ObjekatZ], RentInfo[rentid][ObjekatR], RentInfo[rentid][SQLID]);
					
	            RentEdit[playerid] = -1;
	            UnistiRent(rentid);
	            KreirajRent(rentid);
	            va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Rent objekat ID: %d je uspesno editovan!", rentid);
	            return 1;
			}
		}
	}
	return 1;
}

public OnPlayerDamage(&playerid, &Float:amount, &issuerid, &WEAPON:weapon, &bodypart)
{
	if(playerid != INVALID_PLAYER_ID && issuerid != INVALID_PLAYER_ID)
	{
	    if(ClanDB(issuerid))
		{
			if(Tazer[issuerid] == 1 && GetPlayerWeapon(issuerid) == WEAPON_SILENCED && PolicijaDuznost[issuerid] == 1 && !IsPlayerInAnyVehicle(issuerid) && !IsPlayerInAnyVehicle(playerid))
			{
				new string[156], Float: Poz[3];
				GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
				if(IsPlayerInRangeOfPoint(issuerid, 15.0, Poz[0], Poz[1], Poz[2]))
				{
					if(Trazeni_Level[playerid] == 0)
						return va_SendClientMessage(issuerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nema Wanted Level!");

					if(ClanDB(playerid))
						return va_SendClientMessage(issuerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozes tazovati policajca!");

					if(PI[issuerid][Rank] == 0)
						return va_SendClientMessage(issuerid, 0xFF0000FF, "#Greska: {FFFFFF}Suspendovan si!");

					if(AdminDuty[playerid] == 1)
						return va_SendClientMessage(issuerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemozes tazovati admina na duznosti!");
						
					format(string, sizeof(string), "{C2A2DA}* %s puca tazerom na %s-a i pogadja ga.", ReturnPlayerName(issuerid), ReturnPlayerName(playerid));
					ProxMessage(issuerid, string, 20.0);

					TogglePlayerControllable(playerid, 0);
					IgracTazovan[playerid] = 1;

					TazerTimer[playerid] = SetTimerEx("TazovanTajmer", 15000, false, "i", playerid);
					OnePlayAnim(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
				}
			}
		}
		if(PolicijaDuznost[playerid] == 1)
		{
			if(!ClanDB(issuerid) && AdminDuty[issuerid] != 1 && Trazeni_Level[issuerid] < 6)
			{
				Trazeni_Level[issuerid] = 6;
				PostaviWanted(issuerid, "Napad na sluzbeno lice", ReturnPlayerName(playerid));
			}
		}
		if(IgracTazovan[playerid] == 1 || StavljeneLisice[playerid] == 1 || Zavezan[playerid] == 1) return 1;
	}
	return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    if(clickedid == Text:INVALID_TEXT_DRAW)
    {
        if(sastavljatiket[playerid] == true)
        {
            BiltenTD(playerid, false);
        }
	}
	return 1;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
    if(sastavljatiket[playerid] == true)
    {
        if(playertextid == biltentd[playerid][213])//strelica lijevo
        {
            if(biltenstr[playerid] < 15)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Na prvoj strani ste!");

			new query[256];
            format(query, sizeof(query), "SELECT * FROM `matchs` WHERE Datum >= NOW() AND `Rezultat` = '0' LIMIT %d,15", biltenstr[playerid]-15);
            mysql_tquery(SQL, query, "CheckTiket2", "ii", playerid, 1);
        }
        else if(playertextid == biltentd[playerid][214])//strelica desno
        {
            new query[256];
            format(query, sizeof(query), "SELECT * FROM `matchs` WHERE Datum >= NOW() AND `Rezultat` = '0' LIMIT %d,15", biltenstr[playerid]+15);
            mysql_tquery(SQL, query, "CheckTiket2", "ii", playerid, 2);
        }
        else if(playertextid >= biltentd[playerid][33] && playertextid <= biltentd[playerid][47])//biranje utakmica
        {
            if(playertextid == biltentd[playerid][33]) izabraotekmu[playerid] = 0;
            else if(playertextid == biltentd[playerid][34]) izabraotekmu[playerid] = 1;
            else if(playertextid == biltentd[playerid][35]) izabraotekmu[playerid] = 2;
            else if(playertextid == biltentd[playerid][36]) izabraotekmu[playerid] = 3;
            else if(playertextid == biltentd[playerid][37]) izabraotekmu[playerid] = 4;
            else if(playertextid == biltentd[playerid][38]) izabraotekmu[playerid] = 5;
            else if(playertextid == biltentd[playerid][39]) izabraotekmu[playerid] = 6;
            else if(playertextid == biltentd[playerid][40]) izabraotekmu[playerid] = 7;
            else if(playertextid == biltentd[playerid][41]) izabraotekmu[playerid] = 8;
            else if(playertextid == biltentd[playerid][42]) izabraotekmu[playerid] = 9;
            else if(playertextid == biltentd[playerid][43]) izabraotekmu[playerid] = 10;
            else if(playertextid == biltentd[playerid][44]) izabraotekmu[playerid] = 11;
            else if(playertextid == biltentd[playerid][45]) izabraotekmu[playerid] = 12;
            else if(playertextid == biltentd[playerid][46]) izabraotekmu[playerid] = 13;
            else if(playertextid == biltentd[playerid][47]) izabraotekmu[playerid] = 14;
            for(new i = 0; i < 15; i++)
            {
                if(TiketInfo[playerid][i][ParID] == UtakmicaInfo[playerid][izabraotekmu[playerid]][ParID])
                {
                    va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Odigrali ste vec tu utakmicu!");
                    return 1;
                }
            }

            Dialog_Show(playerid, dialog_satiket, DIALOG_STYLE_TABLIST_HEADERS, "Odaberite na sta se kladite", "{FFFFFF}Vrsta kladjenja\t{FFFFFF}Kvota\n\
												                                                                {1b71bc}1\t{FFFFFF}%0.2f\n\
																												{1b71bc}X\t{FFFFFF}%0.2f\n\
																												{1b71bc}2\t{FFFFFF}%0.2f\n\
																												{1b71bc}3+\t{FFFFFF}%0.2f\n\
																												{1b71bc}4+\t{FFFFFF}%0.2f\n\
																												{1b71bc}GG&3+\t{FFFFFF}%0.2f", "Izaberi", "Odustani",
																												UtakmicaInfo[playerid][izabraotekmu[playerid]][Kvota][0],
																												UtakmicaInfo[playerid][izabraotekmu[playerid]][Kvota][1],
																												UtakmicaInfo[playerid][izabraotekmu[playerid]][Kvota][2],
																												UtakmicaInfo[playerid][izabraotekmu[playerid]][Kvota][3],
																												UtakmicaInfo[playerid][izabraotekmu[playerid]][Kvota][4],
																												UtakmicaInfo[playerid][izabraotekmu[playerid]][Kvota][5]);
        }
        else if(playertextid >= biltentd[playerid][178] && playertextid <= biltentd[playerid][192])//brisanje utakmica
        {
            new slot;
            if(playertextid == biltentd[playerid][178]) slot = 0;
            else if(playertextid == biltentd[playerid][179]) slot = 1;
            else if(playertextid == biltentd[playerid][180]) slot = 2;
            else if(playertextid == biltentd[playerid][181]) slot = 3;
            else if(playertextid == biltentd[playerid][182]) slot = 4;
            else if(playertextid == biltentd[playerid][183]) slot = 5;
            else if(playertextid == biltentd[playerid][184]) slot = 6;
            else if(playertextid == biltentd[playerid][185]) slot = 7;
            else if(playertextid == biltentd[playerid][186]) slot = 8;
            else if(playertextid == biltentd[playerid][187]) slot = 9;
            else if(playertextid == biltentd[playerid][188]) slot = 10;
            else if(playertextid == biltentd[playerid][189]) slot = 11;
            else if(playertextid == biltentd[playerid][190]) slot = 12;
            else if(playertextid == biltentd[playerid][191]) slot = 13;
            else if(playertextid == biltentd[playerid][192]) slot = 14;
            if(TiketInfo[playerid][slot][ParID] != 0)
            {
                TiketInfo[playerid][slot][ParID] = 0;
                TiketInfo[playerid][slot][Kvota] = 0;
                TiketInfo[playerid][slot][Odigrao] = 0;
                format(TiketInfo[playerid][slot][Par], 100, " ");
                PlayerTextDrawSetString(playerid, biltentiket[playerid][slot+1], "//");
            }

            ///ukupna kvota
            new Float:ukupnakvota = 1.0;
            for (new i = 0; i < 15; ++i)
            {
                if(TiketInfo[playerid][i][ParID] > 0)
                {
                    ukupnakvota = TiketInfo[playerid][i][Kvota]*ukupnakvota;
                }
            }
            new kvotastr[50]; format(kvotastr, sizeof(kvotastr),"Ukupna_kvota:_%0.2f",ukupnakvota);
            PlayerTextDrawSetString(playerid, biltentd[playerid][195], kvotastr);
        }
        else if(playertextid == biltentd[playerid][221])//izlaz
        {
            BiltenTD(playerid,false);
        }
        else if(playertextid == biltentd[playerid][194])//uplacivanje tiketa
        {
            new bool:odigrao = false;
            for(new i = 0; i < 15; ++i)
            {
                if(TiketInfo[playerid][i][ParID] > 0)
                {
                    odigrao = true;
                    break;
                }
            }
            if(odigrao == false) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste nista odigrali!");
            Dialog_Show(playerid, dialog_tend, DIALOG_STYLE_INPUT, "Sastavljanje tiketa","Unesite koliko ulazete. (1000$-50000$)","OK","");
        }
    }
    return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	new CID = GetPlayerVehicleID(playerid);
    if(Lociranje[playerid] == 1) return DisablePlayerCheckpoint(playerid), Lociranje[playerid] = 0, GameTextForPlayer(playerid, "~y~stigli ste na odrediste", 5000, 3);
    
    // - > Kosac Trave
   	if(PI[playerid][Posao] == POSAO_KOSACTRAVE && KosacTraveCP[playerid] > 0 && GetVehicleModel(GetPlayerVehicleID(playerid)) == 572 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
        if(KosacTraveCP[playerid] == 1)
        {
			KosacTraveCP[playerid] ++;
			SetPlayerCheckpoint(playerid, 247.6841,-1401.8956,13.6222, 5);
        }
        else if(KosacTraveCP[playerid] == 2)
        {
			KosacTraveCP[playerid] ++;
			SetPlayerCheckpoint(playerid, 262.0196,-1401.6018,13.7335, 5);
        }
        else if(KosacTraveCP[playerid] == 3)
        {
			KosacTraveCP[playerid] ++;
			SetPlayerCheckpoint(playerid, 270.6600,-1393.9115,13.8237, 5);
        }
        else if(KosacTraveCP[playerid] == 4)
        {
			KosacTraveCP[playerid] ++;
			SetPlayerCheckpoint(playerid, 273.6242,-1382.5839,13.8777, 5);
        }
        else if(KosacTraveCP[playerid] == 5)
        {
			KosacTraveCP[playerid] ++;
			SetPlayerCheckpoint(playerid, 281.5255,-1393.2152,13.8920, 5);
        }
        else if(KosacTraveCP[playerid] == 6)
        {
			KosacTraveCP[playerid] ++;
			SetPlayerCheckpoint(playerid, 258.1169,-1393.0603,13.7380, 5);
        }
        else if(KosacTraveCP[playerid] == 7)
        {
			KosacTraveCP[playerid] ++;
			SetPlayerCheckpoint(playerid, 250.6897,-1405.1476,13.6377, 5);
        }
        else if(KosacTraveCP[playerid] == 8)
        {
			KosacTraveCP[playerid] ++;
			SetPlayerCheckpoint(playerid, 236.1020,-1404.9696,13.5127, 5);
        }
        else if(KosacTraveCP[playerid] == 9)
        {
			DisablePlayerCheckpoint(playerid);
			KosacTraveCP[playerid] = 0;
			DestroyDynamic3DTextLabel(Job_Vehicle[playerid][jveh_Veh3D]);
			Job_Vehicle[playerid][jveh_Created] = false;
			DestroyVehicle(Job_Vehicle[playerid][jveh_ID]);
			Kosac_Vozilo[playerid] = -1;
			new plata = 0;
			plata = (random(200)+4700);
			
			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Posao zavrsen", "{FFFFFF}Cestitamo, Uspesno ste zavrsili posao!\n\n\
																						      {FFFFFF}Plata: {1b71bc}%d$\n\n\
  																						      {FFFFFF}Da ponovo zapocnete posao koristite {1b71bc}/startjob", "OK", "", plata);
			PI[playerid][Novac] += plata;
			GivePlayerMoney(playerid, plata);
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
			
        }
	}
	// - > Uber
	if(PI[playerid][Posao] == POSAO_UBER && PosaoUberCP[playerid] > 0 && GetVehicleModel(GetPlayerVehicleID(playerid)) == 420 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(PosaoUberCP[playerid] == 1)
	    {
			GameTextForPlayer(playerid, "~y~Sacekajte da putnik ude u uber...", 4500, 1);
   			TogglePlayerControllable(playerid, 0);
		    SetTimerEx("UberTimer", 5000, false, "ii", playerid, 1);
      		DisablePlayerCheckpoint(playerid);
		}
		else if(PosaoUberCP[playerid] == 2)
		{
			GameTextForPlayer(playerid, "~y~Putnik izlazi iz ubera...", 4500, 1);
  			TogglePlayerControllable( playerid, 0);
	    	SetTimerEx("UberTimer", 5000, false, "ii", playerid, 2);
     		DisablePlayerCheckpoint( playerid );
		}
		else if(PosaoUberCP[playerid] == 3)
		{
		    DisablePlayerCheckpoint(playerid);
			KosacTraveCP[playerid] = 0;
			DestroyDynamic3DTextLabel(Job_Vehicle[playerid][jveh_Veh3D]);
			Job_Vehicle[playerid][jveh_Created] = false;
			DestroyVehicle(Job_Vehicle[playerid][jveh_ID]);
			Uber_Vozilo[playerid] = -1;
			new plata = 0;
			plata = (random(100)+6000);

			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Posao zavrsen", "{FFFFFF}Cestitamo, Uspesno ste zavrsili posao!\n\n\
																						      {FFFFFF}Plata: {1b71bc}%d$\n\n\
  																						      {FFFFFF}Da ponovo zapocnete posao koristite {1b71bc}/startjob", "OK", "", plata);
			PI[playerid][Novac] += plata;
			GivePlayerMoney(playerid, plata);
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
		}
	}
	// - > Pilot LS - SF
	if(PI[playerid][Posao] == POSAO_PILOT && PilotCP[playerid] > 0 && GetVehicleModel(GetPlayerVehicleID(playerid)) == 519 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(PilotCP[playerid] == 1)
		{
			if(IsPlayerInRangeOfPoint(playerid, 5.0, 1847.4221,-2414.0798,13.5547))
			{
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~y~sacekajte...", 5000, 3);
				SetTimerEx("UtovarTimer", 5000, false, "i", playerid);
				SetPlayerCheckpoint(playerid, -1506.8629,-14.1312,14.1409, 5.0);
				PilotCP[playerid] = 2;
			}
		}
		if(PilotCP[playerid] == 2)
		{
			if(IsPlayerInRangeOfPoint(playerid, 5.0, -1506.8629,-14.1312,14.1409))
			{
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~y~sacekajte...", 5000, 3);
				SetTimerEx("UtovarTimer", 5000, false, "i", playerid);
				SetPlayerCheckpoint(playerid, 1879.6438,-2493.6636,13.5547, 5.0);
				PilotCP[playerid] = 3;
			}
		}
		if(PilotCP[playerid] == 3)
		{
			if(IsPlayerInRangeOfPoint(playerid, 5.0, 1879.6438,-2493.6636,13.5547))
			{
			    new plata = 0;
				plata = (random(1000)+7000);

				Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Posao zavrsen", "{FFFFFF}Cestitamo, Uspesno ste zavrsili posao!\n\n\
																						      {FFFFFF}Plata: {1b71bc}%d$\n\n\
  																						      {FFFFFF}Da ponovo zapocnete posao koristite {1b71bc}/startjob", "OK", "", plata);
				
				DisablePlayerCheckpoint(playerid);
				PI[playerid][Novac] += plata;
				GivePlayerMoney(playerid, plata);
				PilotCP[playerid] = 0;
				DestroyDynamic3DTextLabel(Job_Vehicle[playerid][jveh_Veh3D]);
				Job_Vehicle[playerid][jveh_Created] = false;
				DestroyVehicle(Job_Vehicle[playerid][jveh_ID]);
				Pilot_Vozilo[playerid] = -1;
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
			}
		}
	}
	// - > Pilot LS - LV
	if(PI[playerid][Posao] == POSAO_PILOT && PilotCP[playerid] > 0 && GetVehicleModel(GetPlayerVehicleID(playerid)) == 519 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(PilotCP[playerid] == 4)
		{
			if(IsPlayerInRangeOfPoint(playerid, 5.0, 1847.4221,-2414.0798,13.5547))
			{
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~y~sacekajte...", 5000, 3);
				SetTimerEx("UtovarTimer", 5000, false, "i", playerid);
				SetPlayerCheckpoint(playerid, 1477.5233,1395.1841,10.8203, 5.0);
				PilotCP[playerid] = 5;
			}
		}
		if(PilotCP[playerid] == 5)
		{
			if(IsPlayerInRangeOfPoint(playerid, 5.0, 1477.5233,1395.1841,10.8203))
			{
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~y~sacekajte...", 5000, 3);
				SetTimerEx("UtovarTimer", 5000, false, "i", playerid);
				SetPlayerCheckpoint(playerid, 1879.6438,-2493.6636,13.5547, 5.0);
				PilotCP[playerid] = 6;
			}
		}
		if(PilotCP[playerid] == 6)
		{
			if(IsPlayerInRangeOfPoint(playerid, 5.0, 1879.6438,-2493.6636,13.5547))
			{
			    new plata = 0;
				plata = (random(1000)+7000);

				Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Posao zavrsen", "{FFFFFF}Cestitamo, Uspesno ste zavrsili posao!\n\n\
																						      {FFFFFF}Plata: {1b71bc}%d$\n\n\
  																						      {FFFFFF}Da ponovo zapocnete posao koristite {1b71bc}/startjob", "OK", "", plata);

				DisablePlayerCheckpoint(playerid);
				PI[playerid][Novac] += plata;
				GivePlayerMoney(playerid, plata);
				PilotCP[playerid] = 0;
				DestroyDynamic3DTextLabel(Job_Vehicle[playerid][jveh_Veh3D]);
				Job_Vehicle[playerid][jveh_Created] = false;
				DestroyVehicle(Job_Vehicle[playerid][jveh_ID]);
				Pilot_Vozilo[playerid] = -1;
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
			}
		}
	}
	// - > Pilot LS - LV - SF
	if(PI[playerid][Posao] == POSAO_PILOT && PilotCP[playerid] > 0 && GetVehicleModel(GetPlayerVehicleID(playerid)) == 519 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(PilotCP[playerid] == 7)
		{
			if(IsPlayerInRangeOfPoint(playerid, 5.0, 1847.4221,-2414.0798,13.5547))
			{
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~y~sacekajte...", 5000, 3);
				SetTimerEx("UtovarTimer", 5000, false, "i", playerid);
				SetPlayerCheckpoint(playerid, 1477.5233,1395.1841,10.8203, 5.0);
				PilotCP[playerid] = 8;
			}
		}
		if(PilotCP[playerid] == 8)
		{
			if(IsPlayerInRangeOfPoint(playerid, 5.0, 1477.5233,1395.1841,10.8203))
			{
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~y~sacekajte...", 5000, 3);
				SetTimerEx("UtovarTimer", 5000, false, "i", playerid);
				SetPlayerCheckpoint(playerid, -1506.8629,-14.1312,14.1409, 5.0);
				PilotCP[playerid] = 9;
			}
		}
		if(PilotCP[playerid] == 9)
		{
			if(IsPlayerInRangeOfPoint(playerid, 5.0, -1506.8629,-14.1312,14.1409))
			{
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~y~sacekajte...", 5000, 3);
				SetTimerEx("UtovarTimer", 5000, false, "i", playerid);
				SetPlayerCheckpoint(playerid, 1879.6438,-2493.6636,13.5547, 5.0);
				PilotCP[playerid] = 10;
			}
		}
		if(PilotCP[playerid] == 10)
		{
			if(IsPlayerInRangeOfPoint(playerid, 5.0, 1879.6438,-2493.6636,13.5547))
			{
			    new plata = 0;
				plata = (random(1000)+9000);

				Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Posao zavrsen", "{FFFFFF}Cestitamo, Uspesno ste zavrsili posao!\n\n\
																						      {FFFFFF}Plata: {1b71bc}%d$\n\n\
  																						      {FFFFFF}Da ponovo zapocnete posao koristite {1b71bc}/startjob", "OK", "", plata);

				DisablePlayerCheckpoint(playerid);
				PI[playerid][Novac] += plata;
				GivePlayerMoney(playerid, plata);
				PilotCP[playerid] = 0;
				DestroyDynamic3DTextLabel(Job_Vehicle[playerid][jveh_Veh3D]);
				Job_Vehicle[playerid][jveh_Created] = false;
				DestroyVehicle(Job_Vehicle[playerid][jveh_ID]);
				Pilot_Vozilo[playerid] = -1;
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
			}
		}
	}
	// - > Masinovodja
	if(PI[playerid][Posao] == POSAO_MASINOVODJA && Masinovodja_CP[playerid] > 0 && GetVehicleModel(GetPlayerVehicleID(playerid)) == 538 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(GetSpeed(playerid) < 21)
	    {
	        if(Masinovodja_CP[playerid] == 1)
	        {
	            if(IsPlayerInRangeOfPoint(playerid, 5.0, 815.2284,-1366.7013,-1.6706))
	            {
		            TogglePlayerControllable(playerid, 0);
					GameTextForPlayer(playerid, "~y~sacekajte...", 5000, 3);
					SetTimerEx("UtovarTimer", 5000, false, "i", playerid);
					SetPlayerCheckpoint(playerid, -1943.9296,141.2939,27.0006, 5.0);
					Masinovodja_CP[playerid] = 2;
				}
			}
			if(Masinovodja_CP[playerid] == 2)
	        {
	            if(IsPlayerInRangeOfPoint(playerid, 5.0, -1943.9296,141.2939,27.0006))
	            {
		            TogglePlayerControllable(playerid, 0);
					GameTextForPlayer(playerid, "~y~sacekajte...", 5000, 3);
					SetTimerEx("UtovarTimer", 5000, false, "i", playerid);
					SetPlayerCheckpoint(playerid, 1440.2815,2632.3748,10.8203, 5.0);
					Masinovodja_CP[playerid] = 3;
				}
			}
			if(Masinovodja_CP[playerid] == 3)
	        {
	            if(IsPlayerInRangeOfPoint(playerid, 5.0, 1440.2815,2632.3748,10.8203))
	            {
		            TogglePlayerControllable(playerid, 0);
					GameTextForPlayer(playerid, "~y~sacekajte...", 5000, 3);
					SetTimerEx("UtovarTimer", 5000, false, "i", playerid);
					SetPlayerCheckpoint(playerid, 2864.9333,1287.2427,10.8203, 5.0);
					Masinovodja_CP[playerid] = 4;
				}
			}
			if(Masinovodja_CP[playerid] == 4)
	        {
	            if(IsPlayerInRangeOfPoint(playerid, 5.0, 2864.9333,1287.2427,10.8203))
	            {
		            TogglePlayerControllable(playerid, 0);
					GameTextForPlayer(playerid, "~y~sacekajte...", 5000, 3);
					SetTimerEx("UtovarTimer", 5000, false, "i", playerid);
					SetPlayerCheckpoint(playerid, 1740.3632,-1954.2498,13.5469, 5.0);
					Masinovodja_CP[playerid] = 5;
				}
			}
			if(Masinovodja_CP[playerid] == 5)
	        {
	            if(IsPlayerInRangeOfPoint(playerid, 5.0, 1740.3632,-1954.2498,13.5469))
	            {
             		new plata = 0;
					plata = (random(1000)+12000);

					Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Posao zavrsen", "{FFFFFF}Cestitamo, Uspesno ste zavrsili posao!\n\n\
																							      {FFFFFF}Plata: {1b71bc}%d$\n\n\
	  																						      {FFFFFF}Da ponovo zapocnete posao koristite {1b71bc}/startjob", "OK", "", plata);

					DisablePlayerCheckpoint(playerid);
					PI[playerid][Novac] += plata;
					GivePlayerMoney(playerid, plata);
					Masinovodja_CP[playerid] = 0;
					DestroyDynamic3DTextLabel(Job_Vehicle[playerid][jveh_Veh3D]);
					Job_Vehicle[playerid][jveh_Created] = false;
					DestroyVehicle(Job_Vehicle[playerid][jveh_ID]);
					RemovePlayerFromVehicle(playerid);
					SetCameraBehindPlayer(playerid);
					Masinovodja_Vozilo[playerid] = -1;
					mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
				}
			}
		}
	}
	// - > Polaganje Auto Skola
	if(Polaganje_CP[playerid] > 0 && GetVehicleModel(GetPlayerVehicleID(playerid)) == 410 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(Polaganje_CP[playerid] == 1)
	    {
	     	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1968.4052,-1749.6682,13.3828))
	        {
				Polaganje_CP[playerid] = 2;
				SetPlayerCheckpoint(playerid, 1944.2260,-1725.6399,13.3906, 2.5);
			}
		}
		if(Polaganje_CP[playerid] == 2)
	    {
	     	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1944.2260,-1725.6399,13.3906))
	        {
				Polaganje_CP[playerid] = 3;
				SetPlayerCheckpoint(playerid, 1944.1936,-1642.7313,13.3828, 2.5);
			}
		}
		if(Polaganje_CP[playerid] == 3)
	    {
	     	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1944.1936,-1642.7313,13.3828))
	        {
				Polaganje_CP[playerid] = 4;
				SetPlayerCheckpoint(playerid, 1915.6156,-1609.9122,13.3828, 2.5);
			}
		}
		if(Polaganje_CP[playerid] == 4)
	    {
	     	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1915.6156,-1609.9122,13.3828))
	        {
				Polaganje_CP[playerid] = 5;
				SetPlayerCheckpoint(playerid, 1871.5898,-1609.4229,13.3828, 2.5);
			}
		}
		if(Polaganje_CP[playerid] == 5)
	    {
	     	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1871.5898,-1609.4229,13.3828))
	        {
				Polaganje_CP[playerid] = 6;
				SetPlayerCheckpoint(playerid, 1808.4438,-1609.2108,13.3516, 2.5);
			}
		}
		if(Polaganje_CP[playerid] == 6)
	    {
	     	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1808.4438,-1609.2108,13.3516))
	        {
				Polaganje_CP[playerid] = 7;
				SetPlayerCheckpoint(playerid, 1772.5076,-1604.0590,13.3748, 2.5);
			}
		}
		if(Polaganje_CP[playerid] == 7)
	    {
	     	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1772.5076,-1604.0590,13.3748))
	        {
				Polaganje_CP[playerid] = 8;
				SetPlayerCheckpoint(playerid, 1747.1063,-1628.5479,13.3828, 2.5);
			}
		}
		if(Polaganje_CP[playerid] == 8)
	    {
	     	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1747.1063,-1628.5479,13.3828))
	        {
				Polaganje_CP[playerid] = 9;
				SetPlayerCheckpoint(playerid, 1747.2268,-1685.5609,13.3828, 2.5);
			}
		}
		if(Polaganje_CP[playerid] == 9)
	    {
	     	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1747.2268,-1685.5609,13.3828))
	        {
				Polaganje_CP[playerid] = 10;
				SetPlayerCheckpoint(playerid, 1747.0182,-1721.9601,13.3828, 2.5);
			}
		}
		if(Polaganje_CP[playerid] == 10)
	    {
	     	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1747.0182,-1721.9601,13.3828))
	        {
				Polaganje_CP[playerid] = 11;
				SetPlayerCheckpoint(playerid, 1783.5267,-1734.6978,13.3828, 2.5);
			}
		}
		if(Polaganje_CP[playerid] == 11)
	    {
	     	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1783.5267,-1734.6978,13.3828))
	        {
				Polaganje_CP[playerid] = 12;
				SetPlayerCheckpoint(playerid, 1818.9843,-1745.4341,13.3828, 2.5);
			}
		}
		if(Polaganje_CP[playerid] == 12)
	    {
	     	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1818.9843,-1745.4341,13.3828))
	        {
				Polaganje_CP[playerid] = 13;
				SetPlayerCheckpoint(playerid, 1845.0300,-1755.2482,13.3828, 2.5);
			}
		}
		if(Polaganje_CP[playerid] == 13)
	    {
	     	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1845.0300,-1755.2482,13.3828))
	        {
				Polaganje_CP[playerid] = 14;
				SetPlayerCheckpoint(playerid, 1894.5253,-1754.8900,13.3828, 2.5);
			}
		}
		if(Polaganje_CP[playerid] == 14)
	    {
	     	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1894.5253,-1754.8900,13.3828))
	        {
				Polaganje_CP[playerid] = 15;
				SetPlayerCheckpoint(playerid, 1949.6140,-1754.4628,13.3828, 2.5);
			}
		}
		if(Polaganje_CP[playerid] == 15)
	    {
	     	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1949.6140,-1754.4628,13.3828))
	        {
				Polaganje_CP[playerid] = 16;
				SetPlayerCheckpoint(playerid, 1980.6301,-1754.4337,13.3828, 2.5);
			}
		}
		if(Polaganje_CP[playerid] == 16)
	    {
	     	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1980.6301,-1754.4337,13.3828))
	        {
				Polaganje_CP[playerid] = 17;
				SetPlayerCheckpoint(playerid, 1968.4052,-1749.6682,13.3828, 2.5);
			}
		}
		if(Polaganje_CP[playerid] == 17)
	    {
	     	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1980.6301,-1754.4337,13.3828))
	        {
				Polaganje_CP[playerid] = 0;
				DisablePlayerCheckpoint(playerid); 
				new Float:HP;
				GetVehicleHealth(GetPlayerVehicleID(playerid), HP);
				if(Polaganje_Greske[playerid] >= 3) return va_SendClientMessage(playerid, 0x1b71bcFF, "#AS: {FFFFFF}Napravili ste %d od 3 gresaka, pali ste na polaganju!", Polaganje_Greske[playerid]); 	
		    	if(HP < 990.0) return va_SendClientMessage(playerid, 0x1b71bcFF, "#AS: {FFFFFF}Vase vozilo je previse osteceno pa ste pali na polaganju!"); 
				va_SendClientMessage(playerid, 0x1b71bcFF, "#AS: {FFFFFF}Napravili ste %d od 3 gresaka!", Polaganje_Greske[playerid]);
				va_SendClientMessage(playerid, 0x1b71bcFF, "#AS: {FFFFFF}Cestitamo, polozili ste vozacki ispit i dobili ste dozvolu!");
				DestroyDynamic3DTextLabel(Job_Vehicle[playerid][jveh_Veh3D]);
				Job_Vehicle[playerid][jveh_Created] = false;
				DestroyVehicle(Job_Vehicle[playerid][jveh_ID]);
				Polaganje_Vozilo[playerid] = -1; 
				PI[playerid][ADozvola] = 1;
				CheckQuestDone(playerid, 2);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `ADozvola` = '%d', WHERE `SQLID` = '%d'", PI[playerid][ADozvola], PI[playerid][SQLID]);
			}
		}
	}
	// - > Sverc (BDT)
	if(SvercMaterijala[playerid] == 1 && CID == vBDT[5] || CID == vBDT[6] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, -272.1140,-2155.1370,28.6874))
		{
			TogglePlayerControllable(playerid, 0);
			PlayerTimer[playerid] = SetTimerEx("ZalediOdledi", 4000, false, "i", playerid);
			GameTextForPlayer(playerid, "~y~utovar materijala...", 5000, 3);
			SetPlayerCheckpoint(playerid, 1248.1407,-814.8812,84.1477, 5.0);
			SvercMaterijala[playerid] = 2;
			va_SendClientMessage(playerid, 0xC0C0C0AA, "[BDT]: {FFFFFF}Posle utovara odvezite materijale u skladiste...");
		}
	}
	if(SvercMaterijala[playerid] == 2 && CID == vBDT[5] || CID == vBDT[6] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1248.1407,-814.8812,84.1477))
		{
			TogglePlayerControllable(playerid, 0);
			PlayerTimer[playerid] = SetTimerEx("ZalediOdledi", 4000, false, "i", playerid);
			GameTextForPlayer(playerid, "~y~istovar materijala...", 5000, 3);
			SvercMaterijala[playerid] = 0;
			new OrgID = PI[playerid][Clan];
	 		OrgInfo[OrgID][oSefMats] += 250;
	  		mysql_tqueryEx(SQL, "UPDATE `organizations` SET `SefMats` = '%d' WHERE `SQLID` = '%d'", OrgInfo[OrgID][oSefMats], OrgInfo[OrgID][SQLID]);
	  		OrgLabel(OrgID);
			DisablePlayerCheckpoint(playerid);
			new string[156];
			format(string, sizeof(string), "[SVERC]: {FFFFFF}Clan Vase organizacije %s je dostavio materijale u skladiste (+250 materijala u sef).", ReturnPlayerName(playerid));
  			OrgPoruka(OrgID, 0xC0C0C0AA, string);
		}
	}
	// - > Sverc (LCN)
	if(SvercMaterijala[playerid] == 1 && CID == vLCN[0] || CID == vLCN[1] && CID == vLCN[2] || CID == vLCN[3] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, -272.1140,-2155.1370,28.6874))
		{
			TogglePlayerControllable(playerid, 0);
			PlayerTimer[playerid] = SetTimerEx("ZalediOdledi", 4000, false, "i", playerid);
			GameTextForPlayer(playerid, "~y~utovar materijala...", 5000, 3);
			SetPlayerCheckpoint(playerid, 1211.3569,-2565.4778,5.7955, 5.0);
			SvercMaterijala[playerid] = 2;
			va_SendClientMessage(playerid, 0xdfc933AA, "[LCN]: {FFFFFF}Posle utovara odvezite materijale u skladiste...");
		}
	}
	if(SvercMaterijala[playerid] == 2 && CID == vLCN[0] || CID == vLCN[1] && CID == vLCN[2] || CID == vLCN[3] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1211.3569,-2565.4778,5.7955))
		{
			TogglePlayerControllable(playerid, 0);
			PlayerTimer[playerid] = SetTimerEx("ZalediOdledi", 4000, false, "i", playerid);
			GameTextForPlayer(playerid, "~y~istovar materijala...", 5000, 3);
			SvercMaterijala[playerid] = 0;
			new OrgID = PI[playerid][Clan];
	 		OrgInfo[OrgID][oSefMats] += 250;
	  		mysql_tqueryEx(SQL, "UPDATE `organizations` SET `SefMats` = '%d' WHERE `SQLID` = '%d'", OrgInfo[OrgID][oSefMats], OrgInfo[OrgID][SQLID]);
	  		OrgLabel(OrgID);
			DisablePlayerCheckpoint(playerid);
			new string[156];
			format(string, sizeof(string), "[SVERC]: {FFFFFF}Clan Vase organizacije %s je dostavio materijale u skladiste (+250 materijala u sef).", ReturnPlayerName(playerid));
  			OrgPoruka(OrgID, 0xdfc933AA, string);
		}
	}
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
	if(Ulogovan[playerid] == 0)
	{
	    va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Prije spawna se morate ulogovati (kikovani ste)!");
	    PlayerTimer[playerid] = SetTimerEx("KonektKick", 500, false, "d", playerid);
		return 0;
	}
	else
	{
	    SpawnIgraca(playerid); SpawnPlayer(playerid);
		return 1;
	}
}

public OnObjectMoved(objectid)
{
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	return 1;
}

public OnEnterExitModShop(playerid, enterexit, interiorid)
{
    if(enterexit == 0) //Izlazi
    {
        UsaoTuningGaraza[playerid] = 0;
    }
    if(enterexit == 1) //Ulazi
    {
        UsaoTuningGaraza[playerid] = 1;
        PI[playerid][Novac] -= 2000;
        GivePlayerMoney(playerid, -2000);
        mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
    	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ulazak u tuning garazu platili ste 2000$!");
    }
    return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	if(PrivatnoVozilo(vehicleid))
	{
		SaveComponent(vehicleid, componentid);
		if(!IsComponentidCompatible(GetVehicleModel(vehicleid), componentid)) RemoveVehicleComponent(vehicleid, componentid);
	}
	CheckQuestDone(playerid, 21);
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
    if(PrivatnoVozilo(vehicleid))
	{
		VoziloInfo[vehicleid][vPaintJob] = paintjobid;
		mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `PaintJob` = '%d' WHERE `SQLID` = '%d'", VoziloInfo[vehicleid][vPaintJob], VoziloInfo[vehicleid][SQLID]);
		ChangeVehiclePaintjob(vehicleid, VoziloInfo[vehicleid][vPaintJob]);
	}
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	if(PrivatnoVozilo(vehicleid))
   	{
   		VoziloInfo[vehicleid][vBoja1] = color1;
		VoziloInfo[vehicleid][vBoja2] = color2;
		mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Boja1` = '%d', `Boja2` = '%d' WHERE `SQLID` = '%d'", VoziloInfo[vehicleid][vBoja1], VoziloInfo[vehicleid][vBoja2], VoziloInfo[vehicleid][SQLID]);
	}
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	return 1;
}

public OnPlayerKeyStateChange(playerid, KEY:newkeys, KEY:oldkeys)
{
	if(newkeys == KEY_ACTION)
	{
	    new veh = GetPlayerVehicleID(playerid);
		if(PolicijaVozila(veh) || SAJVozila(veh))
	    {
			if(Koristio_Megafon[playerid] > gettime())
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Megafon mozete koristiti svakih 5 sekundi.");

			Koristio_Megafon[playerid] = gettime()+5;

			new string[150];
  			format(string, sizeof(string), "{FFFF00}[POLICIJA] %s: STOJ! Izadjite iz vozila ili cemo upotrebiti silu.", ReturnPlayerName(playerid));
    		ProxMessage(playerid, string, 25.0);
		}
	}
    if(newkeys == KEY_CROUCH)
	{
 		if(IsPlayerInRangeOfPoint(playerid, 10.0, 1590.4000244141, -1638, 15.199999809265)) //PD KAPIJA
		{
			if(PI[playerid][Clan] == 1 || PI[playerid][Lider] == 1 || PI[playerid][Admin] >= 1)
			{
				new str[80];
			    if(ozpdkapija == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kapija je vec otvorena!");
				ozpdkapija = 1;
				MoveDynamicObject(kapijapd,1597.4000244141, -1638 ,15.199999809265, 2.00);
				SetTimer("ZatvaranjePDK", 10000, false);
				format(str, sizeof(str), "{C2A2DA}* %s otvara kapiju policije.", ReturnPlayerName(playerid));
				ProxMessage(playerid, str, 20.0);
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kapija je otvorena i zatvorice se automatski!");
			}
			else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kapiju mogu otvarati samo clanovi policije!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 10.0, 1544.6942373,-1630.9200244,13.1200004)) //PD RAMPA
		{
			if(PI[playerid][Clan] == 1 || PI[playerid][Lider] == 1 || PI[playerid][Admin] >= 1)
			{
				new str[80];
			    if(ozpdrampa == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Rampa je vec otvorena!");
				ozpdrampa = 1; MoveDynamicObject(pdrampa, 1544.6999511719, -1630.8000488281, 13.10000038147, 0.02, 0.0000000,0.0000000,90.0000000);
				SetTimer("ZatvaranjePDR", 10000, false);
				format(str, sizeof(str), "{C2A2DA}* %s otvara rampu policije.", ReturnPlayerName(playerid));
				ProxMessage(playerid, str, 20.0);
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Rampa je otvorena i zatvorice se automatski!");
			}
			else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Rampu mogu otvarati samo clanovi policije!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 3.10356, 1707.83765, -25.65040)) //PD VRATA U ENTERIERU
	    {
  			if(PI[playerid][Clan] == 1 || PI[playerid][Lider] == 1 || PI[playerid][Admin] >= 1)
			{
   				new str[80];
   				if(pdvrataoz == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vrata su vec otvorena!");
	    		MoveDynamicObject(pdvrata, 3.10356, 1707.83765, -25.65040, 2.0);
	    		pdvrataoz = 1;
				format(str, sizeof(str), "{C2A2DA}* %s otvara vrata policije.", ReturnPlayerName(playerid));
				ProxMessage(playerid, str, 20.0);
		    	SetTimer("ZatvaranjePDVrata", 5000, false);
			}
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 10.0, 1290.1563,-1652.0366,13.5469)) //SAJ KAPIJA
		{
			if(PI[playerid][Clan] == 2 || PI[playerid][Lider] == 2 || PI[playerid][Admin] >= 1)
			{
				new str[80];
			    if(sajkapijaoz == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kapija je vec otvorena!");
				sajkapijaoz = 1;
				MoveDynamicObject(sajkapija, 1286.15833, -1646.23926, 9.08600, 2.00);
				SetTimer("ZatvaranjeSAJ", 10000, false);
				format(str, sizeof(str), "{C2A2DA}* %s otvara kapiju SAJ-a.", ReturnPlayerName(playerid));
				ProxMessage(playerid, str, 20.0);
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kapija je otvorena i zatvorice se automatski!");
			}
			else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kapiju mogu otvarati samo clanovi SAJ-a!");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 10.0, 1112.3899,-1740.7944,13.4039)) //PIJACA KAPIJA
		{
			if(PI[playerid][Admin] >= 1)
			{
				new str[80];
			    if(pijacakapijaoz == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kapija je vec otvorena!");
				pijacakapijaoz = 1;
				MoveDynamicObject(pijacakapija, 1104.65845, -1747.14478, 9.34000, 2.00);
				SetTimer("ZatvaranjeP", 10000, false);
				format(str, sizeof(str), "{C2A2DA}* %s otvara kapiju pijace.", ReturnPlayerName(playerid));
				ProxMessage(playerid, str, 20.0);
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kapija je otvorena i zatvorice se automatski!");
			}
			else
			{
			    new str[80];
			    if(pijacakapijaoz == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kapija je vec otvorena!");
				pijacakapijaoz = 1;
				MoveDynamicObject(pijacakapija, 1104.65845, -1747.14478, 9.34000, 2.00);
				SetTimer("ZatvaranjeP", 10000, false);
				format(str, sizeof(str), "{C2A2DA}* %s otvara kapiju pijace.", ReturnPlayerName(playerid));
				ProxMessage(playerid, str, 20.0);
				PI[playerid][Novac] -= 100;
				GivePlayerMoney(playerid, -100);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kapija pijace je otvorena i naplaceno vam je 100$!");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 10.0, 1245.54529, -767.23004, 91.27335)) //BDT KAPIJA
		{
			if(PI[playerid][Clan] == 6 || PI[playerid][Lider] == 6 || PI[playerid][Admin] >= 1)
			{
				new str[50];
			    if(bdtkapijaoz == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kapija je vec otvorena!");
			    MoveDynamicObject(bdtkapija, 1251.43726, -767.28784, 88.30853, 2.0);
				bdtkapijaoz = 1; SetTimer("ZatvaranjeBDT", 7000, false);
				format(str, sizeof(str), "{C2A2DA}* %s otvara kapiju BDT-a.", ReturnPlayerName(playerid));
				ProxMessage(playerid, str, 20.0);
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kapija je otvorena i zatvorice se automatski!");
			}
			else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kapiju mogu otvarati samo clanovi Black Dragon Triads-a!");
		}
	}
	if(newkeys == KEY_HANDBRAKE)
	{
		if(gPlayerUsingLoopingAnim[playerid] == true)
		{
		    gPlayerUsingLoopingAnim[playerid] = false;
			StopLoopingAnim(playerid);
		}
    }
    if(newkeys == KEY_SECONDARY_ATTACK)
	{
	    for(new i; i < MAX_KUCA; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]))
			{
    			if(PI[playerid][Kuca] == i || KucaInfo[i][kZatvoreno] == 0)
    		   	{
    		   	    if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
                    SetPlayerVirtualWorld(playerid, KucaInfo[i][kVW]);
                    SetPlayerInterior(playerid, KucaInfo[i][kInt]);
                 	SetPlayerPos(playerid, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]);
                }
                else
                {
                    GameTextForPlayer(playerid,"~w~Kuca ~r~zakljucana ~w~- /zvoni",5000,3);
                    return 1;
                }
			}
            if(IsPlayerInRangeOfPoint(playerid, 3.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]) && GetPlayerVirtualWorld(playerid) == KucaInfo[i][kVW])
	        {
	            if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
             	SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
             	SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);
             	return 1;
            }
		}
		for(new i; i < MAX_STANOVA; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, StanInfo[i][sUlazX], StanInfo[i][sUlazY], StanInfo[i][sUlazZ]))
			{
    			if(PI[playerid][Stan] == i || StanInfo[i][sZatvoreno] == 0)
    		   	{
    		   	    if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
                    SetPlayerVirtualWorld(playerid, StanInfo[i][sVW]);
                    SetPlayerInterior(playerid, StanInfo[i][sInt]);
                 	SetPlayerPos(playerid, StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ]);
                }
                else
                {
                    GameTextForPlayer(playerid,"~w~Stan ~y~zakljucan",5000,3);
                    return 1;
                }
			}
            if(IsPlayerInRangeOfPoint(playerid, 3.0, StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ]) && GetPlayerVirtualWorld(playerid) == StanInfo[i][sVW])
	        {
	            if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
             	SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, StanInfo[i][sUlazX], StanInfo[i][sUlazY], StanInfo[i][sUlazZ]);
             	return 1;
            }
		}
		for(new i; i < MAX_FIRMI; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ]) && !IsPlayerInAnyVehicle(playerid))
			{
			    if(FirmaInfo[i][fVrsta] == VRSTA_POSAO)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete uci u tu firmu!");
					
                if(StavljeneLisice[playerid] == 1)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
					
			    if(FirmaInfo[i][fZatvoreno] == 1)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Firma zakljucana!");

				SetPlayerVirtualWorld(playerid, FirmaInfo[i][fVW]);
				SetPlayerInterior(playerid, FirmaInfo[i][fInt]);
				SetPlayerPos(playerid, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]);
				UsaoFirma[playerid] = i;
				
				if(FirmaInfo[i][fVrsta] == VRSTA_MARKET) GameTextForPlayer(playerid,"~w~Usli ste u market~n~~b~/kupi",5000,3);
				else if(FirmaInfo[i][fVrsta] == VRSTA_SEXSHOP) GameTextForPlayer(playerid,"~w~Usli ste u sex shop~n~~r~/kupi",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_GUNSHOP) GameTextForPlayer(playerid,"~w~Usli ste u gun shop~n~~b~/kupi",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_RESTORAN) GameTextForPlayer(playerid,"~w~Usli ste u restoran~n~~b~/meni",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_BURG) GameTextForPlayer(playerid,"~w~Usli ste u burg~n~~b~/meni",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_CLUCKIN) GameTextForPlayer(playerid,"~w~Usli ste u cluckin~n~~b~/meni",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_PIZZA) GameTextForPlayer(playerid,"~w~Usli ste u piceriju~n~~b~/meni",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_DISCO) GameTextForPlayer(playerid,"~w~Usli ste u disco~n~~b~/pice",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_BAR) GameTextForPlayer(playerid,"~w~Usli ste u bar~n~~b~/pice",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_PIGPEN) GameTextForPlayer(playerid,"~w~Usli ste u pig pen~n~~b~/pice",5000,3);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_GYM) GameTextForPlayer(playerid,"~w~Usli ste u teretanu~n~~b~/teretana",5000,3), CheckQuestDone(playerid, 22);
			    else if(FirmaInfo[i][fVrsta] == VRSTA_BINCO) GameTextForPlayer(playerid,"~w~Usli ste u binco butik~n~~b~/odjeca",5000,3);
				else if(FirmaInfo[i][fVrsta] == VRSTA_VICTIM) GameTextForPlayer(playerid,"~w~Usli ste u victim butik~n~~b~/odjeca",5000,3);
				else if(FirmaInfo[i][fVrsta] == VRSTA_SUBURBAN) GameTextForPlayer(playerid,"~w~Usli ste u suburban butik~n~~b~/odjeca",5000,3);
				else if(FirmaInfo[i][fVrsta] == VRSTA_ZIP) GameTextForPlayer(playerid,"~w~Usli ste u zip butik~n~~b~/odjeca",5000,3);
                else if(FirmaInfo[i][fVrsta] == VRSTA_KLADIONICA) GameTextForPlayer(playerid,"~w~Usli ste u kladionicu~n~~r~/sastavitiket",5000,3);
				return 1;
			}
        	if(IsPlayerInRangeOfPoint(playerid, 3.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ])
	        && GetPlayerVirtualWorld(playerid) == FirmaInfo[i][fVW] && !IsPlayerInAnyVehicle(playerid))
	        {
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ]);
				UsaoFirma[playerid] = -1;
				return 1;
			}
		}
		for(new i = 1; i < MAX_ORG; i++)
		{
  			if(OrgInfo[i][oBazaOZ] == 0 || PI[playerid][Clan] == i)
	    	{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, OrgInfo[i][oPozExtX], OrgInfo[i][oPozExtY], OrgInfo[i][oPozExtZ]))
				{
				    if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
    				Ucitavanje_Objekata(playerid);
					SetPlayerPos(playerid, OrgInfo[i][oPozIntX], OrgInfo[i][oPozIntY], OrgInfo[i][oPozIntZ]);
					SetPlayerFacingAngle(playerid, OrgInfo[i][oIntAngle]);
 					SetPlayerInterior(playerid, OrgInfo[i][oInt]);
  					SetPlayerVirtualWorld(playerid, OrgInfo[i][oVw]);
					break;
				}
				else if(IsPlayerInRangeOfPoint(playerid, 2.0, OrgInfo[i][oPozIntX], OrgInfo[i][oPozIntY], OrgInfo[i][oPozIntZ]) && GetPlayerVirtualWorld(playerid) == OrgInfo[i][oVw])
				{
				    if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
	   				Ucitavanje_Objekata(playerid);
					SetPlayerPos(playerid, OrgInfo[i][oPozExtX], OrgInfo[i][oPozExtY], OrgInfo[i][oPozExtZ]);
					SetPlayerFacingAngle(playerid, OrgInfo[i][oExtAngle]);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					break;
				}
			}
			else if(OrgInfo[i][oBazaOZ] == 1)
			{
   				if(IsPlayerInRangeOfPoint(playerid, 2.0, OrgInfo[i][oPozExtX], OrgInfo[i][oPozExtY], OrgInfo[i][oPozExtZ]))
				{
   					va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vrata organizacije su zakljucana!");
			    	break;
				}
				else if(IsPlayerInRangeOfPoint(playerid, 2.0, OrgInfo[i][oPozIntX], OrgInfo[i][oPozIntY], OrgInfo[i][oPozIntZ]) && GetPlayerVirtualWorld(playerid) == OrgInfo[i][oVw])
				{
    				va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vrata organizacije su zakljucana!");
				    break;
				}
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1172.2866,-1323.3385,15.4027) && !IsPlayerInAnyVehicle(playerid)) //bolnica ulaz
		{
		    if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
		   	SetPlayerPos(playerid, 163.9172,44.5760,3381.0332);
			SetPlayerFacingAngle(playerid, 93.6342);
			Ucitavanje_Objekata(playerid);
	 	    SetPlayerInterior(playerid, 255);
	 	    SetPlayerVirtualWorld(playerid, 0);
	 	    GameTextForPlayer(playerid, "~w~LS Bolnica", 5000, 1);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 163.9172,44.5760,3381.0332) && !IsPlayerInAnyVehicle(playerid)) //bolnica izlaz
		{
		    if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
		    Ucitavanje_Objekata(playerid);
			SetPlayerPos(playerid, 1172.2866,-1323.3385,15.4027);
			SetPlayerFacingAngle(playerid, 182.4749);
	 	    SetPlayerInterior(playerid, 0);
	 	    SetPlayerVirtualWorld(playerid, 0);
	 	    GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
		}
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1456.7057,-1010.1188,26.8438) && !IsPlayerInAnyVehicle(playerid)) //banka ulaz
		{
		    if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
		    new sat, minut, sekund; gettime(sat, minut, sekund);
			if(sat >= 0 && sat <= 9 && PI[playerid][Admin] < 6) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Banka je zatvorena u ovo vrijeme (09:00 - 01:00), koristite bankomate!");
			SetPlayerPos(playerid, 1370.7448,-38.1494,1000.9133);
			SetPlayerFacingAngle(playerid, 93.6342);
			Ucitavanje_Objekata(playerid);
	 	    SetPlayerInterior(playerid, 1);
	 	    SetPlayerVirtualWorld(playerid, 96);
	 	    GameTextForPlayer(playerid, "~w~LS Banka", 5000, 1);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1370.7448,-38.1494,1000.9133) && !IsPlayerInAnyVehicle(playerid)) //banka izlaz
		{
		    if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
		    Ucitavanje_Objekata(playerid);
			SetPlayerPos(playerid, 1456.7057,-1010.1188,26.8438);
			SetPlayerFacingAngle(playerid, 182.4749);
	 	    SetPlayerInterior(playerid, 0);
	 	    SetPlayerVirtualWorld(playerid, 0);
	 	    GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2022.3917,-1297.5770,23.9948) && !IsPlayerInAnyVehicle(playerid)) //zlatara ulaz
		{
		    if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
		    new sat, minut, sekund; gettime(sat, minut, sekund);
			if(sat >= 0 && sat <= 9 && PI[playerid][Admin] < 6) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Zlatara je zatvorena u ovo vrijeme (09:00 - 01:00)!");
			SetPlayerPos(playerid, 1026.2103, 2303.5303, -19.7883);
			SetPlayerFacingAngle(playerid, 93.6342);
			Ucitavanje_Objekata(playerid);
	 	    SetPlayerInterior(playerid, 0);
	 	    SetPlayerVirtualWorld(playerid, 0);
	 	    GameTextForPlayer(playerid, "~w~LS Zlatara", 5000, 1);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1026.2103, 2303.5303, -19.7883) && !IsPlayerInAnyVehicle(playerid)) //zlatara izlaz
		{
		    if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
			SetPlayerPos(playerid, 2022.3917,-1297.5770,23.9948);
			SetPlayerFacingAngle(playerid, 182.4749);
			Ucitavanje_Objekata(playerid);
	 	    SetPlayerInterior(playerid, 0);
	 	    SetPlayerVirtualWorld(playerid, 0);
	 	    GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1992.1652,-1775.3353,13.7579) && !IsPlayerInAnyVehicle(playerid)) //auto skola ulaz
		{
		    if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
		    SetPlayerPos(playerid, 1379.2844,1455.0060,-7.7367);
			SetPlayerFacingAngle(playerid, 93.6342);
	 	    SetPlayerInterior(playerid, 0);
	 	    SetPlayerVirtualWorld(playerid, 0);
	 	    GameTextForPlayer(playerid, "~w~Auto Skola", 5000, 1);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1379.2844,1455.0060,-7.7367) && !IsPlayerInAnyVehicle(playerid)) //auto skola izlaz
		{
		    if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
			SetPlayerPos(playerid, 1992.1652,-1775.3353,13.7579);
			SetPlayerFacingAngle(playerid, 182.4749);
			Ucitavanje_Objekata(playerid);
	 	    SetPlayerInterior(playerid, 0);
	 	    SetPlayerVirtualWorld(playerid, 0);
	 	    GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1478.3827,-1818.1713,13.7188) && !IsPlayerInAnyVehicle(playerid)) //opstina ulaz
		{
		    if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
		    SetPlayerPos(playerid, -2128.9692,-175.9183,-79.0954);
			SetPlayerFacingAngle(playerid, 93.6342);
			Ucitavanje_Objekata(playerid);
	 	    SetPlayerInterior(playerid, 0);
	 	    SetPlayerVirtualWorld(playerid, 0);
	 	    GameTextForPlayer(playerid, "~w~LS Opstina", 5000, 1);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, -2128.9692,-175.9183,-79.0954) && !IsPlayerInAnyVehicle(playerid)) //opstina izlaz
		{
		    if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
			SetPlayerPos(playerid, 1478.3827,-1818.1713,13.7188);
			SetPlayerFacingAngle(playerid, 182.4749);
			Ucitavanje_Objekata(playerid);
	 	    SetPlayerInterior(playerid, 0);
	 	    SetPlayerVirtualWorld(playerid, 0);
	 	    GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1571.8448,-1675.6110,28.3955) && !IsPlayerInAnyVehicle(playerid)) //sa krov u zgradu lspd
		{
			if(!ClanDB(playerid)) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi PD / FBI!");
            if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
			Ucitavanje_Objekata(playerid);
			SetPlayerPos(playerid, -1.3111,1718.6633,-24.6192);
	 	    SetPlayerInterior(playerid, OrgInfo[PI[playerid][Clan]][oInt]);
	 	    SetPlayerVirtualWorld(playerid, OrgInfo[PI[playerid][Clan]][oVw]);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1568.6903,-1690.6263,5.8906) && !IsPlayerInAnyVehicle(playerid)) //iz garaza u zgradu lspd
		{
			if(!ClanDB(playerid)) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi PD / FBI!");
            if(StavljeneLisice[playerid] == 1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate lisice pa ne mozete ulaziti / izlaziti!");
			Ucitavanje_Objekata(playerid);
			SetPlayerPos(playerid, -3.8786,1710.0671,-24.6102);
	 	    SetPlayerInterior(playerid, OrgInfo[PI[playerid][Clan]][oInt]);
	 	    SetPlayerVirtualWorld(playerid, OrgInfo[PI[playerid][Clan]][oVw]);
		}
	}
	if(newkeys == KEY_FIRE)
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
		    new engine, lights, alarm, doors, bonnet, boot, objective, string[80];
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			if(lights == 0 || lights == -1)
			{
			    if(engine == 0 || engine == -1) return 1;
				SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, 1, alarm, doors, bonnet, boot, objective);
			}
			else if(lights == 1)
			{
				SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, 0, alarm, doors, bonnet, boot, objective);
			}
			format(string, sizeof(string), "{C2A2DA}* %s %s svetla na vozilu.", ReturnPlayerName(playerid), lights == 1 ? "gasi" : "pali");
			ProxMessage(playerid, string, 20.0);
		}
		if(Kreira_Teritoriju_ID[playerid] == 1)
		{
		    new Float:Pos[3];
			GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
			
			if(KodDrugeTeritorije(Pos[0], Pos[1]) != -1) 
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete kreirati ovde teritoriju jer je na ovom mestu vec kreirana neka teritorija!");
	        
			KreiranjaPos[playerid][0] = Pos[0];
	        KreiranjaPos[playerid][1] = Pos[1];
	        
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Sada sacuvajte poziciju desnog gornjeg ugla teritorije.");
	        va_SendClientMessage(playerid, -1, "Koristite {1b71bc}LMB {FFFFFF}da postavite pozicije.");
	        Kreira_Teritoriju_ID[playerid] ++;
        }
        else if(Kreira_Teritoriju_ID[playerid] == 2)
		{
            new id = Kreira_Teritoriju_IDID[playerid], Float:Pos[4];
			if(id == -1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Prekoracen je Maximalan broj kreiranja Teritorija!");
			GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
			GetPlayerFacingAngle(playerid, Pos[3]);
			
			if(KodDrugeTeritorije(Pos[0], Pos[1]) != -1) 
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete kreirati ovde teritoriju jer je na ovom mjestu vec kreirana neka teritorija!");
	        
			KreiranjaPos[playerid][2] = Pos[0];
	        KreiranjaPos[playerid][3] = Pos[1];
	        Kreira_Teritoriju_ID[playerid] ++;
            
			if(KreiranjaPos[playerid][0] > KreiranjaPos[playerid][2])
			{
			    TeritorijeInfo[id][t_MaxX] = KreiranjaPos[playerid][0];
				TeritorijeInfo[id][t_MinX] = KreiranjaPos[playerid][2];
			}
			else if(KreiranjaPos[playerid][2] > KreiranjaPos[playerid][0])
			{
			    TeritorijeInfo[id][t_MaxX] = KreiranjaPos[playerid][2];
				TeritorijeInfo[id][t_MinX] = KreiranjaPos[playerid][0];
			}
			if(KreiranjaPos[playerid][1] > KreiranjaPos[playerid][3])
			{
			    TeritorijeInfo[id][t_MaxY] = KreiranjaPos[playerid][1];
				TeritorijeInfo[id][t_MinY] = KreiranjaPos[playerid][3];
			}
			else if(KreiranjaPos[playerid][3] > KreiranjaPos[playerid][1])
			{
			    TeritorijeInfo[id][t_MaxY] = KreiranjaPos[playerid][3];
				TeritorijeInfo[id][t_MinY] = KreiranjaPos[playerid][1];
			}
            TeritorijeInfo[id][t_ID] = GangZoneCreate(TeritorijeInfo[id][t_MinX], TeritorijeInfo[id][t_MinY], TeritorijeInfo[id][t_MaxX], TeritorijeInfo[id][t_MaxY]);
           	
			mysql_tqueryEx(SQL, "UPDATE `zones` SET `MaxX` = '%f', `MinX` = '%f', `MaxY` = '%f', `MinY` = '%f' WHERE `SQLID` = '%d'", 
			 	TeritorijeInfo[id][t_MaxX], TeritorijeInfo[id][t_MinX], TeritorijeInfo[id][t_MaxY], TeritorijeInfo[id][t_MinY], TeritorijeInfo[id][SQLID]);
			
			TeritorijeInfo[id][t_RectAngle] = CreateDynamicRectangle(TeritorijeInfo[id][t_MinX], TeritorijeInfo[id][t_MinY], TeritorijeInfo[id][t_MaxX], TeritorijeInfo[id][t_MaxY], -1, -1, -1);
            
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Sada sacuvajte poziciju za pickup i label.");
			va_SendClientMessage(playerid, -1, "Koristite {1b71bc}LMB {FFFFFF}da postavite pozicije.");
        }
        else if(Kreira_Teritoriju_ID[playerid] == 3)
		{
            new Float:Pos[3], t_string[300];
            GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
		
			new id = KoordinateTeritorije(Kreira_Teritoriju_IDID[playerid], Pos[0], Pos[1]);
		    if(id != Kreira_Teritoriju_IDID[playerid]) va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate sacuvati u zoni koju kreirate!");
            
			TeritorijeInfo[id][t_PickupPos][0] = Pos[0];
            TeritorijeInfo[id][t_PickupPos][1] = Pos[1];
            TeritorijeInfo[id][t_PickupPos][2] = Pos[2];
            
			TeritorijeInfo[id][t_Pickup] = CreateDynamicPickup(1313, 1, TeritorijeInfo[id][t_PickupPos][0], TeritorijeInfo[id][t_PickupPos][1], TeritorijeInfo[id][t_PickupPos][2], 0, 0);
			format(t_string, sizeof(t_string), "{6aaee9}[ TERITORIJA - %d ]\nVlasnistvo: {00FF00}Slobodna\n{FFFFFF}Ukoliko zelite da je zauzmete kucajte\n{6aaee9}[ /zauzmiteritoriju ]", id);
			TeritorijeInfo[id][t_Label] = CreateDynamic3DTextLabel(t_string, -1, TeritorijeInfo[id][t_PickupPos][0], TeritorijeInfo[id][t_PickupPos][1], TeritorijeInfo[id][t_PickupPos][2], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
   			format(t_string, sizeof(t_string), "0x%sAA", TeritorijeInfo[id][t_Boja]);
            GangZoneShowForAll(TeritorijeInfo[id][t_ID], HexToInt(t_string));
            
			mysql_tqueryEx(SQL, "UPDATE `zones` SET `PickupPos_1` = '%f', `PickupPos_2` = '%f', `PickupPos_3` = '%f' WHERE `SQLID` = '%d'", Pos[0], Pos[1], Pos[2], TeritorijeInfo[id][SQLID]);
            
			Kreira_Teritoriju_ID[playerid] = -1;
            va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste kreirali teritoriju ID: %d", id);
    	}
	}
	if(newkeys == KEY_CTRL_BACK)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1381.6025,-27.8411,1004.4440))
	    {
		    Dialog_Show(playerid, dialog_banka, DIALOG_STYLE_LIST, "{1b71bc}Banka:", "{1b71bc}> {FFFFFF}Otvori racun\n\
																	              {1b71bc}> {FFFFFF}Ostavi novac\n\
				 																  {1b71bc}> {FFFFFF}Podigni novac\n\
																				  {1b71bc}> {FFFFFF}Transfer novca\n\
																				  {1b71bc}> {FFFFFF}Stanje na racunu\n\
																				  {1b71bc}> {FFFFFF}Krediti\n\
																				  {1b71bc}> {FFFFFF}Vrati Kredit", "Odaberi", "Izlaz");
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1026.3081, 2312.2776, -19.7883))
	    {
		    Dialog_Show(playerid, dialog_zlatara, DIALOG_STYLE_TABLIST_HEADERS, "{1b71bc}Zlatara:", "Opcija\tCena Zlata\n\
																					                {1b71bc}> {FFFFFF}Kupovina Zlata\t1001$\n\
								 																    {1b71bc}> {FFFFFF}Prodaja Zlata\t1000$", "Odaberi", "Izlaz");
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1376.9954,1461.3077,-7.7367))
		{
			Dialog_Show(playerid, dialog_dozvole, DIALOG_STYLE_TABLIST_HEADERS, "{1b71bc}Dozvola:", "Dozvola\tCena\n\
																							         {1b71bc}> {FFFFFF}Dozvola za Voznju\t1000$\n\
																									 {1b71bc}> {FFFFFF}Dozvola za Kamion/Bus\t2000$\n\
																									 {1b71bc}> {FFFFFF}Dozvola za Motor\t500$\n\
																									 {1b71bc}> {FFFFFF}Dozvola za Avion\t4000$\n\
																									 {1b71bc}> {FFFFFF}Dozvola za Brod\t3000$","Odaberi","Izadji");
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 2006.4457,-2002.2997,13.5869))
		{
		    if(ServerInfo[sKupovinaVozila] == 0)
	        	return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kupovina vozila je trenutno onemogucena!");

			Dialog_Show(playerid, dialog_kvozilo, DIALOG_STYLE_TABLIST, "{1b71bc}Katalog Vozila:", "{1b71bc}> {FFFFFF}Lanstalker\t{6EF83C}100000$\n\
   																							 {1b71bc}> {FFFFFF}Buffalo\t{6EF83C}150000$\n\
		 																		             {1b71bc}> {FFFFFF}Sentinel\t{6EF83C}80000$\n\
	                                                                                         {1b71bc}> {FFFFFF}Infernus\t{6EF83C}700000$\n\
																							 {1b71bc}> {FFFFFF}Voodoo\t{6EF83C}45000$\n\
																							 {1b71bc}> {FFFFFF}Cheetah\t{6EF83C}480000$\n\
																							 {1b71bc}> {FFFFFF}Esperanto\t{6EF83C}45000$\n\
																							 {1b71bc}> {FFFFFF}Premier\t{6EF83C}80000$\n\
																							 {1b71bc}> {FFFFFF}Banshee\t{6EF83C}220000$\n\
																							 {1b71bc}> {FFFFFF}Stallion\t{6EF83C}35000$\n\
																							 {1b71bc}> {FFFFFF}Turismo\t{6EF83C}600000$\n\
																							 {1b71bc}> {FFFFFF}Glendale\t{6EF83C}35000$\n\
																							 {1b71bc}> {FFFFFF}Hermes\t{6EF83C}35000$\n\
																							 {1b71bc}> {FFFFFF}Sabre\t{6EF83C}50000$\n\
																							 {1b71bc}> {FFFFFF}ZR-350\t{6EF83C}200000$\n\
																							 {1b71bc}> {FFFFFF}Rancher\t{6EF83C}270000$\n\
																							 {1b71bc}> {FFFFFF}Mesa\t{6EF83C}70000$\n\
																							 {1b71bc}> {FFFFFF}Super GT\t{6EF83C}120000$\n\
																							 {1b71bc}> {FFFFFF}Nebula\t{6EF83C}35000$\n\
																							 {1b71bc}> {FFFFFF}Fortune\t{6EF83C}40000$\n\
																							 {1b71bc}> {FFFFFF}Feltzer\t{6EF83C}80000$\n\
																							 {FFFFFF}Sledeca strana", "Kupi", "Izadji");
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, -2126.2542,-200.4468,-79.0904))
		{
		    Dialog_Show(playerid, dialog_opstina, DIALOG_STYLE_LIST, "{1b71bc}Opstina:", "{1b71bc}> {FFFFFF}Poslovi\n\
                                                                                          {1b71bc}> {FFFFFF}Kupi produkte za firmu - {6EF83C}(1 komad - 25$)\n\
                                                                                          {1b71bc}> {FFFFFF}Plati org kaznu - {6EF83C}(50000$)", "Odaberi", "Izlaz");
		}
		if(PI[playerid][Clan] != 0) //H SEF
		{
			new OrgID = PI[playerid][Clan];
	        if(OrgInfo[OrgID][oSef] == 1)
			{
		        if(IsPlayerInRangeOfPoint(playerid, 1.5, OrgInfo[OrgID][oSefPozX], OrgInfo[OrgID][oSefPozY], OrgInfo[OrgID][oSefPozZ]))
				{
				    if(OrgInfo[OrgID][oDrzavni_Sef] == 0)
				    {
			    		Dialog_Show(playerid, dialog_osef, DIALOG_STYLE_LIST, "{1b71bc}Sef", "{1b71bc}> {FFFFFF}Stanje u sefu\n\
																							  {1b71bc}> {FFFFFF}Uzmi novac\n\
																							  {1b71bc}> {FFFFFF}Ostavi novac\n\
																							  {1b71bc}> {FFFFFF}Uzmi drogu\n\
																							  {1b71bc}> {FFFFFF}Ostavi drogu\n\
																							  {1b71bc}> {FFFFFF}Uzmi mats\n\
																							  {1b71bc}> {FFFFFF}Ostavi mats", "OK", "Izlaz");
		    		}
				    if(OrgInfo[OrgID][oDrzavni_Sef] == 1)
				    {
			    		Dialog_Show(playerid, dialog_opdsef, DIALOG_STYLE_LIST, "{1b71bc}Sef", "{1b71bc}> {FFFFFF}Stanje u sefu\n\
													                                            {1b71bc}> {FFFFFF}Uzmi novac\n\
																								{1b71bc}> {FFFFFF}Ostavi novac", "OK", "Izlaz");
					}
				}
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.5, -0.9769,1704.4146,-24.6042) || IsPlayerInRangeOfPoint(playerid, 1.5, 1007.6560,2598.6997,-68.7635))
		{
		    if(!ClanDB(playerid))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi Drzavne Bezbednosti!");
				
			new string[156];
            if(PolicijaDuznost[playerid] == 0)
			{
				if(ClanDB(playerid)) { format(string, sizeof(string), "{C2A2DA}* Policajac %s uzima znacku i pistolj iz ormarica.", ReturnPlayerName(playerid)); }
				ProxMessage(playerid, string, 30.0);
				va_SendClientMessage(playerid, 0x1263faFF, "#Duznost: {FFFFFF}Uzeli ste duznost kao policajac!");
				GivePlayerWeapon(playerid, WEAPON_DEAGLE, 150);
				GivePlayerWeapon(playerid, WEAPON_NITESTICK, 0);
				SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				PolicijaDuznost[playerid] = 1;
			}
			else
			{
			    if(ClanDB(playerid)) { format(string, sizeof(string), "{C2A2DA}* Policajac %s stavlja pistolj i znacku u svoj ormaric.", ReturnPlayerName(playerid)); }
                ProxMessage(playerid, string, 30.0);
				va_SendClientMessage(playerid, 0x1263faFF, "#Duznost: {FFFFFF}Skinuli ste duznost kao policajac!");
				ResetPlayerWeapons(playerid);
				SetPlayerArmour(playerid, 0);
				SetPlayerHealth(playerid, 100);
				PolicijaDuznost[playerid] = 0;
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.5, 5.3104,1713.3081,-24.6135) || IsPlayerInRangeOfPoint(playerid, 1.5, 1023.9838,2575.8945,-68.7635))
		{
		    if(!ClanDB(playerid))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi Drzavne Bezbednosti!");

			if(PolicijaDuznost[playerid] == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste uzeli duznost!");
				
            Dialog_Show(playerid, dialog_poprema, DIALOG_STYLE_LIST, "{1b71bc}Oprema", "{1b71bc}> {FFFFFF}Oruzije\n\
															                            {1b71bc}> {FFFFFF}Undercover\n\
																						{1b71bc}> {FFFFFF}Hrana i Pancir\n\
																						{1b71bc}> {FFFFFF}Specijalna oprema\n\
																						{1b71bc}> {FFFFFF}Stari Skin", "Odaberi", "Izlaz");
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.5, -3.8786,1710.0671,-24.6102))
		{
		    if(!ClanDB(playerid))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi Drzavne Bezbednosti!");
				
            Dialog_Show(playerid, dialog_plift, DIALOG_STYLE_LIST, "{1b71bc}Lift", "{1b71bc}> {FFFFFF}Krov\n\
            																        {1b71bc}> {FFFFFF}Garaza", "Odaberi", "Izlaz");
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.5, 7.6308,1704.5901,-24.6044) || IsPlayerInRangeOfPoint(playerid, 1.5, 996.7521,2570.1353,-68.7635))
	    {
	        if(PI[playerid][OruzijeDozvola] != 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec posedujes dozvolu za oruzije!");

			if(PI[playerid][Novac] < 10000)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas dovoljno novca (10000$)!");

			PI[playerid][OruzijeDozvola] = 1;
			PI[playerid][Novac] -= 10000;
			GivePlayerMoney(playerid, -10000);
			CheckQuestDone(playerid, 6);
			
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `OruzijeDozvola` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][OruzijeDozvola], PI[playerid][SQLID]);
			
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste dozvolu za oruzije za 10000$!");
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.5, -2897.7754,-1433.3430,-72.8061) || IsPlayerInRangeOfPoint(playerid, 1.5, -289.8588,2675.0105,-89.6851))
	    {
	    	if(!ClanMafije(playerid))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi mafije!");

			Dialog_Show(playerid, dialog_oruzaonica, DIALOG_STYLE_TABLIST, "{1b71bc}Oruzaonica", "{1b71bc}> {FFFFFF}Colt 45\t500 materijala\n\
																						          {1b71bc}> {FFFFFF}Deagle\t750 materijala\n\
																						          {1b71bc}> {FFFFFF}Shoutgun\t600 materijala\n\
																						          {1b71bc}> {FFFFFF}MP5\t900 materijala\n\
																						          {1b71bc}> {FFFFFF}AK-47\t1200 materijala\n\
																						          {1b71bc}> {FFFFFF}M4\t1300 materijala", "Odaberi", "Odustani");
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.5, 135.6603,44.7494,3381.0281))
		{
			Dialog_Show(playerid, dialog_bolnica, DIALOG_STYLE_LIST, "{1b71bc}Bolnica", "{1b71bc}> {FFFFFF}Lecenje - {6EF83C}(500$)\n\
																				         {1b71bc}> {FFFFFF}Lecenje zavisnosti droge - {6EF83C}(30000$)", "Odaberi", "Odustani");
		}
	}
	if(newkeys & KEY_SUBMISSION)
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new engine, lights, alarm, doors, bonnet, boot, objective, string[100];
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			if(VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid)))) return 1;
			if(engine == 0 || engine == -1)
			{
				new Float:HP;
				GetVehicleHealth(GetPlayerVehicleID(playerid), HP);

				if(HP < 400.0)
			 		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vozilo vam je previse osteceno, pozovite mehanicara!");

				if(Fuel[GetPlayerVehicleID(playerid)] <= 0)
					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate goriva u vozilu pa ne mozete upaliti motor!");

			    SetVehicleParamsEx(GetPlayerVehicleID(playerid), 1, lights, alarm, doors, bonnet, boot, objective);
			}
			else if(engine == 1)
			{
			    SetVehicleParamsEx(GetPlayerVehicleID(playerid), 0, 0, alarm, doors, bonnet, boot, objective);
			}
			format(string, sizeof(string), "{C2A2DA}* %s %s motor na vozilu.", ReturnPlayerName(playerid), engine == 1 ? "gasi" : "pali");
			ProxMessage(playerid, string, 20.0);
		}
	}
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
    if(!success)
    {
        foreach(new i : Player)
        {
            static igracip[16], string[150];
			GetPlayerIp(i, igracip, sizeof(igracip));
            if(!strcmp(ip, igracip, true))
            {
                if(PI[i][Admin] < 6)
                {
                	va_SendClientMessage(i, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan RCON password | Kikovani ste!");
                	format(string, sizeof(string), "{d8ab74}[RCON WARNING]: {FFFFFF}Igrac %s je pokusao da se uloguje na RCON sa pogresnim passwordom | Kikovan je!", ReturnPlayerName(i));
                    AdminMessage(-1, string);
					Kick(i);
                }
                else if(PI[i][Admin] >= 6)
                {
                	va_SendClientMessage(i, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan RCON password!");
				}
            }
        }
    }
    if(success)
    {
        foreach(new i : Player)
        {
            new igracip[16], string[150]; GetPlayerIp(i, igracip, sizeof(igracip));
            if(!strcmp(ip, igracip, true))
            {
                if(PI[i][Admin] < 6)
                {
                    format(string, sizeof(string), "{d8ab74}[RCON WARNING]: {FFFFFF}%s se uspjesno ulogovao na RCON | Igrac je manji Admin level od 6!", ReturnPlayerName(i));
                    AdminMessage(-1, string);
					va_SendClientMessage(i, -1, "{7ad874}[RCON LOGIN]: {FFFFFF}Uspjesno ste se ulogovali na RCON!");
                }
                else if(PI[i][Admin] >= 6)
                {
                    format(string, sizeof(string), "{7ad874}[RCON LOGIN]: {FFFFFF}%s se uspjesno ulogovao na RCON | Igrac je Admin Level 6!", ReturnPlayerName(i));
                    AdminMessage(-1, string);
                    va_SendClientMessage(i, -1, "{7ad874}[RCON LOGIN]: {FFFFFF}Uspjesno ste se ulogovali na RCON!");
                }
            }
        }
    }
	return 1;
}

public OnPlayerUpdate(playerid)
{
    if(IsPlayerInAnyVehicle(playerid))
   	{
   	    if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
   	    {
		   	new sspeed[15];
		   	format(sspeed, sizeof(sspeed), "%03dKM/H", GetSpeed(playerid));
		   	PlayerTextDrawSetString(playerid, BrzinaTD[playerid][8], sspeed);
   		}
    }
	if(Polaganje_CP[playerid] >= 1)
	{
		if(IsPlayerInAnyVehicle(playerid))
     	{
     	    if(GetSpeed(playerid) > 100)
     	    {
     	        Polaganje_Greske[playerid] ++;
				va_SendClientMessage(playerid, 0x1b71bcFF, "#AS: {FFFFFF}Prekoracili ste brzinu od 100KM/H dobili ste kazneni poen (%d/3)!", Polaganje_Greske[playerid]);
			}
		}
	}
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, CLICK_SOURCE:source)
{
	return 1;
}

// - > Model Dialogs
public OnPlayerModelSelection(playerid, response, listid, modelid)
{
	if(listid == skinlist)
	{
	    if(response)
	    {
	    	FirmaInfo[UsaoFirma[playerid]][fKasa] += 1000;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 1000;
			GivePlayerMoney(playerid, -1000);
			PI[playerid][Skin] = modelid;
			SetPlayerSkin(playerid, modelid);
			TogglePlayerControllable(playerid, 1);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Skin` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][Skin], PI[playerid][SQLID]);

            va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste odecu za 1000$!");
	    }
	    else va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odustali ste od kupovine!"), TogglePlayerControllable(playerid, 1);
    	return 1;
    }
	return 1;
}
// - > Dialogs
Dialog:dialog_login(playerid, response, listitem, inputtext[])
{
	if(!response) return Kick(playerid);

	bcrypt_verify(playerid, "OnPasswordVerify", inputtext, PI[playerid][Password]);
	return 1;
}

Dialog:dialog_register(playerid, response, listitem, inputtext[])
{
    if(!response) return Kick(playerid);

    if(strlen(inputtext) < 6 || strlen(inputtext) > 24 || !CheckPassword(inputtext))
        return Dialog_Show(playerid, dialog_register, DIALOG_STYLE_PASSWORD, "{1b71bc}Registracija", "{FFFFFF}Dobrodosli {1b71bc}%s {FFFFFF}na {1b71bc}Vibe Roleplay\n\
																			 {FFFFFF}Vas korisnicki racun {FF0000}nije registrovan {FFFFFF}u bazi podataka.\n\
																			 {FFFFFF}Molimo vas unesite vasu zeljenu lozinku kako bi pristupili nasem serveru.\n\
																			 {FFFFFF}Lozinka mora sadrzati minimum {F0FFFF}6 {FFFFFF}maksimum {F0FFFF}26 {FFFFFF}karaktera.\n\
																			 {FFFFFF}Vasa lozinka moze sadrzati kombinaciju slova i brojeva {FF0000}(RAZMAK ZABRANJEN).", "Registracija", "Izlaz", ReturnPlayerName(playerid));
															
	bcrypt_hash(playerid, "OnPasswordHash", inputtext, BCRYPT_COST);
	InputPassword[playerid] = true;
	HidePlayerDialog(playerid);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Vasa odabrana lozinka je '%s'.", inputtext);

	Dialog_Show(playerid, dialog_mail, DIALOG_STYLE_INPUT, "{1b71bc}Email", "{FFFFFF}U prazno polje upisite vasu email adresu.\n\
																	{FFFFFF}Molimo vas da unesite tacnu email adresu jer pomocu nje mozete vratiti zaboravjenu lozinku.", "Unesi", "Izlaz");
	return 1;
}

Dialog:dialog_mail(playerid, response, listitem, inputtext[])
{
	if(!response) return Kick(playerid);

	if(strlen(inputtext) < 6 || strlen(inputtext) > 70 || !CheckMail(inputtext) || strfind(inputtext, "@", true) == -1 || strfind(inputtext, ".", true) == -1)
	    return Dialog_Show(playerid, dialog_mail, DIALOG_STYLE_INPUT, "{1b71bc}Email", "{FFFFFF}U prazno polje upisite vasu email adresu.\n\
																	{FFFFFF}Molimo vas da unesite tacnu email adresu jer pomocu nje mozete vratiti zaboravjenu lozinku.", "Unesi", "Izlaz");

    strmid(PI[playerid][Email], inputtext, 0, strlen(inputtext), 50);
    InputMail[playerid] = 1;
    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Vasa odabrana email adresa je '%s'.", inputtext);

    Dialog_Show(playerid, dialog_godine, DIALOG_STYLE_INPUT, "{1b71bc}Godine", "{FFFFFF}U prazno polje upisite koliko imate godina.\n\
                                                                        {FFFFFF}Godine ne smeju ici ispod {F0FFFF}10 {FFFFFF}i iznad {F0FFFF}60 {FFFFFF}godina.", "Unesi", "Izlaz");
	return 1;
}

Dialog:dialog_godine(playerid, response, listitem, inputtext[])
{
    if(!response) return Kick(playerid);

    if(strfind(inputtext, "%", true) != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Mozete koristi samo brojeve!");

    if(!IsNumeric(inputtext))
        return Dialog_Show(playerid, dialog_godine, DIALOG_STYLE_INPUT, "{1b71bc}Godine", "{FFFFFF}U prazno polje upisite koliko imate godina.\n\
                                                                        {FFFFFF}Godine ne smeju ici ispod {F0FFFF}10 {FFFFFF}i iznad {F0FFFF}60 {FFFFFF}godina.", "Unesi", "Izlaz");
	PI[playerid][Godine] = strval(inputtext);
	InputAge[playerid] = strval(inputtext);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odabrali ste da imate '%s' godine.", inputtext);

	Dialog_Show(playerid, dialog_pol, DIALOG_STYLE_MSGBOX, "{1b71bc}Pol", "{FFFFFF}Odaberite sta ce vas karakter da prestavlja u igri.", "Musko", "Zensko");
	return 1;
}

Dialog:dialog_pol(playerid, response, listitem, inputtext[])
{
    if(response)
	{
		InputSex[playerid] = 1;
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odabrali ste 'muski' pol.");
		PI[playerid][Pol] = 1;
		PI[playerid][Skin] = 240;

		Dialog_Show(playerid, dialog_drzava, DIALOG_STYLE_LIST, "{1b71bc}Drzava", "{1b71bc}(1). {FFFFFF}Makedonija\n\
                                                                                   {1b71bc}(2). {FFFFFF}Srbija\n\
                                                                                   {1b71bc}(3). {FFFFFF}Hrvatska\n\
                                                                                   {1b71bc}(4). {FFFFFF}Slovenija\n\
                                                                                   {1b71bc}(5). {FFFFFF}Bosna i Hercegovina\n\
                                                                                   {1b71bc}(6). {FFFFFF}Crna Gora\n\
                                                                                   {1b71bc}(7). {FFFFFF}Albanija\n\
                                                                                   {1b71bc}(8). {FFFFFF}Ostalo", "Unesi", "Izlaz");

	}
 	if(!response)
	{
		InputSex[playerid] = 2;
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odabrali ste 'zenski' pol.");
		PI[playerid][Pol] = 2;
        PI[playerid][Skin] = 91;

		Dialog_Show(playerid, dialog_drzava, DIALOG_STYLE_LIST, "{1b71bc}Drzava", "{1b71bc}(1). {FFFFFF}Makedonija\n\
                                                                                   {1b71bc}(2). {FFFFFF}Srbija\n\
                                                                                   {1b71bc}(3). {FFFFFF}Hrvatska\n\
                                                                                   {1b71bc}(4). {FFFFFF}Slovenija\n\
                                                                                   {1b71bc}(5). {FFFFFF}Bosna i Hercegovina\n\
                                                                                   {1b71bc}(6). {FFFFFF}Crna Gora\n\
                                                                                   {1b71bc}(7). {FFFFFF}Albanija\n\
                                                                                   {1b71bc}(8). {FFFFFF}Ostalo", "Unesi", "Izlaz");
	}
	return 1;
}

Dialog:dialog_drzava(playerid, response, listitem, inputtext[])
{
    if(!response) return Kick(playerid);

	switch(listitem)
	{
	    case 0:
     	{
      		ChooseCountry[playerid] = 1;
      		PI[playerid][Drzava] = 1;
			InsertAcc(playerid);
       		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odabrali ste drzavu '%s'.", CheckCountry(ChooseCountry[playerid]));
		}
		case 1:
     	{
      		ChooseCountry[playerid] = 2;
      		PI[playerid][Drzava] = 2;
      		InsertAcc(playerid);
       		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odabrali ste drzavu '%s'.", CheckCountry(ChooseCountry[playerid]));
		}
		case 2:
     	{
      		ChooseCountry[playerid] = 3;
            PI[playerid][Drzava] = 3;
      		InsertAcc(playerid);
       		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odabrali ste drzavu '%s'.", CheckCountry(ChooseCountry[playerid]));
		}
		case 3:
     	{
      		ChooseCountry[playerid] = 4;
      		PI[playerid][Drzava] = 4;
      		InsertAcc(playerid);
       		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odabrali ste drzavu '%s'.", CheckCountry(ChooseCountry[playerid]));
		}
		case 4:
     	{
      		ChooseCountry[playerid] = 5;
      		PI[playerid][Drzava] = 5;
      		InsertAcc(playerid);
       		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odabrali ste drzavu '%s'.", CheckCountry(ChooseCountry[playerid]));
		}
		case 5:
     	{
      		ChooseCountry[playerid] = 6;
      		PI[playerid][Drzava] = 6;
      		InsertAcc(playerid);
       		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odabrali ste drzavu '%s'.", CheckCountry(ChooseCountry[playerid]));
		}
		case 6:
     	{
      		ChooseCountry[playerid] = 7;
      		PI[playerid][Drzava] = 7;
      		InsertAcc(playerid);
       		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odabrali ste drzavu '%s'.", CheckCountry(ChooseCountry[playerid]));
		}
		case 7:
     	{
      		ChooseCountry[playerid] = 8;
      		PI[playerid][Drzava] = 8;
      		InsertAcc(playerid);
       		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odabrali ste drzavu '%s'.", CheckCountry(ChooseCountry[playerid]));
		}
	}
	return 1;
}

Dialog:dialog_komande(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	switch(listitem)
	{
	    case 0:
     	{
      		Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Opste Komande", "{1b71bc}Komande: {FFFFFF}/b /me /do /stats /z /c /promenilozinku /s /w /eject /bankomat /gorivo /zvoni\n\
                                                                               {1b71bc}Komande: {FFFFFF}/rentajkucu /unrentajkucu /stopmusic /replay /gps /gpsoff /n /rent /unrent /sl /tdboja\n\
                                                                               {1b71bc}Komande: {FFFFFF}/najblizirent /zapalicigaru /ugasicigaru /zavezi /odvezi /naocare /sat /anim /toplista\n\
                                                                               {1b71bc}Komande: {FFFFFF}/call /p /h /sms /broj /smsoglas /askq /report /pogledajodgovor /pojas /otkaz\n\
                                                                               {1b71bc}Komande: {FFFFFF}/lotto /smslotto /podignidobitak /koristi /akcenat /daj\n\
 																		       {1b71bc}Imovina: {FFFFFF}/kupikucu /kuca /kupistan /stan /kupifirmu /firma\n\
 																		       {1b71bc}Vozila: {FFFFFF}Vozila kontrolisete komandom /v.\n\
	                                                                           {1b71bc}Vozila: {FFFFFF}Koristite tipku 2 da upalite ili ugasite motor.\n\
																			   {1b71bc}Vozila: {FFFFFF}Koristite tipku LMB ili ALT da upalite ili ugasite svetla.", "OK", "");
		}
		case 1:
     	{
     	    if(PI[playerid][Lider] == 0)
	 			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi niste lider organizacije!");
	 			
            if(PI[playerid][Lider] == 1)
            {
      			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Lider Komande (Policija)", "{1b71bc}Komande: {FFFFFF}/ubaci /izbaci /dodelirank /clanovi /specijalnaoprema", "OK", "");
			}
			if(PI[playerid][Lider] == 2)
            {
      			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Lider Komande (SAJ)", "{1b71bc}Komande: {FFFFFF}/ubaci /izbaci /dodelirank /clanovi /specijalnaoprema", "OK", "");
			}
			if(PI[playerid][Lider] == 3)
            {
      			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Lider Komande (GSF)", "{1b71bc}Komande: {FFFFFF}/ubaci /izbaci /dodelirank /clanovi", "OK", "");
			}
			if(PI[playerid][Lider] == 4)
            {
      			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Lider Komande (Ballas)", "{1b71bc}Komande: {FFFFFF}/ubaci /izbaci /dodelirank /clanovi", "OK", "");
			}
			if(PI[playerid][Lider] == 5)
            {
      			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Lider Komande (MS13)", "{1b71bc}Komande: {FFFFFF}/ubaci /izbaci /dodelirank /clanovi", "OK", "");
			}
			if(PI[playerid][Lider] == 6)
            {
      			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Lider Komande (BDT)", "{1b71bc}Komande: {FFFFFF}/ubaci /izbaci /dodelirank /clanovi", "OK", "");
			}
			if(PI[playerid][Lider] == 7)
            {
      			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Lider Komande (LCN)", "{1b71bc}Komande: {FFFFFF}/ubaci /izbaci /dodelirank /clanovi", "OK", "");
			}
		}
		case 2:
     	{
     	    if(PI[playerid][Clan] == 0)
	 			return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi niste clan organizacije!");

			if(PI[playerid][Clan] == 1 || PI[playerid][Lider] == 1)
            {
      			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Organizacija Komande (Policija)", "{1b71bc}Komande: {FFFFFF}/f /cuff /uncuff /vuci /pusti /tazer /kazna /najava /su /ocistidosije\n\
				  																				         		    {1b71bc}Komande: {FFFFFF}/pojacanje /ponistilociranje /lociraj /proveridosije /oduzmi /pretresi /clanovi\n\
						                                                                                 		    {1b71bc}Komande: {FFFFFF}/trazeni /pu /uhapsi /alkotest /proveripojas", "OK", "");
			}
			if(PI[playerid][Clan] == 2 || PI[playerid][Lider] == 2)
            {
      			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Organizacija Komande (SAJ)", "{1b71bc}Komande: {FFFFFF}/f /cuff /uncuff /vuci /pusti /tazer /kazna /najava /su /ocistidosije\n\
				  																				         		    {1b71bc}Komande: {FFFFFF}/pojacanje /ponistilociranje /lociraj /proveridosije /oduzmi /pretresi /clanovi\n\
						                                                                                 		    {1b71bc}Komande: {FFFFFF}/trazeni /pu /uhapsi /alkotest /proveripojas", "OK", "");
			}
            if(PI[playerid][Clan] == 3 || PI[playerid][Lider] == 3)
            {
      			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Organizacija Komande (GSF)", "{1b71bc}Komande: {FFFFFF}/f /clanovi /pljackajbanku /pljackajzlataru /kupiseme /posadidrogu /oberidrogu /obradidrogu /zauzmiteritoriju", "OK", "");
			}
			if(PI[playerid][Clan] == 4 || PI[playerid][Lider] == 4)
            {
      			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Organizacija Komande (Ballas)", "{1b71bc}Komande: {FFFFFF}/f /clanovi /pljackajbanku /pljackajzlataru /kupiseme /posadidrogu /oberidrogu /obradidrogu /zauzmiteritoriju", "OK", "");
			}
			if(PI[playerid][Clan] == 5 || PI[playerid][Lider] == 5)
            {
      			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Organizacija Komande (MS13)", "{1b71bc}Komande: {FFFFFF}/f /clanovi /pljackajbanku /pljackajzlataru /kupiseme /posadidrogu /oberidrogu /obradidrogu /zauzmiteritoriju", "OK", "");
			}
			if(PI[playerid][Clan] == 6 || PI[playerid][Lider] == 6)
            {
      			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Organizacija Komande (BDT)", "{1b71bc}Komande: {FFFFFF}/f /clanovi /pljackajbanku /pljackajzlataru /sverc /zauzmiteritoriju", "OK", "");
			}
			if(PI[playerid][Clan] == 7 || PI[playerid][Lider] == 7)
            {
      			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Organizacija Komande (LCN)", "{1b71bc}Komande: {FFFFFF}/f /clanovi /pljackajbanku /pljackajzlataru /sverc /zauzmiteritoriju", "OK", "");
			}
		}
		case 3:
		{
			if(PI[playerid][Admin] < 1)
		        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste admin!");

			new info[1500];
			if(PI[playerid][Admin] >= 1)
			{
				strcat(info, "{FF0000}Admin Level 1\n", sizeof(info));
				strcat(info, "{FFFFFF}/aduty /cc /kill /freeze /unfreeze /rtc /kick /jp /ao /fv /spec /specoff /avozilo /a /goto\n", sizeof(info));
				strcat(info, "{FFFFFF}/gethere /nitro /port /zatvori /fine /pm /count\n\n", sizeof(info));
			}
			if(PI[playerid][Admin] >= 2)
			{
				strcat(info, "{FF0000}Admin Level 2\n", sizeof(info));
				strcat(info, "{FFFFFF}/proveri /warn /skiniwarn /podesivreme /podesisat /mute /unmute /mlista /aocistidosije /rac\n\n", sizeof(info));
			}
			if(PI[playerid][Admin] >= 3)
			{
		 		strcat(info, "{FF0000}Admin Level 3\n", sizeof(info));
				strcat(info, "{FFFFFF}/ban /unban /muzika /bojavozila /apu /banip /unbanip\n\n", sizeof(info));
			}
			if(PI[playerid][Admin] >= 4)
			{
		 		strcat(info, "{FF0000}Admin Level 4 (Head Admin)\n", sizeof(info));
				strcat(info, "{FFFFFF}/setskin /agorivo /fban /setdozvole /makeleader /offmakeleader /nagrade\n\n", sizeof(info));
			}
			if(PI[playerid][Admin] >= 5)
			{
		 		strcat(info, "{FF0000}Admin Level 5 (Direktor)\n", sizeof(info));
				strcat(info, "{FFFFFF}/sviheal /svipancir /aoruzje /oslobodi /makevip /makemteam\n\n", sizeof(info));
			}
			if(PI[playerid][Admin] >= 6)
			{
		 		strcat(info, "{FF0000}Admin Level 6 (Vlasnik)\n", sizeof(info));
				strcat(info, "{FFFFFF}/makeadmin /plata /ubisve /dajnovac /podesinovac /changename /obrisiacc /kreirajbankomat /ebankomat\n", sizeof(info));
				strcat(info, "{FFFFFF}/obrisibankomat /kreirajkucu /ekucu /aprodajkucu /obrisikucu /kreirajstan /estan /aprodajstan\n", sizeof(info));
				strcat(info, "{FFFFFF}/obrisistan /kreirajport /portime /portpoz /kreirajrent /erent /kreirajfirmu /efirmu /efirmu2\n", sizeof(info));
				strcat(info, "{FFFFFF}/kreirajutakmicu /unesirezultat /odigranitiketi /avobrisi /ateritorija /gotopos /kreirajorg /orgime\n", sizeof(info));
				strcat(info, "{FFFFFF}/orgsef /esef /orgskin /orgspawn /orgulaz /orgizlaz /server /kreirajulicu /obrisiulicu /kreirajradar /eradar\n", sizeof(info));
				strcat(info, "{FFFFFF}/kreirajprostitutku /obrisiprostitutku", sizeof(info));
			}
			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{FF0000}Admin Komande", info, "OK", "");
		}
		case 4:
		{
		    if(PI[playerid][Vip] < 1)
		        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste vip!");

			new info[450];
			if(PI[playerid][Vip] >= 1)
			{
				strcat(info, "{1fde79}Vip Level 1\n", sizeof(info));
				strcat(info, "{FFFFFF}/g /goto /dodaci /vipskin /boombox /dodacioff\n\n", sizeof(info));
			}
			if(PI[playerid][Vip] >= 2)
			{
				strcat(info, "{1fde79}Vip Level 2\n", sizeof(info));
				strcat(info, "{FFFFFF}/g /goto /dodaci /port /vipskin /boombox /dodacioff\n\n", sizeof(info));
			}
			if(PI[playerid][Vip] >= 3)
			{
		 		strcat(info, "{1fde79}Vip Level 3\n", sizeof(info));
				strcat(info, "{FFFFFF}/g /goto /dodaci /vrtc /port /vipskin /boombox /vipfix /dodacioff\n\n", sizeof(info));
			}
			if(PI[playerid][Vip] >= 4)
			{
		 		strcat(info, "{1fde79}Vip Level 4\n", sizeof(info));
				strcat(info, "{FFFFFF}/g /goto /dodaci /vrtc /port /vipskin /boombox /dodacioff /vipfix /vportvozilo /vcarrespawn", sizeof(info));
			}
			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1fde79}Vip Komande", info, "OK", "");
		}
		case 5:
		{
		    if(PI[playerid][Posao] == 0)
		        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste zaposleni!");

			if(PI[playerid][Posao] == POSAO_KOSACTRAVE)
			{
				Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Posao Komande", "{1b71bc}Komande: {FFFFFF}/posao /uniforma /startjob /prekiniposao", "OK", "");
			}
			if(PI[playerid][Posao] == POSAO_UBER)
			{
				Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Posao Komande", "{1b71bc}Komande: {FFFFFF}/posao /uniforma /startjob /prekiniposao", "OK", "");
			}
			if(PI[playerid][Posao] == POSAO_PILOT)
			{
				Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Posao Komande", "{1b71bc}Komande: {FFFFFF}/posao /uniforma /startjob /prekiniposao", "OK", "");
			}
			if(PI[playerid][Posao] == POSAO_MASINOVODJA)
			{
				Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Posao Komande", "{1b71bc}Komande: {FFFFFF}/posao /uniforma /startjob /prekiniposao", "OK", "");
			}
		}
		case 6:
		{
		    if(PI[playerid][MTeam] < 1)
		        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste clan marketing tima!");
		        
            Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{c1c675}Marketing Team Komande", "{c1c675}Marketing Team:\n\
																									   {FFFFFF}/g /goto /vipfix /reklama /port", "OK", "");
		}
	}
	return 1;
}

Dialog:dialog_banka(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    switch(listitem)
    {
    	case 0:
		{
  			if(PI[playerid][Kartica] != 0)
		  		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imate otvoren bankovni racun!");

			if(PI[playerid][Novac] < 100)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca (100$)!");
				
			PI[playerid][Novac] -= 100;
			GivePlayerMoney(playerid, -100);
			new pin = 1000 + random(8999);
			PI[playerid][Kartica] = 1;
			PI[playerid][KarticaPin] = pin;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Otvorili ste bankovni racun (-100$).");
			CheckQuestDone(playerid, 9);
			
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Kartica` = '%d', `KarticaPin` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Admin], PI[playerid][Kartica], PI[playerid][KarticaPin], PI[playerid][SQLID]);
		}
		case 1:
		{
  			if(PI[playerid][Kartica] != 1)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas bankovni racun nemozes koristiti ovu opciju!");

			Dialog_Show(playerid, dialog_bostavi, DIALOG_STYLE_INPUT, "{1b71bc}Ostavi novac:", "{FFFFFF}Unesite kolicinu novca koju zelite da ostavite na Vas bankovni racun:", "Ostavi", "Izlaz");
		}
		case 2:
		{
  			if(PI[playerid][Kartica] != 1)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas bankovni racun nemozes koristiti ovu opciju!");

			Dialog_Show(playerid, dialog_buzmi, DIALOG_STYLE_INPUT, "{1b71bc}Podigni novac:", "{FFFFFF}Unesite kolicinu novca koju zelite da podignete sa Vaseg bankovnog racuna:", "Podigni", "Izlaz");
		}
		case 3:
		{
			if(PI[playerid][Kartica] != 1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas bankovni racun nemozes koristiti ovu opciju!");

			if(PI[playerid][Level] < 5)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti minimum level 5 da bi mogli koristiti ovu opciju!");

			Dialog_Show(playerid, dialog_btransfer, DIALOG_STYLE_INPUT, "{1b71bc}Transfer novca:", "{FFFFFF}Unesite ID igraca kome zelite da posaljete novac...", "Unesi", "Izlaz");
		}
		case 4:
		{
  			if(PI[playerid][Kartica] != 1)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas bankovni racun nemozes koristiti ovu opciju!");

			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Stanje racuna:", "{FFFFFF}Trenutno stanje na vasem racunu je: {1b71bc}$%d", "OK", "", PI[playerid][NovacBanka]);
		}
		case 5:
		{
  			if(PI[playerid][Kartica] != 1)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas bankovni racun nemozes koristiti ovu opciju!");

			if(PI[playerid][PreostaloZaOtplatu] > 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec ste podigli jedan kredit, prvo ga otplatite!");

			Dialog_Show(playerid, dialog_krediti, DIALOG_STYLE_LIST, "{1b71bc}Podigni Kredit:", "{FFFFFF}Level: 3 {1b71bc}| {FFFFFF}Kredit: 20.000$ {1b71bc}| {FFFFFF}Rata: 700$\n{FFFFFF}Level: 5 {1b71bc}| {FFFFFF}Kredit: 50.000$ {1b71bc}| {FFFFFF}Rata: 1.750$\n{FFFFFF}Level: 7 {1b71bc}| {FFFFFF}Kredit: 100.000$ {1b71bc}| {FFFFFF}Rata: 3.500$\n", "Odaberi", "Izlaz");
		}
		case 6:
		{
  			if(PI[playerid][Kartica] != 1)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas bankovni racun nemozes koristiti ovu opciju!");

			Dialog_Show(playerid, dialog_vratikredit, DIALOG_STYLE_INPUT, "{1b71bc}Vrati kredit:", "{FFFFFF}Unesite kolicinu novca koju zelite vratiti banci:\nTrenutno imate vratiti jos {1b71bc}%d$", "Unesi", "Izlaz", PI[playerid][PreostaloZaOtplatu]);
		}
	}
	return 1;
}

Dialog:dialog_vratikredit(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(PI[playerid][PreostaloZaOtplatu] <= 0) return 1;

	static iznos,
		string[250];

	if(strfind(inputtext, "%", true) != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Koristite samo brojeve!");

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_vratikredit, DIALOG_STYLE_INPUT, "{1b71bc}Vrati kredit:", "{FFFFFF}Unesite kolicinu novca koju zelite vratiti banci:\nTrenutno imate vratiti jos {1b71bc}%d$", "Unesi", "Izlaz", PI[playerid][PreostaloZaOtplatu]);
					
	if(PI[playerid][Novac] < iznos)
		return Dialog_Show(playerid, dialog_vratikredit, DIALOG_STYLE_INPUT, "{1b71bc}Vrati kredit:", "{FFFFFF}Unesite kolicinu novca koju zelite vratiti banci:\nTrenutno imate vratiti jos {1b71bc}%d$", "Unesi", "Izlaz", PI[playerid][PreostaloZaOtplatu]);

	if(iznos < 1000 && PI[playerid][PreostaloZaOtplatu] > 999)
		return Dialog_Show(playerid, dialog_vratikredit, DIALOG_STYLE_INPUT, "{1b71bc}Vrati kredit:", "{FFFFFF}Unesite kolicinu novca koju zelite vratiti banci:\nTrenutno imate vratiti jos {1b71bc}%d$", "Unesi", "Izlaz", PI[playerid][PreostaloZaOtplatu]);

	if(iznos > PI[playerid][PreostaloZaOtplatu])
	    Dialog_Show(playerid, dialog_vratikredit, DIALOG_STYLE_INPUT, "{1b71bc}Vrati kredit:", "{FFFFFF}Unesite kolicinu novca koju zelite vratiti banci:\nTrenutno imate vratiti jos {1b71bc}%d$", "Unesi", "Izlaz", PI[playerid][PreostaloZaOtplatu]);

	PI[playerid][PreostaloZaOtplatu] -= iznos;
	PI[playerid][Novac] -= iznos;
	GivePlayerMoney(playerid, -iznos);
	UpdateBanka(playerid);
	
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `PreostalozaOtplatu` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][PreostaloZaOtplatu], PI[playerid][SQLID]);

	if(PI[playerid][PreostaloZaOtplatu] > 0)
	{
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Banka: {FFFFFF}Vratili ste %d$ duga, ostalo Vam je jos %d$ da nam vratite!", iznos, PI[playerid][PreostaloZaOtplatu]);
		format(string, sizeof(string), "{C2A2DA}%s vraca ratu kredita.", ReturnPlayerName(playerid));
		ProxMessage(playerid, string, 20.0);
	}
	else if(PI[playerid][PreostaloZaOtplatu] == 0)
	{
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Banka: {FFFFFF}Vratili ste %d$ duga, cime ste vratili sav dug koji ste dugovlali banci!", iznos);
		format(string, sizeof(string), "{C2A2DA}%s vraca kredit.", ReturnPlayerName(playerid));
        ProxMessage(playerid, string, 20.0);
	}
	return 1;
}
Dialog:dialog_krediti(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    if(PI[playerid][PreostaloZaOtplatu] > 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec ste podigli jedan kredit, prvo ga otplatite!");

	switch(listitem)
	{
		case 0:
		{
			if(PI[playerid][Level] < 3) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti minimum level 3 da bih mogli podici ovaj kredit!");

			PI[playerid][IznosKredita] = 20000;
			PI[playerid][IznosRate] = 700;
			PI[playerid][PreostaloZaOtplatu] = PI[playerid][IznosKredita];

			PI[playerid][NovacBanka] += PI[playerid][IznosKredita];

			new string[100];
			format(string, sizeof(string), "{C2A2DA}%s podize kredit.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Podigli ste kredit u iznosu od 20.000$ sa ratom od 700$ (na svaki PayDay).");

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `IznosKredita` = '%d', `IznosRate` = '%d', `PreostalozaOtplatu` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][IznosKredita], PI[playerid][PreostaloZaOtplatu], PI[playerid][SQLID]);

			UpdateBanka(playerid);
		}
		case 1:
		{
		    if(PI[playerid][Level] < 5) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti minimum level 5 da bih mogli podici ovaj kredit!");

			PI[playerid][IznosKredita] = 50000;
			PI[playerid][IznosRate] = 1750;
			PI[playerid][PreostaloZaOtplatu] = PI[playerid][IznosKredita];

			PI[playerid][NovacBanka] += PI[playerid][IznosKredita];

			new string[100];
			format(string, sizeof(string), "{C2A2DA}%s podize kredit.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Podigli ste kredit u iznosu od 50.000$ sa ratom od 1750$ (na svaki PayDay).");

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `IznosKredita` = '%d', `IznosRate` = '%d', `PreostalozaOtplatu` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][IznosKredita], PI[playerid][PreostaloZaOtplatu], PI[playerid][SQLID]);
				
			UpdateBanka(playerid);
		}
		case 2:
		{
		    if(PI[playerid][Level] < 7) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti minimum level 7 da bih mogli podici ovaj kredit!");

			PI[playerid][IznosKredita] = 100000;
			PI[playerid][IznosRate] = 3500;
			PI[playerid][PreostaloZaOtplatu] = PI[playerid][IznosKredita];

			PI[playerid][NovacBanka] += PI[playerid][IznosKredita];

			new string[100];
			format(string, sizeof(string), "{C2A2DA}%s podize kredit.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Podigli ste kredit u iznosu od 100.000$ sa ratom od 3500$ (na svaki PayDay).");

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `IznosKredita` = '%d', `IznosRate` = '%d', `PreostalozaOtplatu` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][IznosKredita], PI[playerid][PreostaloZaOtplatu], PI[playerid][SQLID]);
				
			UpdateBanka(playerid);
		}
	}
	return 1;
}

Dialog:dialog_bostavi(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	static iznos,
		string[250];

	if(strfind(inputtext, "%", true) != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Koristite samo brojeve!");

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_bostavi, DIALOG_STYLE_INPUT, "{1b71bc}Ostavi novac:", "{FFFFFF}Unesite kolicinu novca koju zelite da ostavite na Vas bankovni racun:", "Ostavi", "Izlaz");

	if(PI[playerid][Novac] < iznos)
	    return Dialog_Show(playerid, dialog_bostavi, DIALOG_STYLE_INPUT, "{1b71bc}Ostavi novac:", "{FFFFFF}Unesite kolicinu novca koju zelite da ostavite na Vas bankovni racun:", "Ostavi", "Izlaz");

	PI[playerid][NovacBanka] += iznos;
	PI[playerid][Novac] -= iznos;
	GivePlayerMoney(playerid, -iznos);
	
	UpdateBanka(playerid);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `NovacBanka` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][NovacBanka], PI[playerid][SQLID]);

	format(string, sizeof(string), "{C2A2DA}* %s ostavlja novac na bankovni racun.", ReturnPlayerName(playerid));
	ProxMessage(playerid, string, 20.0);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ostavili ste %d$ na Vas bankovni racun.", iznos);
	return 1;
}

Dialog:dialog_buzmi(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	static iznos,
		string[250];

	if(strfind(inputtext, "%", true) != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Koristite samo brojeve!");

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_buzmi, DIALOG_STYLE_INPUT, "{1b71bc}Podigni novac:", "{FFFFFF}Unesite kolicinu novca koju zelite da podignete sa Vaseg bankovnog racuna:", "Podigni", "Izlaz");

	if(PI[playerid][NovacBanka] < iznos)
        return Dialog_Show(playerid, dialog_buzmi, DIALOG_STYLE_INPUT, "{1b71bc}Podigni novac:", "{FFFFFF}Unesite kolicinu novca koju zelite da podignete sa Vaseg bankovnog racuna:", "Podigni", "Izlaz");

	if(iznos < 1 || iznos > 2000000)
		return Dialog_Show(playerid, dialog_buzmi, DIALOG_STYLE_INPUT, "{1b71bc}Podigni novac:", "{FFFFFF}Unesite kolicinu novca koju zelite da podignete sa Vaseg bankovnog racuna:", "Podigni", "Izlaz");

	PI[playerid][NovacBanka] -= iznos;
	PI[playerid][Novac] += iznos;
	GivePlayerMoney(playerid, iznos);
	
	UpdateBanka(playerid);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `NovacBanka` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][NovacBanka], PI[playerid][SQLID]);

	format(string, sizeof(string), "{C2A2DA}* %s dize novac sa bankovnog racuna.", ReturnPlayerName(playerid));
	ProxMessage(playerid, string, 20.0);
			
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Podigli ste %d$ sa Vaseg bankovnog racuna.", iznos);
	return 1;
}

Dialog:dialog_btransfer(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	static id;

	if(strfind(inputtext, "%", true) != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Koristite samo brojeve!");

	if(sscanf(inputtext, "i", id))
		return Dialog_Show(playerid, dialog_btransfer, DIALOG_STYLE_INPUT, "{1b71bc}Transfer novca:", "{FFFFFF}Unesite ID igraca kome zelite da posaljete novac...", "Unesi", "Izlaz");

	if(!IsPlayerConnected(id))
	{
        Dialog_Show(playerid, dialog_btransfer, DIALOG_STYLE_INPUT, "{1b71bc}Transfer novca:", "{FFFFFF}Unesite ID igraca kome zelite da posaljete novac...", "Unesi", "Izlaz");
		va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogrijesili ste ID!");
  		return 1;
	}
	if(PI[id][Kartica] != 1)
	{
		Dialog_Show(playerid, dialog_btransfer, DIALOG_STYLE_INPUT, "{1b71bc}Transfer novca:", "{FFFFFF}Unesite ID igraca kome zelite da posaljete novac...", "Unesi", "Izlaz");
		va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nema otvoren bankovni racun!");
  		return 1;
	}
	if(id == playerid)
	{
		Dialog_Show(playerid, dialog_btransfer, DIALOG_STYLE_INPUT, "{1b71bc}Transfer novca:", "{FFFFFF}Unesite ID igraca kome zelite da posaljete novac...", "Unesi", "Izlaz");
		va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete sami sebi slati novac!");
  		return 1;
	}

	KomeSalje[playerid] = id;
    Dialog_Show(playerid, dialog_btransfer2, DIALOG_STYLE_INPUT, "{1b71bc}Transfer novca:", "{FFFFFF}Unesite kolicinu novca koju zelite da posaljete igracu %s.", "Posalji", "Izlaz", ReturnPlayerName(id));
    return 1;
}

Dialog:dialog_btransfer2(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    new iznos, string[250];

	if(strfind(inputtext, "%", true) != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Koristite samo brojeve!");

	if(sscanf(inputtext, "i", iznos))
	    return Dialog_Show(playerid, dialog_btransfer2, DIALOG_STYLE_INPUT, "{1b71bc}Transfer novca:", "{FFFFFF}Unesite kolicinu novca koju zelite da posaljete igracu %s.", "Posalji", "Izlaz", ReturnPlayerName(KomeSalje[playerid]));

	if(PI[playerid][NovacBanka] < iznos)
	    return Dialog_Show(playerid, dialog_btransfer2, DIALOG_STYLE_INPUT, "{1b71bc}Transfer novca:", "{FFFFFF}Unesite kolicinu novca koju zelite da posaljete igracu %s.", "Posalji", "Izlaz", ReturnPlayerName(KomeSalje[playerid]));

	if(iznos < 1 || iznos > 5000000)
	    return Dialog_Show(playerid, dialog_btransfer2, DIALOG_STYLE_INPUT, "{1b71bc}Transfer novca:", "{FFFFFF}Unesite kolicinu novca koju zelite da posaljete igracu %s.", "Posalji", "Izlaz", ReturnPlayerName(KomeSalje[playerid]));

	if(PI[KomeSalje[playerid]][Level] < 2)
	{
	    Dialog_Show(playerid, dialog_btransfer2, DIALOG_STYLE_INPUT, "{1b71bc}Transfer novca:", "{FFFFFF}Unesite kolicinu novca koju zelite da posaljete igracu %s.", "Posalji", "Izlaz", ReturnPlayerName(KomeSalje[playerid]));
    	va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac mora biti minimum level 2!");
	    return 1;
	}

	PI[playerid][NovacBanka] -= iznos;
	
	UpdateBanka(playerid);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `NovacBanka` = '%d' WHERE `SQLID` = '%d'", PI[playerid][NovacBanka], PI[playerid][SQLID]);

	PI[KomeSalje[playerid]][NovacBanka] += iznos;
	UpdateBanka(KomeSalje[playerid]);

	mysql_tqueryEx(SQL, "UPDATE `users` SET `NovacBanka` = '%d' WHERE `SQLID` = '%d'", PI[KomeSalje[playerid]][NovacBanka], PI[KomeSalje[playerid]][SQLID]);

	format(string, sizeof(string), "{C2A2DA}* %s vrsi transver novca.", ReturnPlayerName(playerid));
	ProxMessage(playerid, string, 20.0);

	va_SendClientMessage(KomeSalje[playerid], 0x1b71bcFF, "[BANKA]: {FFFFFF}Igrac %s Vam je poslao %d$ novca na Vas bankovni racun!", ReturnPlayerName(playerid), iznos);
	va_SendClientMessage(playerid, 0x1b71bcFF, "[BANKA]: {FFFFFF}Poslali ste igracu %s na bankovni racun %s$ novca!", ReturnPlayerName(KomeSalje[playerid]), iznos);
	KomeSalje[playerid] = -1;
	return 1;
}

Dialog:dialog_zlatara(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    switch(listitem)
    {
		case 0:
		{
			Dialog_Show(playerid, dialog_zkupovina, DIALOG_STYLE_INPUT, "{1b71bc}Kupovina zlata:", "{FFFFFF}Unesite kolicinu zlata koju zelite da kupite:", "Kupi", "Izadji");
		}
		case 1:
		{
  			Dialog_Show(playerid, dialog_zprodaja, DIALOG_STYLE_INPUT, "{1b71bc}Prodaja zlata:", "{FFFFFF}Unesite kolicinu zlata koju zelite da prodate:", "Kupi", "Izadji");
		}
	}
	return 1;
}

Dialog:dialog_zkupovina(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	static kolicina,
		cena = 1001;

	if(strfind(inputtext, "%", true) != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Koristite samo brojeve!");

	if(sscanf(inputtext, "i", kolicina)) 
	    return Dialog_Show(playerid, dialog_zkupovina, DIALOG_STYLE_INPUT, "{1b71bc}Kupovina zlata:", "{FFFFFF}Unesite kolicinu zlata koju zelite da kupite:", "Kupi", "Izadji");

	if(kolicina < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ici ispod 1 i iznad max kolicine zlata!");

	if(PI[playerid][Novac] < kolicina*cena)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

	PI[playerid][Novac] -= kolicina*cena;
	GivePlayerMoney(playerid, -kolicina*cena);
	PI[playerid][Zlato] += kolicina;
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Zlato` = '%d' WHERE `SQLID` = '%d'", PI[playerid][NovacBanka], PI[playerid][Zlato], PI[playerid][SQLID]);
	UpdateZlato(playerid);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste %dg zlata za %d$.", kolicina, kolicina*cena);
	return 1;
}

Dialog:dialog_zprodaja(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	static kolicina,
		cena = 1000;

	if(strfind(inputtext, "%", true) != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Koristite samo brojeve!");

	if(sscanf(inputtext, "i", kolicina))
	    return Dialog_Show(playerid, dialog_zprodaja, DIALOG_STYLE_INPUT, "{1b71bc}Prodaja zlata:", "{FFFFFF}Unesite kolicinu zlata koju zelite da prodate:", "Kupi", "Izadji");

	if(kolicina < 1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ici ispod 1 i iznad max kolicine zlata!");

	if(PI[playerid][Novac] < kolicina*cena)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

	PI[playerid][Novac] += kolicina*cena;
	GivePlayerMoney(playerid, kolicina*cena);
	PI[playerid][Zlato] -= kolicina;
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Zlato` = '%d' WHERE `SQLID` = '%d'", PI[playerid][NovacBanka], PI[playerid][Zlato], PI[playerid][SQLID]);
	UpdateZlato(playerid);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prodali ste %dg zlata za %d$.", kolicina, kolicina*cena);
	return 1;
}

Dialog:dialog_akcenat(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;
	
	switch(listitem)
	{
		case 0:
	    {
	     	PI[playerid][Akcenat] = 1;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Akcenat: {FFFFFF}Postavili ste vas akcenat na Engleski!");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Akcenat` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Akcenat], PI[playerid][SQLID]);
		}
		case 1:
	    {
	      	PI[playerid][Akcenat] = 2;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Akcenat: {FFFFFF}Postavili ste vas akcenat na Ruski!");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Akcenat` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Akcenat], PI[playerid][SQLID]);
		}
		case 2:
	    {
	    	PI[playerid][Akcenat] = 3;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Akcenat: {FFFFFF}Postavili ste vas akcenat na Nemacki!");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Akcenat` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Akcenat], PI[playerid][SQLID]);
		}
		case 3:
	    {
	      	PI[playerid][Akcenat] = 4;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Akcenat: {FFFFFF}Postavili ste vas akcenat na Francuski!");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Akcenat` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Akcenat], PI[playerid][SQLID]);
		}
		case 4:
	    {
	      	PI[playerid][Akcenat] = 5;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Akcenat: {FFFFFF}Postavili ste vas akcenat na Talijanski!");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Akcenat` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Akcenat], PI[playerid][SQLID]);
		}
		case 5:
	    {
	      	PI[playerid][Akcenat] = 6;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Akcenat: {FFFFFF}Postavili ste vas akcenat na Albanski!");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Akcenat` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Akcenat], PI[playerid][SQLID]);
		}
		case 6:
	    {
	      	PI[playerid][Akcenat] = 7;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Akcenat: {FFFFFF}Postavili ste vas akcenat na Italijanski!");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Akcenat` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Akcenat], PI[playerid][SQLID]);
		}
		case 7:
	    {
	      	PI[playerid][Akcenat] = 8;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Akcenat: {FFFFFF}Postavili ste vas akcenat na Spanski!");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Akcenat` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Akcenat], PI[playerid][SQLID]);
		}	
		case 8:
	    {
	      	PI[playerid][Akcenat] = 0;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Akcenat: {FFFFFF}Skinuli ste vas akcenat!");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Akcenat` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Akcenat], PI[playerid][SQLID]);
		}
	}
	return 1;
}

Dialog:dialog_bolnica(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;

	switch(listitem)
	{
		case 0: // Lecenje
		{
			if(PI[playerid][Novac] < 500)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas dovoljno novca (500$).");

			static Float: HP; 
			GetPlayerHealth(playerid, HP);
					
			if(HP >= 99) 
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nije Vam potrebno lecenje (HP Vam je na 100)!");

			PI[playerid][Novac] -= 500;
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);

			SetPlayerHealth(playerid, 99.0);
			va_SendClientMessage(playerid, 0xFF0000FF, "#Info: {FFFFFF}Uspesno ste izleceni (-500$).");
		}
		case 1: // Lecenje zavisnosti
		{
			if(PI[playerid][Novac] < 30000)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas dovoljno novca (30000$).");
					
			if(PI[playerid][DrogaOvisan] == 0) 
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste zavisnik droge!");

			PI[playerid][Novac] -= 30000;
			PI[playerid][DrogaOvisan] = 0;
			PI[playerid][DrogaUzeoPuta] = 0;
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `DrogaUzeoPuta` = '%d', `DrogaOvisan` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][DrogaUzeoPuta], PI[playerid][DrogaOvisan], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0xFF0000FF, "#Info: {FFFFFF}Uspesno ste izlecili zavisnot nemojte koristiti vise drogu (-30000$).");
		}
	}
	return 1;
}

Dialog:dialog_oruzaonica(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;

	if(!ClanMafije(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo clanovi mafije.");

	switch(listitem)
	{
		case 0: // Colt 45
		{
			if(PI[playerid][Mats] < 500)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas 500 materijala.");

			PI[playerid][Mats] -= 500;
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Mats` = '%d', `Zlato` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Mats], PI[playerid][SQLID]);

			GivePlayerWeapon(playerid, WEAPON_COLT45, 70);
			va_SendClientMessage(playerid, 0xFF0000FF, "#Info: {FFFFFF}Napravili ste Colt - 45 za 500 materijala.");
		}
		case 1: // Deagle
		{
			if(PI[playerid][Mats] < 750)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas 750 materijala.");

			PI[playerid][Mats] -= 750;
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Mats` = '%d', `Zlato` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Mats], PI[playerid][SQLID]);

			GivePlayerWeapon(playerid, WEAPON_DEAGLE, 100);
			va_SendClientMessage(playerid, 0xFF0000FF, "#Info: {FFFFFF}Napravili ste Deagle za 750 materijala.");
		}
		case 2: // Shoutgun
		{
			if(PI[playerid][Mats] < 600)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas 600 materijala.");

			PI[playerid][Mats] -= 600;
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Mats` = '%d', `Zlato` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Mats], PI[playerid][SQLID]);

			GivePlayerWeapon(playerid, WEAPON_SHOTGUN, 50);
			va_SendClientMessage(playerid, 0xFF0000FF, "#Info: {FFFFFF}Napravili ste Shoutgun za 750 materijala.");
		}
		case 3: // MP5
		{
			if(PI[playerid][Mats] < 900)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas 600 materijala.");

			PI[playerid][Mats] -= 900;
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Mats` = '%d', `Zlato` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Mats], PI[playerid][SQLID]);

			GivePlayerWeapon(playerid, WEAPON_MP5, 120);
			va_SendClientMessage(playerid, 0xFF0000FF, "#Info: {FFFFFF}Napravili ste MP5 za 900 materijala.");
		}
		case 4: // AK-47
		{
			if(PI[playerid][Mats] < 1200)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas 1200 materijala.");

			PI[playerid][Mats] -= 1200;
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Mats` = '%d', `Zlato` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Mats], PI[playerid][SQLID]);

			GivePlayerWeapon(playerid, WEAPON_AK47, 150);
			va_SendClientMessage(playerid, 0xFF0000FF, "#Info: {FFFFFF}Napravili ste AK-47 za 1200 materijala.");
		}
		case 5: // M4
		{
			if(PI[playerid][Mats] < 1300)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas 1300 materijala.");

			PI[playerid][Mats] -= 1300;
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Mats` = '%d', `Zlato` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Mats], PI[playerid][SQLID]);

			GivePlayerWeapon(playerid, WEAPON_M4, 170);
			va_SendClientMessage(playerid, 0xFF0000FF, "#Info: {FFFFFF}Napravili ste M4 za 1300 materijala.");
		}
	}
	return 1;
}

Dialog:dialog_dozvole(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    switch(listitem)
	{
		case 0:
		{
			if(PI[playerid][ADozvola] > 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imate vozacku dozvolu!");

			if(PI[playerid][Novac] < 1000)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas dovljno novac (1000$)!");

			PI[playerid][Novac] -= 1000;
			GivePlayerMoney(playerid, -1000);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#AS: {FFFFFF}Zapoceli ste polaganje pratite crvene markere!");
			va_SendClientMessage(playerid, -1, "Pazite da ne ostetite vozilo usuprotnom necete poloziti ispit!");
			va_SendClientMessage(playerid, -1, "Ukoliko predjete 100KM/H dobivate 1 kazneni poen!");
			Job_Vehicle[playerid][jveh_ID] = AddStaticVehicleEx(410, 1996.4308, -1767.1531, 13.3790, 0.3868, 79, 1, 2400);
  			Polaganje_Vozilo[playerid] = 1;
  			new string[150];
    		format(string, sizeof(string), "{1b71bc}[ POLAGANJE VOZILO ]\n{FFFFFF}%s", ReturnPlayerName(playerid));
			Job_Vehicle[playerid][jveh_Veh3D] = CreateDynamic3DTextLabel(string, -1 , 0.0, 0.0, 0.0, 15.0,_, Job_Vehicle[playerid][jveh_ID],_, 0, 0,_,_);
			PutPlayerInVehicle(playerid, Job_Vehicle[playerid][jveh_ID], 0);
			SetPlayerCheckpoint(playerid, 1968.4052,-1749.6682,13.3828, 2.5);
			Polaganje_CP[playerid] = 1;
			Polaganje_Greske[playerid] = 0;
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);

		}
		case 1:
		{
			if(PI[playerid][KamionDozvola] > 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec posedujes dozvolu za voznju kamiona!");

			if(PI[playerid][Novac] < 2000)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas dovljno novac (2000$)!");

            PI[playerid][Novac] -= 2000;
			GivePlayerMoney(playerid, -2000);
			PI[playerid][KamionDozvola] = 1;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#AS: {FFFFFF}Uspesno ste kupili dozvolu za kamion (-2000$)!");
			
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `KamionDozvola` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][KamionDozvola], PI[playerid][SQLID]);
		}
		case 2:
		{
			if(PI[playerid][MotorDozvola] > 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec posedujes dozvolu za voznju motora!");

			if(PI[playerid][Novac] < 500)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas dovljno novac (500$)!");

            PI[playerid][Novac] -= 500;
			GivePlayerMoney(playerid, -500);
			PI[playerid][MotorDozvola] = 1;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#AS: {FFFFFF}Uspesno ste kupili dozvolu za motor (-500$)!");

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `MotorDozvola` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][MotorDozvola], PI[playerid][SQLID]);
		}
		case 3:
		{
			if(PI[playerid][AvionDozvola] > 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec posedujes dozvolu za voznju aviona!");

			if(PI[playerid][Novac] < 4000)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas dovljno novac (4000$)!");

            PI[playerid][Novac] -= 4000;
			GivePlayerMoney(playerid, -4000);
			PI[playerid][AvionDozvola] = 1;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#AS: {FFFFFF}Uspesno ste kupili dozvolu za avion (-4000$)!");

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `AvionDozvola` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][AvionDozvola], PI[playerid][SQLID]);
		}
		case 4:
		{
			if(PI[playerid][BrodDozvola] > 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec posedujes dozvolu za voznju broda!");

			if(PI[playerid][Novac] < 3000)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas dovljno novac (4000$)!");

            PI[playerid][Novac] -= 3000;
			GivePlayerMoney(playerid, -3000);
			PI[playerid][BrodDozvola] = 1;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#AS: {FFFFFF}Uspesno ste kupili dozvolu za brod (-3000$)!");

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `BrodDozvola` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][BrodDozvola], PI[playerid][SQLID]);
		}
	}
	return 1;
}

Dialog:dialog_avozila(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    switch(listitem)
	{
		case 0:
		{
		    static Float:Pos[4];
			GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
			GetPlayerFacingAngle(playerid, Pos[3]);

            vozilo1 = AddStaticVehicleEx(560, Pos[0], Pos[1], Pos[2], Pos[3], 1, 1, 2400);
			PutPlayerInVehicle(playerid,vozilo1,0);
			AdminVozilo[playerid] = vozilo1;
			new str[156];
			format(str, sizeof(str), "{ddd74e}[ STAFF ]\n{FFFFFF}%s: %s", GetStaffRankName(PI[playerid][Admin]), ReturnPlayerName(playerid));
			StaffVeh[AdminVozilo[playerid]] = CreateDynamic3DTextLabel(str, -1 , Pos[0], Pos[1], Pos[2], 15.0,_, vozilo1,_, 0, 0,_,_);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Stvorili ste Admin Vozilo.");

			new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), 1, lights, alarm, doors, bonnet, boot, objective);
		}
		case 1:
		{
		    static Float:Pos[4];
			GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
			GetPlayerFacingAngle(playerid, Pos[3]);
			
	    	vozilo1 = AddStaticVehicleEx(522, Pos[0], Pos[1], Pos[2], Pos[3], 1, 1, 2400);
			PutPlayerInVehicle(playerid,vozilo1,0);
			AdminVozilo[playerid] = vozilo1;
			new str[156];
			format(str, sizeof(str), "{ddd74e}[ STAFF ]\n{FFFFFF}%s: %s", GetStaffRankName(PI[playerid][Admin]), ReturnPlayerName(playerid));
			StaffVeh[AdminVozilo[playerid]] = CreateDynamic3DTextLabel(str, -1 , Pos[0], Pos[1], Pos[2], 15.0,_, vozilo1,_, 0, 0,_,_);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Stvorili ste Admin Vozilo.");

			new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), 1, lights, alarm, doors, bonnet, boot, objective);
		}
		case 2:
		{
		    static Float:Pos[4];
			GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
			GetPlayerFacingAngle(playerid, Pos[3]);
			
	    	vozilo1 = AddStaticVehicleEx(579, Pos[0], Pos[1], Pos[2], Pos[3], 1, 1, 2400);
			PutPlayerInVehicle(playerid,vozilo1,0);
			AdminVozilo[playerid] = vozilo1;
			new str[156];
			format(str, sizeof(str), "{ddd74e}[ STAFF ]\n{FFFFFF}%s: %s", GetStaffRankName(PI[playerid][Admin]), ReturnPlayerName(playerid));
			StaffVeh[AdminVozilo[playerid]] = CreateDynamic3DTextLabel(str, -1 , Pos[0], Pos[1], Pos[2], 15.0,_, vozilo1,_, 0, 0,_,_);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Stvorili ste Admin Vozilo.");

			new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), 1, lights, alarm, doors, bonnet, boot, objective);
		}
	}
	return 1;
}

Dialog:dialog_nagrade(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    switch(listitem)
    {
    	case 0:
    	{
    		Dialog_Show(playerid, dialog_levelup, DIALOG_STYLE_INPUT, "{1b71bc}Nagrada - {FFFFFF}Level UP", "Unesite kolicinu levela koju cete dodeliti igracima...", "Unesi", "Izlaz");
    	}
    	case 1:
    	{
    		Dialog_Show(playerid, dialog_respectup, DIALOG_STYLE_INPUT, "{1b71bc}Nagrada - {FFFFFF}Respect UP", "Unesite kolicinu respekta koju cete dodeliti igracima...", "Unesi", "Izlaz");
    	}
    	case 2:
    	{
    		Dialog_Show(playerid, dialog_moneyup, DIALOG_STYLE_INPUT, "{1b71bc}Nagrada - {FFFFFF}Money UP", "Unesite kolicinu novca koju cete dodeliti igracima...", "Unesi", "Izlaz");
    	}
    	case 3:
    	{
    		Dialog_Show(playerid, dialog_goldup, DIALOG_STYLE_INPUT, "{1b71bc}Nagrada - {FFFFFF}Gold UP", "Unesite kolicinu zlata koju cete dodeliti igracima...", "Unesi", "Izlaz");
    	}
    }
    return 1;
}

Dialog:dialog_levelup(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;
	
	new kolicina = strval(inputtext);
	
	if(kolicina < 0 || kolicina > 3) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "Greska: {FFFFFF}Kolicina levela ne smije biti manja od 0 niti veca od 3!");
				
	foreach(new i : Player)
	{
		if(Ulogovan[i] == 1)
		{
			PI[i][Level] += kolicina;
			SetPlayerScore(i, PI[i][Level]);
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Level` = '%d' WHERE `SQLID` = '%d'", PI[i][Level], PI[i][SQLID]);
		}
	}
	va_SendClientMessageToAll(0x1b71bcFF, "#LEVEL-UP: {FFFFFF}%s %s je dodelio svim igracima +%d Level/a.", GetStaffRankName(PI[playerid][Admin]), ReturnPlayerName(playerid), kolicina);
	return 1;
}

Dialog:dialog_respectup(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;
	
	new kolicina = strval(inputtext);
	
	if(kolicina < 0 || kolicina > 3) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "Greska: {FFFFFF}Kolicina respekta ne smije biti manja od 0 niti veca od 3!");
				
	foreach(new i : Player)
	{
		if(Ulogovan[i] == 1)
		{
			new iskustvo = 0;
            iskustvo = (PI[i][Level] * 2) + 2;
            PI[i][Respekti] += kolicina;
            if(PI[i][Respekti] >= iskustvo)
            {
            	PI[i][Level]++;
                SetPlayerScore(i, PI[i][Level]);
                PI[i][Respekti] = 0;
                va_SendClientMessage(i, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo, postali ste LEVEL %d!", PI[i][Level]);
            }
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Level` = '%d', `Respekti` = '%d' WHERE `SQLID` = '%d'", PI[i][Level], PI[i][Respekti], PI[i][SQLID]);
		}
	}
	va_SendClientMessageToAll(0x1b71bcFF, "#RESPECT-UP: {FFFFFF}%s %s je dodelio svim igracima +%d Respekt/a.", GetStaffRankName(PI[playerid][Admin]), ReturnPlayerName(playerid), kolicina);
	return 1;
}

Dialog:dialog_moneyup(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;

	new kolicina = strval(inputtext);
	
	if(kolicina < 0 || kolicina > 100000) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "Greska: {FFFFFF}Kolicina novca ne smije biti manja od 0 niti veca od 100000$!");
				
	foreach(new i : Player)
	{
		if(Ulogovan[i] == 1)
		{
			PI[i][Novac] += kolicina;
			GivePlayerMoney(i, kolicina);
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[i][Novac], PI[i][SQLID]);
		}
	}
	va_SendClientMessageToAll(0x1b71bcFF, "#MONEY-UP: {FFFFFF}%s %s je dodelio svim igracima +%d$.", GetStaffRankName(PI[playerid][Admin]), ReturnPlayerName(playerid), kolicina);
	return 1;
}

Dialog:dialog_goldup(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;
	
	new kolicina = strval(inputtext);
	
	if(kolicina < 0 || kolicina > 4) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "Greska: {FFFFFF}Kolicina zlata ne smije biti manja od 0 niti veca od 4!");
				
	foreach(new i : Player)
	{
		if(Ulogovan[i] == 1)
		{
			PI[i][Zlato] += kolicina;
			UpdateZlato(i);
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Zlato` = '%d' WHERE `SQLID` = '%d'", PI[i][Zlato], PI[i][SQLID]);
		}
	}
	va_SendClientMessageToAll(0x1b71bcFF, "#GOLD-UP: {FFFFFF}%s %s je dodelio svim igracima +%dg zlata.", GetStaffRankName(PI[playerid][Admin]), ReturnPlayerName(playerid), kolicina);
	return 1;
}

Dialog:dialog_tdcol(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	switch(listitem)
	{
        case 0:
        {
            PI[playerid][TDBoja] = HexToInt("0x0066CCFF");
            UnistiTDs(playerid);
			KreirajTDs(playerid);
			if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
	 		{
		    	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    	{
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][5], PI[playerid][TDBoja]);
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][6], PI[playerid][TDBoja]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][5]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][6]);
	            }
			}
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili boju TD-ova.");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `TDCol` = '%d' WHERE `SQLID` = '%d'", PI[playerid][TDBoja], PI[playerid][SQLID]);
			CheckQuestDone(playerid, 11);
		}
		case 1:
  		{
            PI[playerid][TDBoja] = HexToInt("0xFF0000FF");
            UnistiTDs(playerid);
			KreirajTDs(playerid);
			if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
	 		{
		    	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    	{
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][5], PI[playerid][TDBoja]);
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][6], PI[playerid][TDBoja]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][5]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][6]);
	            }
			}
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili boju TD-ova.");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `TDCol` = '%d' WHERE `SQLID` = '%d'", PI[playerid][TDBoja], PI[playerid][SQLID]);
			CheckQuestDone(playerid, 11);
		}
		case 2:
  		{
            PI[playerid][TDBoja] = HexToInt("0x00FF00FF");
            UnistiTDs(playerid);
			KreirajTDs(playerid);
			if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
	 		{
		    	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    	{
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][5], PI[playerid][TDBoja]);
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][6], PI[playerid][TDBoja]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][5]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][6]);
	            }
			}
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili boju TD-ova.");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `TDCol` = '%d' WHERE `SQLID` = '%d'", PI[playerid][TDBoja], PI[playerid][SQLID]);
			CheckQuestDone(playerid, 11);
		}
		case 3:
  		{
            PI[playerid][TDBoja] = HexToInt("0xFF80FFFF");
            UnistiTDs(playerid);
			KreirajTDs(playerid);
			if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
	 		{
		    	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    	{
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][5], PI[playerid][TDBoja]);
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][6], PI[playerid][TDBoja]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][5]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][6]);
	            }
			}
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili boju TD-ova.");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `TDCol` = '%d' WHERE `SQLID` = '%d'", PI[playerid][TDBoja], PI[playerid][SQLID]);
			CheckQuestDone(playerid, 11);
		}
		case 4:
  		{
            PI[playerid][TDBoja] = HexToInt("0xFFFF00FF");
            UnistiTDs(playerid);
			KreirajTDs(playerid);
			if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
	 		{
		    	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    	{
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][5], PI[playerid][TDBoja]);
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][6], PI[playerid][TDBoja]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][5]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][6]);
	            }
			}
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili boju TD-ova.");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `TDCol` = '%d' WHERE `SQLID` = '%d'", PI[playerid][TDBoja], PI[playerid][SQLID]);
			CheckQuestDone(playerid, 11);
		}
		case 5:
  		{
            PI[playerid][TDBoja] = HexToInt("0x800000FF");
            UnistiTDs(playerid);
			KreirajTDs(playerid);
			if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
	 		{
		    	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    	{
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][5], PI[playerid][TDBoja]);
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][6], PI[playerid][TDBoja]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][5]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][6]);
	            }
			}
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili boju TD-ova.");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `TDCol` = '%d' WHERE `SQLID` = '%d'", PI[playerid][TDBoja], PI[playerid][SQLID]);
			CheckQuestDone(playerid, 11);
		}
		case 6:
  		{
            PI[playerid][TDBoja] = HexToInt("0xFF8000FF");
            UnistiTDs(playerid);
			KreirajTDs(playerid);
			if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
	 		{
		    	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    	{
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][5], PI[playerid][TDBoja]);
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][6], PI[playerid][TDBoja]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][5]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][6]);
	            }
			}
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili boju TD-ova.");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `TDCol` = '%d' WHERE `SQLID` = '%d'", PI[playerid][TDBoja], PI[playerid][SQLID]);
			CheckQuestDone(playerid, 11);
		}
		case 7:
  		{
            PI[playerid][TDBoja] = HexToInt("0x400080FF");
            UnistiTDs(playerid);
			KreirajTDs(playerid);
			if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
	 		{
		    	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    	{
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][5], PI[playerid][TDBoja]);
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][6], PI[playerid][TDBoja]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][5]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][6]);
	            }
			}
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili boju TD-ova.");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `TDCol` = '%d' WHERE `SQLID` = '%d'", PI[playerid][TDBoja], PI[playerid][SQLID]);
			CheckQuestDone(playerid, 11);
		}
		case 8:
  		{
            PI[playerid][TDBoja] = HexToInt("0x808080FF");
            UnistiTDs(playerid);
			KreirajTDs(playerid);
			if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
	 		{
		    	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    	{
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][5], PI[playerid][TDBoja]);
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][6], PI[playerid][TDBoja]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][5]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][6]);
	            }
			}
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili boju TD-ova.");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `TDCol` = '%d' WHERE `SQLID` = '%d'", PI[playerid][TDBoja], PI[playerid][SQLID]);
			CheckQuestDone(playerid, 11);
		}
		case 9:
  		{
            PI[playerid][TDBoja] = 997448959;
            UnistiTDs(playerid);
			KreirajTDs(playerid);
			if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
	 		{
		    	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    	{
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][5], PI[playerid][TDBoja]);
			    	PlayerTextDrawColor(playerid, BrzinaTD[playerid][6], PI[playerid][TDBoja]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][5]);
			    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][6]);
	            }
			}
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili boju TD-ova.");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `TDCol` = '%d' WHERE `SQLID` = '%d'", PI[playerid][TDBoja], PI[playerid][SQLID]);
			CheckQuestDone(playerid, 11);
		}
		case 10:
		{
		    Dialog_Show(playerid, dialog_tdcolc, DIALOG_STYLE_INPUT, "{1b71bc}Custom boja", "{FFFFFF}Na internetu mozete naci neki RGB color picker i unijeti kod\nkao sto je sajt {1b71bc}www.webfx.com/web-design/color-picker/\n{FFFFFF}Primjer: FF00FF", "Unesi", "Izlaz");
		}
	}
	return 1;
}

Dialog:dialog_tdcolc(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	new color[24], str[24];

	if(sscanf(inputtext, "s[24]", color))
		return Dialog_Show(playerid, dialog_tdcolc, DIALOG_STYLE_INPUT, "{1b71bc}Custom boja", "{FFFFFF}Na internetu mozete naci neki RGB color picker i unijeti kod\nkao sto je sajt {1b71bc}www.webfx.com/web-design/color-picker/\n{FFFFFF}Primjer: FF00FF", "Unesi", "Izlaz");

	format(str, sizeof(str), "0x%sFF", color);
 	PI[playerid][TDBoja] = HexToInt(str);
 	UnistiTDs(playerid);
	KreirajTDs(playerid);
	CheckQuestDone(playerid, 11);
	if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(playerid))))
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
 		{
  			PlayerTextDrawColor(playerid, BrzinaTD[playerid][5], PI[playerid][TDBoja]);
    		PlayerTextDrawColor(playerid, BrzinaTD[playerid][6], PI[playerid][TDBoja]);
	    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][5]);
	    	PlayerTextDrawShow(playerid, BrzinaTD[playerid][6]);
        }
	}
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili boju TD-ova.");
	mysql_tqueryEx(SQL, "UPDATE `users` SET `TDCol` = '%d' WHERE `SQLID` = '%d'", PI[playerid][TDBoja], PI[playerid][SQLID]);
	return 1;
}

Dialog:dialog_toplist(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	switch(listitem)
	{
	    case 0:
	    {
     		new Cache:result, int = 0, imestr[24], count;
  			new DialogStrgEx[2048], globalstring[150];
		    result = mysql_query(SQL, "SELECT * FROM `users` ORDER BY `Level` DESC LIMIT 10");
		    if(result)
			{
			    strdel(DialogStrgEx, 0, sizeof(DialogStrgEx));
		        strcat(DialogStrgEx, "{FFFFFF}Ime\t{FFFFFF}Level\n");
			    cache_get_row_count(count);
				if(count)
				{
		            for(new i = 0; i < count; i++)
		            {
			            cache_get_value_name(i, "Ime", imestr, 24);
					    cache_get_value_name_int(i, "Level", int);
					    format(globalstring, sizeof(globalstring), "{FFFFFF}%s\t%d\n", imestr, int);
						strcat(DialogStrgEx, globalstring);
				    }
				    Dialog_Show(playerid, dialog_none, DIALOG_STYLE_TABLIST_HEADERS, "{1b71bc}Top Lista", DialogStrgEx, "OK", "");
				    strdel(DialogStrgEx, 0, sizeof(DialogStrgEx));

				}
				cache_delete(result);
			}
		}
		case 1:
		{
		    new Cache:result, int = 0, imestr[24], count;
  			new DialogStrgEx[2048], globalstring[150];
		    result = mysql_query(SQL, "SELECT * FROM `users` ORDER BY `SatiIgre` DESC LIMIT 10");
		    if(result)
			{
			    strdel(DialogStrgEx, 0, sizeof(DialogStrgEx));
		        strcat(DialogStrgEx, "{FFFFFF}Ime\t{FFFFFF}Sati Igre\n");
			    cache_get_row_count(count);
				if(count)
				{
		            for(new i = 0; i < count; i++)
		            {
			            cache_get_value_name(i, "Ime", imestr, 24);
					    cache_get_value_name_int(i, "SatiIgre", int);
					    format(globalstring, sizeof(globalstring), "{FFFFFF}%s\t%dh\n", imestr, int);
						strcat(DialogStrgEx, globalstring);
				    }
				    Dialog_Show(playerid, dialog_none, DIALOG_STYLE_TABLIST_HEADERS, "{1b71bc}Top Lista", DialogStrgEx, "OK", "");
				    strdel(DialogStrgEx, 0, sizeof(DialogStrgEx));

				}
				cache_delete(result);
			}
		}
		case 2:
		{
		   	new Cache:result, imestr[24], novac, banka, count;
  			new DialogStrgEx[2048], globalstring[150];
		    result = mysql_query(SQL, "SELECT * FROM `users` ORDER BY `Novac` AND `NovacBanka` DESC LIMIT 10");
		    if(result)
			{
			    strdel(DialogStrgEx, 0, sizeof(DialogStrgEx));
		        strcat(DialogStrgEx, "{FFFFFF}Ime\t{FFFFFF}Novac\n");
			    cache_get_row_count(count);
				if(count)
				{
		            for(new i = 0; i < count; i++)
		            {
			            cache_get_value_name(i, "Ime", imestr, 24);
					    cache_get_value_name_int(i, "Novac", novac);
					    cache_get_value_name_int(i, "NovacBanka", banka);
					    format(globalstring, sizeof(globalstring), "{FFFFFF}%s\t%d$\n", imestr, novac+banka);
						strcat(DialogStrgEx, globalstring);
				    }
				    Dialog_Show(playerid, dialog_none, DIALOG_STYLE_TABLIST_HEADERS, "{1b71bc}Top Lista", DialogStrgEx, "OK", "");
				    strdel(DialogStrgEx, 0, sizeof(DialogStrgEx));

				}
				cache_delete(result);
			}
		}
		case 3:
		{
		    new Cache:result, int = 0, imestr[24], count;
  			new DialogStrgEx[2048], globalstring[150];
		    result = mysql_query(SQL, "SELECT * FROM `users` ORDER BY `Zlato` DESC LIMIT 10");
		    if(result)
			{
			    strdel(DialogStrgEx, 0, sizeof(DialogStrgEx));
		        strcat(DialogStrgEx, "{FFFFFF}Ime\t{FFFFFF}Zlato\n");
			    cache_get_row_count(count);
				if(count)
				{
		            for(new i = 0; i < count; i++)
		            {
			            cache_get_value_name(i, "Ime", imestr, 24);
					    cache_get_value_name_int(i, "Zlato", int);
					    format(globalstring, sizeof(globalstring), "{FFFFFF}%s\t%dg\n", imestr, int);
						strcat(DialogStrgEx, globalstring);
				    }
				    Dialog_Show(playerid, dialog_none, DIALOG_STYLE_TABLIST_HEADERS, "{1b71bc}Top Lista", DialogStrgEx, "OK", "");
				    strdel(DialogStrgEx, 0, sizeof(DialogStrgEx));

				}
				cache_delete(result);
			}
		}
	}
	return 1;
}

Dialog:dialog_reklama(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;

	switch(listitem)
	{
	    case 0:
	    {
	        if(PI[playerid][Novac] < 500)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca za reklamu (500$).");

            if(gettime() < Reklama_Poslana)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Do sledece reklame sacekajte %d sekundi.", Reklama_Poslana-gettime());

			Reklama_Poslana = gettime()+900;

			SendClientMessageToAll(-1, "{1b71bc}=================== > {FFFFFF}REKLAMA {1b71bc}< =========================");
            SendClientMessageToAll(-1, "{FFFFFF}Uzivajte, zabavljajte se i razgovarajte sa clanovima");
            SendClientMessageToAll(-1, "{FFFFFF}na nasem teamspeak serveru");
            SendClientMessageToAll(-1, "{FFFFFF}IP naseg TS3 servera je: {1b71bc}viberoleplay!");
            va_SendClientMessageToAll(-1, "{FFFFFF}Reklama od igraca: {1b71bc}%s", ReturnPlayerName(playerid));
            SendClientMessageToAll(-1, "{1b71bc}======================================================");

            PI[playerid][Novac] -= 500;
            GivePlayerMoney(playerid, -500);
            mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
		}
		case 1:
	    {
	        if(PI[playerid][Novac] < 500)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca za reklamu (500$).");
				
            if(gettime() < Reklama_Poslana)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Do sledece reklame sacekajte %d sekundi.", Reklama_Poslana-gettime());

			Reklama_Poslana = gettime()+900;

			SendClientMessageToAll(-1, "{1b71bc}=================== > {FFFFFF}REKLAMA {1b71bc}< =========================");
            SendClientMessageToAll(-1, "{FFFFFF}Slike naseg servera, novosti i nagradne igre");
            SendClientMessageToAll(-1, "{FFFFFF}mozete pratiti na nasu Facebook stranicu");
            SendClientMessageToAll(-1, "{FFFFFF}FaceBook Stranica je: {1b71bc}Vibe Roleplay Online Gaming Community!");
            va_SendClientMessageToAll(-1, "{FFFFFF}Reklama od igraca: {1b71bc}%s", ReturnPlayerName(playerid));
            SendClientMessageToAll(-1, "{1b71bc}======================================================");

            PI[playerid][Novac] -= 500;
            GivePlayerMoney(playerid, -500);
            mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
		}
		case 2:
	    {
	        if(PI[playerid][Novac] < 500)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca za reklamu (500$).");
				
            if(gettime() < Reklama_Poslana)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Do sledece reklame sacekajte %d sekundi.", Reklama_Poslana-gettime());

			Reklama_Poslana = gettime()+900;

			SendClientMessageToAll(-1, "{1b71bc}=================== > {FFFFFF}REKLAMA {1b71bc}< =========================");
            SendClientMessageToAll(-1, "{FFFFFF}Slike naseg servera, novosti i nagradne igre");
            SendClientMessageToAll(-1, "{FFFFFF}mozete pratiti na nas Instagram profil");
            SendClientMessageToAll(-1, "{FFFFFF}Instagram Profil je: {1b71bc}vibeogcoffical");
            va_SendClientMessageToAll(-1, "{FFFFFF}Reklama od igraca: {1b71bc}%s", ReturnPlayerName(playerid));
            SendClientMessageToAll(-1, "{1b71bc}======================================================");

            PI[playerid][Novac] -= 500;
            GivePlayerMoney(playerid, -500);
            mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
		}
		case 3:
	    {
	        if(PI[playerid][Novac] < 500)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca za reklamu (500$).");
				
            if(gettime() < Reklama_Poslana)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Do sledece reklame sacekajte %d sekundi.", Reklama_Poslana-gettime());

			Reklama_Poslana = gettime()+900;

			SendClientMessageToAll(-1, "{1b71bc}=================== > {FFFFFF}REKLAMA {1b71bc}< =========================");
            SendClientMessageToAll(-1, "{FFFFFF}Zalbe, prijave, pohvale i ostale stvari");
            SendClientMessageToAll(-1, "{FFFFFF}mozete raditi na nas Forum");
            SendClientMessageToAll(-1, "{FFFFFF}URL naseg Foruma: {1b71bc}www.vibe-roleplay.ogc.samp.info");
            va_SendClientMessageToAll(-1, "{FFFFFF}Reklama od igraca: {1b71bc}%s", ReturnPlayerName(playerid));
            SendClientMessageToAll(-1, "{1b71bc}======================================================");

            PI[playerid][Novac] -= 500;
            GivePlayerMoney(playerid, -500);
            mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
		}
	}
	return 1;
}

Dialog:dialog_plift(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    switch(listitem)
    {
        case 0:
        {
            Ucitavanje_Objekata(playerid);
	    	SetPlayerPos(playerid, 1571.8448,-1675.6110,28.3955);
	    	SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
		case 1:
		{
            Ucitavanje_Objekata(playerid);
		    SetPlayerPos(playerid, 1568.6903,-1690.6263,5.8906);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerVirtualWorld(playerid, 0);
		}
	}
	return 1;
}

Dialog:dialog_poprema(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    switch(listitem)
    {
        case 0:
        {
            Dialog_Show(playerid, dialog_poruzije, DIALOG_STYLE_TABLIST, "{1b71bc}Oruzija", "{1b71bc}> {FFFFFF}M4\t{1b71bc}300 metaka\n\
																				        	{1b71bc}> {FFFFFF}Deagle\t{1b71bc}300 metaka\n\
																							{1b71bc}> {FFFFFF}Shootgun\t{1b71bc}300 metaka\n\
																							{1b71bc}> {FFFFFF}MP5\t{1b71bc}300 metaka\n\
																							{1b71bc}> {FFFFFF}Sprej\t{1b71bc}300 metaka\n\
																							{1b71bc}> {FFFFFF}Pendrek\t{1b71bc}1 metak\n\
																							{1b71bc}> {FFFFFF}Snajper\t{1b71bc}300 metaka", "Odaberi", "Izlaz");
		}
		case 1:
		{
            Dialog_Show(playerid, dialog_punder, DIALOG_STYLE_LIST, "{1b71bc}Undercover", "{1b71bc}> {FFFFFF}Mafijas\n\
																	                       {1b71bc}> {FFFFFF}Biznismen\n\
																						   {1b71bc}> {FFFFFF}Army\n\
																						   {1b71bc}> {FFFFFF}Obican Momak\n\
																						   {1b71bc}> {FFFFFF}Kartel\n\
																						   {1b71bc}> {FFFFFF}Zenski Undercover", "Odaberi", "Izlaz");
		}
		case 2:
		{
		    SetPlayerHealth(playerid, 100);
			SetPlayerArmour(playerid, 100);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste Pancir i Helte!");
		}
		case 3:
		{
		    if(PI[playerid][Clan] == 1 && soprema == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemozete uzeti specijalnu opremu dok lider neodobri!");

			SetPlayerHealth(playerid, 100);
			SetPlayerArmour(playerid, 100);
			GivePlayerWeapon(playerid, WEAPON_DEAGLE, 300);
			GivePlayerWeapon(playerid, WEAPON_M4, 300);
			GivePlayerWeapon(playerid, WEAPON_SNIPER, 300);
			GivePlayerWeapon(playerid, WEAPON_SHOTGUN, 300);
			GivePlayerWeapon(playerid, WEAPON_TEARGAS, 100);

			SetPlayerSkin(playerid,285);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste specijalnu opremu!");
		}
		case 4:
		{
		    new stskin = PI[playerid][Skin];
			SetPlayerSkin(playerid, stskin);
   			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeo si svoju staru odjecu!");
		}
	}
	return 1;
}

Dialog:dialog_poruzije(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    if(PI[playerid][OruzijeDozvola] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dozvolu za oruzije!");

    switch(listitem)
    {
        case 0:
		{
			GivePlayerWeapon(playerid, WEAPON_M4, 300);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste M4!");
		}
		case 1:
		{
			GivePlayerWeapon(playerid, WEAPON_DEAGLE, 300);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste Deagle!");
		}
		case 2:
		{
			GivePlayerWeapon(playerid, WEAPON_SHOTGUN, 300);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste Shotgun!");
		}
        case 3:
		{
			GivePlayerWeapon(playerid, WEAPON_MP5, 300);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste MP5!");
		}
	    case 4:
		{
			GivePlayerWeapon(playerid, WEAPON_SPRAYCAN, 300);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste Sprej!");
		}
	    case 5:
		{
			GivePlayerWeapon(playerid, WEAPON_NITESTICK, 1);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste Pendrek!");
		}
	    case 6:
		{
			GivePlayerWeapon(playerid, WEAPON_SNIPER, 300);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste Snajper!");
		}
	}
	return 1;
}

Dialog:dialog_opdsef(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    new OrgID = PI[playerid][Clan];

	switch(listitem)
 	{
  		case 0:
		{
			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Stanje u sefu", "{1b71bc}Novac: {FFFFFF}%d$", "OK", "", OrgInfo[OrgID][oSefNovac]);
		}
		case 1:
		{
			if(PI[playerid][Lider] < 1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo lider moze uzimati stvari iz sefa!");
   			Dialog_Show(playerid, dialog_orgunovac, DIALOG_STYLE_INPUT, "{1b71bc}Novac", "{FFFFFF}Unesite kolicinu novca koju zelite da uzmete...", "Uzmi", "Izlaz");
		}
		case 2:
		{
  			Dialog_Show(playerid, dialog_orgonovac, DIALOG_STYLE_INPUT, "{1b71bc}Novac", "{FFFFFF}Unesite kolicinu novca koju zelite da ostavite...", "Ostavi", "Izlaz");
		}
	}
	return 1;
}

Dialog:dialog_osef(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    new OrgID = PI[playerid][Clan];

	switch(listitem)
 	{
  		case 0:
		{
			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Stanje u sefu", "{1b71bc}Novac: {FFFFFF}%d$\n\
   																							  {1b71bc}Droga: {FFFFFF}%d g\n\
	  																						  {1b71bc}Mats: {FFFFFF}%d", "OK", "",
                           																	  OrgInfo[OrgID][oSefNovac], OrgInfo[OrgID][oSefDroga], OrgInfo[OrgID][oSefMats]);
		}
		case 1:
		{
			if(PI[playerid][Lider] < 1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo lider moze uzimati stvari iz sefa!");
   			Dialog_Show(playerid, dialog_orgunovac, DIALOG_STYLE_INPUT, "{1b71bc}Novac", "{FFFFFF}Unesite kolicinu novca koju zelite da uzmete...", "Uzmi", "Izlaz");
		}
		case 2:
		{
  			Dialog_Show(playerid, dialog_orgonovac, DIALOG_STYLE_INPUT, "{1b71bc}Novac", "{FFFFFF}Unesite kolicinu novca koju zelite da ostavite...", "Ostavi", "Izlaz");
		}
		case 3:
		{
			if(PI[playerid][Lider] < 1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo lider moze uzimati stvari iz sefa!");
			Dialog_Show(playerid, dialog_orgudrogu, DIALOG_STYLE_INPUT, "{1b71bc}Droga", "{FFFFFF}Unesite kolicinu droge koju zelite da uzmete...", "Uzmi", "Izlaz");
		}
		case 4:
		{
			Dialog_Show(playerid, dialog_orgodrogu, DIALOG_STYLE_INPUT, "{1b71bc}Droga", "{FFFFFF}Unesite kolicinu droge koju zelite da ostavite...", "Ostavi", "Izlaz");
		}
		case 5:
		{
			if(PI[playerid][Lider] < 1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Samo lider moze uzimati stvari iz sefa!");
   			Dialog_Show(playerid, dialog_orgumats, DIALOG_STYLE_INPUT, "{1b71bc}Mats", "{FFFFFF}Unesite kolicinu materijala koju zelite da uzmete...", "Uzmi", "Izlaz");
		}
		case 6:
		{
			Dialog_Show(playerid, dialog_orgomats, DIALOG_STYLE_INPUT, "{1b71bc}Mats", "{FFFFFF}Unesite kolicinu materijala koju zelite da ostavite...", "Ostavi", "Izlaz");
		}
	}
	return 1;
}

Dialog:dialog_orgumats(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    new iznos, str[156], OrgID = PI[playerid][Lider];

	if(strfind(inputtext, "%", true) != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Koristite samo brojeve!");

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_orgumats, DIALOG_STYLE_INPUT, "{1b71bc}Mats", "{FFFFFF}Unesite kolicinu materijala koju zelite da uzmete...", "Uzmi", "Izlaz");

	if(iznos < 1 || iznos > 100000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kolicina droge ne moze biti ispod 1 i iznad 100.000!");

	if(iznos > OrgInfo[OrgID][oSefMats])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nema toliko materijala u sefu!");

	PI[playerid][Mats] += iznos;
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Mats` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Mats], PI[playerid][SQLID]);

 	OrgInfo[OrgID][oSefNovac] -= iznos;
 	mysql_tqueryEx(SQL, "UPDATE `organizations` SET `SefMats` = '%d' WHERE `SQLID` = '%d'", OrgInfo[OrgID][oSefMats], OrgInfo[OrgID][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste %d materijala iz sefa!", iznos);

    format(str, sizeof(str), "{C2A2DA}* %s uzima materijale iz sefa.", ReturnPlayerName(playerid));
	ProxMessage(playerid, str, 20.0);
	
	OrgLabel(OrgID);

	format(str, sizeof(str), "#Lider: {FFFFFF}%s je uzeo %d materijala iz sefa.", ReturnPlayerName(playerid), iznos);
	OrgPoruka(OrgID, 0x1fdea7FF, str);
	return 1;
}

Dialog:dialog_orgomats(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    new iznos, str[156], OrgID = PI[playerid][Clan];

	if(strfind(inputtext, "%", true) != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Koristite samo brojeve!");

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_orgomats, DIALOG_STYLE_INPUT, "{1b71bc}Mats", "{FFFFFF}Unesite kolicinu materijala koju zelite da ostavite...", "Ostavi", "Izlaz");

	if(iznos < 1 || iznos > 100000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kolicina droge ne moze biti ispod 1 i iznad 100.000!");

	if(iznos > PI[playerid][Mats])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko materijala kod sebe!");

	PI[playerid][Mats] -= iznos;
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Mats` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Mats], PI[playerid][SQLID]);

 	OrgInfo[OrgID][oSefMats] += iznos;
 	mysql_tqueryEx(SQL, "UPDATE `organizations` SET `SefMats` = '%d' WHERE `SQLID` = '%d'", OrgInfo[OrgID][oSefMats], OrgInfo[OrgID][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ostavili ste %d materijala u sef!", iznos);

    format(str, sizeof(str), "{C2A2DA}* %s ostavlja materijale u sef.", ReturnPlayerName(playerid));
	ProxMessage(playerid, str, 20.0);
	
	OrgLabel(OrgID);

	format(str, sizeof(str), "#Clan: {FFFFFF}%s je ostavio %d materijala u sef.", ReturnPlayerName(playerid), iznos);
	OrgPoruka(OrgID, 0x1fdea7FF, str);
	return 1;
}

Dialog:dialog_orgodrogu(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    new iznos, str[156], OrgID = PI[playerid][Clan];

	if(strfind(inputtext, "%", true) != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Koristite samo brojeve!");

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_orgodrogu, DIALOG_STYLE_INPUT, "{1b71bc}Droga", "{FFFFFF}Unesite kolicinu droge koju zelite da ostavite...", "Ostavi", "Izlaz");

	if(iznos < 1 || iznos > 100000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kolicina droge ne moze biti ispod 1 i iznad 100.000!");

	if(iznos > PI[playerid][Droga])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko droge kod sebe!");

	PI[playerid][Droga] -= iznos;
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Droga` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Droga], PI[playerid][SQLID]);

 	OrgInfo[OrgID][oSefDroga] += iznos;
 	mysql_tqueryEx(SQL, "UPDATE `organizations` SET `SefDroga` = '%d' WHERE `SQLID` = '%d'", OrgInfo[OrgID][oSefDroga], OrgInfo[OrgID][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ostavili ste %dg droge u sef!", iznos);

    format(str, sizeof(str), "{C2A2DA}* %s ostavlja drogu u sef.", ReturnPlayerName(playerid));
	ProxMessage(playerid, str, 20.0);
	
	OrgLabel(OrgID);

	format(str, sizeof(str), "#Clan: {FFFFFF}%s je ostavio %dg droge u sef.", ReturnPlayerName(playerid), iznos);
	OrgPoruka(OrgID, 0x1fdea7FF, str);
	return 1;
}

Dialog:dialog_orgudrogu(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    new iznos, str[156], OrgID = PI[playerid][Lider];

	if(strfind(inputtext, "%", true) != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Koristite samo brojeve!");

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_orgudrogu, DIALOG_STYLE_INPUT, "{1b71bc}Droga", "{FFFFFF}Unesite kolicinu droge koju zelite da uzmete...", "Uzmi", "Izlaz");

	if(iznos < 1 || iznos > 100000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kolicina droge ne moze biti ispod 1 i iznad 100.000!");

	if(iznos > OrgInfo[OrgID][oSefDroga])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nema toliko droge u sefu!");

	PI[playerid][Droga] += iznos;
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Droga` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Droga], PI[playerid][SQLID]);
	
 	OrgInfo[OrgID][oSefDroga] -= iznos;
 	mysql_tqueryEx(SQL, "UPDATE `organizations` SET `SefDroga` = '%d' WHERE `SQLID` = '%d'", OrgInfo[OrgID][oSefDroga], OrgInfo[OrgID][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste %dg droge iz sefa!", iznos);

    format(str, sizeof(str), "{C2A2DA}* %s uzima drogu iz sefa.", ReturnPlayerName(playerid));
	ProxMessage(playerid, str, 20.0);
	
	OrgLabel(OrgID);

	format(str, sizeof(str), "#Lider: {FFFFFF}%s je uzeo %dg droge iz sefa.", ReturnPlayerName(playerid), iznos);
	OrgPoruka(OrgID, 0x1fdea7FF, str);
	return 1;
}

Dialog:dialog_orgonovac(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    new iznos, str[156], OrgID = PI[playerid][Clan];

	if(strfind(inputtext, "%", true) != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Koristite samo brojeve!");

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_orgonovac, DIALOG_STYLE_INPUT, "{1b71bc}Novac", "{FFFFFF}Unesite kolicinu novca koju zelite da ostavite...", "Ostavi", "Izlaz");

	if(iznos < 1 || iznos > 100000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kolicina novca ne moze biti ispod 1 i iznad 100.000!");

	if(iznos > PI[playerid][Novac])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko novca!");

	PI[playerid][Novac] -= iznos;
	GivePlayerMoney(playerid, -iznos);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);

 	OrgInfo[OrgID][oSefNovac] += iznos;
 	mysql_tqueryEx(SQL, "UPDATE `organizations` SET `SefNovac` = '%d' WHERE `SQLID` = '%d'", OrgInfo[OrgID][oSefNovac], OrgInfo[OrgID][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ostavili ste %d$ novca u sef!", iznos);

    format(str, sizeof(str), "{C2A2DA}* %s ostavlja novac u sef.", ReturnPlayerName(playerid));
	ProxMessage(playerid, str, 20.0);
	
	OrgLabel(OrgID);

	format(str, sizeof(str), "#Clan: {FFFFFF}%s je ostavio %d$ u sef.", ReturnPlayerName(playerid), iznos);
	OrgPoruka(OrgID, 0x1fdea7FF, str);
	return 1;
}

Dialog:dialog_orgunovac(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    new iznos, str[156], OrgID = PI[playerid][Lider];

	if(strfind(inputtext, "%", true) != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Koristite samo brojeve!");

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_orgunovac, DIALOG_STYLE_INPUT, "{1b71bc}Novac", "{FFFFFF}Unesite kolicinu novca koju zelite da uzmete...", "Uzmi", "Izlaz");

	if(iznos < 1 || iznos > 100000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kolicina novca ne moze biti ispod 1 i iznad 100.000!");

	if(iznos > OrgInfo[OrgID][oSefNovac])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nema toliko novca u sefu!");

	PI[playerid][Novac] += iznos;
	GivePlayerMoney(playerid, iznos);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);

 	OrgInfo[OrgID][oSefNovac] -= iznos;
 	mysql_tqueryEx(SQL, "UPDATE `organizations` SET `SefNovac` = '%d' WHERE `SQLID` = '%d'", OrgInfo[OrgID][oSefNovac], OrgInfo[OrgID][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste %d$ novca iz sefa!", iznos);

    format(str, sizeof(str), "{C2A2DA}* %s uzima novac iz sefa.", ReturnPlayerName(playerid));
	ProxMessage(playerid, str, 20.0);
	
	OrgLabel(OrgID);

	format(str, sizeof(str), "#Lider: {FFFFFF}%s je uzeo %d$ iz sefa.", ReturnPlayerName(playerid), iznos);
	OrgPoruka(OrgID, 0x1fdea7FF, str);
	return 1;
}

Dialog:dialog_punder(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    switch(listitem)
    {
        case 0:
        {
           	SetPlayerSkin(playerid, 126);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Obukli ste se u Mafijasa!");
		}
		case 1:
		{
			SetPlayerSkin(playerid, 186);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Obukli ste se u Biznismena!");
		}
		case 2:
		{
			SetPlayerSkin(playerid, 121);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Obukli ste se u Army!");
		}
		case 3:
		{
			SetPlayerSkin(playerid, 119);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Obukli ste se u Obicnog Momka!");
		}
		case 4:
		{
			SetPlayerSkin(playerid, 60);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Obukli ste se u Kartela!");
		}
		case 5:
		{
  			if(PI[playerid][Pol] != 2)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste Zensko!");

			SetPlayerSkin(playerid, 141);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Obukli ste se u Zenski Undercover!");
		}
	}
	return 1;
}

Dialog:dialog_vipskin(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	switch(listitem)
	{
        case 0:
		{
			SetPlayerSkin(playerid, 5); //Bumbar
		}
		case 1:
		{
			SetPlayerSkin(playerid, 4); //Mrsa
		}
        case 2:
		{
			SetPlayerSkin(playerid, 8); //Riki
		}
        case 3:
		{
			SetPlayerSkin(playerid, 22); //Milos
		}
		case 4:
        {
			SetPlayerSkin(playerid, 66); //Mica
        }
        case 5:
        {
			SetPlayerSkin(playerid, 101); //Nikola
        }
        case 6:
        {
			SetPlayerSkin(playerid, 112); //Celavi
        }
        case 7:
        {
			SetPlayerSkin(playerid, 137); //Prosjak
        }
		case 8:
        {
			SetPlayerSkin(playerid, 158); //Seljak
        }
        case 9:
        {
			SetPlayerSkin(playerid, 167); //Kokosar
        }
        case 10:
        {
			SetPlayerSkin(playerid, 206); //Zoran
        }
        case 11:
        {
			SetPlayerSkin(playerid, 252); //Peder :D
        }
        case 12:
        {
			SetPlayerSkin(playerid, 260); //Gradjevinac :D
        }
        case 13:
        {
			SetPlayerSkin(playerid, 264); //Klovn :D
        }
        case 14:
        {
			SetPlayerSkin(playerid, 289); //Streberko :D
        }
	}
	return 1;
}

Dialog:dialog_let(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	switch(listitem)
	{
	    case 0:
     	{
     	    Job_Vehicle[playerid][jveh_ID] = AddStaticVehicleEx(519, 1916.6470, -2313.8928,14.4964, 187.4024, -1, -1, 2400);
  			Pilot_Vozilo[playerid] = 1;
  			new string[150];
    		format(string, sizeof(string), "{1fde8c}[ PILOT ]\n{FFFFFF}%s", ReturnPlayerName(playerid));
			Job_Vehicle[playerid][jveh_Veh3D] = CreateDynamic3DTextLabel(string, -1 , 0.0, 0.0, 0.0, 15.0,_, Job_Vehicle[playerid][jveh_ID],_, 0, 0,_,_);
			PutPlayerInVehicle(playerid, Job_Vehicle[playerid][jveh_ID], 0);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Zapoceli ste rutu Los Santos - San Fierro pratite {FF0000}crvene {FFFFFF}markere!");
			SetPlayerCheckpoint(playerid, 1847.4221,-2414.0798,13.5547, 3.0);
			PilotCP[playerid] = 1;

		}
		case 1:
     	{
      		Job_Vehicle[playerid][jveh_ID] = AddStaticVehicleEx(519, 1916.6470, -2313.8928,14.4964, 187.4024, -1, -1, 2400);
  			Pilot_Vozilo[playerid] = 1;
  			new string[150];
    		format(string, sizeof(string), "{1fde8c}[ PILOT ]\n{FFFFFF}%s", ReturnPlayerName(playerid));
			Job_Vehicle[playerid][jveh_Veh3D] = CreateDynamic3DTextLabel(string, -1 , 0.0, 0.0, 0.0, 15.0,_, Job_Vehicle[playerid][jveh_ID],_, 0, 0,_,_);
			PutPlayerInVehicle(playerid, Job_Vehicle[playerid][jveh_ID], 0);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Zapoceli ste rutu Los Santos - Las Venturas pratite {FF0000}crvene {FFFFFF}markere!");
			SetPlayerCheckpoint(playerid, 1847.4221,-2414.0798,13.5547, 3.0);
			PilotCP[playerid] = 4;
		}
		case 2:
     	{
      		Job_Vehicle[playerid][jveh_ID] = AddStaticVehicleEx(519, 1916.6470, -2313.8928,14.4964, 187.4024, -1, -1, 2400);
  			Pilot_Vozilo[playerid] = 1;
  			new string[150];
    		format(string, sizeof(string), "{1fde8c}[ PILOT ]\n{FFFFFF}%s", ReturnPlayerName(playerid));
			Job_Vehicle[playerid][jveh_Veh3D] = CreateDynamic3DTextLabel(string, -1 , 0.0, 0.0, 0.0, 15.0,_, Job_Vehicle[playerid][jveh_ID],_, 0, 0,_,_);
			PutPlayerInVehicle(playerid, Job_Vehicle[playerid][jveh_ID], 0);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Zapoceli ste rutu Los Santos - Las Venturas - San Fierro pratite {FF0000}crvene {FFFFFF}markere!");
			SetPlayerCheckpoint(playerid, 1847.4221,-2414.0798,13.5547, 3.0);
			PilotCP[playerid] = 7;
		}
	}
	return 1;
}

Dialog:dialog_bankomat(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    switch(listitem)
	{
	    case 0:
		{
			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Stanje racuna:", "{FFFFFF}Trenutno stanje na vasem racunu je: {1b71bc}$%d", "OK", "", PI[playerid][NovacBanka]);
		}
		case 1:
		{
		    Dialog_Show(playerid, dialog_bauzmi, DIALOG_STYLE_INPUT, "{1b71bc}Podigni novac:", "{FFFFFF}Unesite kolicinu novca koju zelite da podignete sa Vaseg bankovnog racuna:", "Podigni", "Izlaz");
		}
	}
	return 1;
}

Dialog:dialog_bauzmi(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	static iznos,
		string[250];

	if(strfind(inputtext, "%", true) != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Koristite samo brojeve!");

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_bauzmi, DIALOG_STYLE_INPUT, "{1b71bc}Podigni novac:", "{FFFFFF}Unesite kolicinu novca koju zelite da podignete sa Vaseg bankovnog racuna:", "Podigni", "Izlaz");

	if(PI[playerid][NovacBanka] < iznos)
        return Dialog_Show(playerid, dialog_bauzmi, DIALOG_STYLE_INPUT, "{1b71bc}Podigni novac:", "{FFFFFF}Unesite kolicinu novca koju zelite da podignete sa Vaseg bankovnog racuna:", "Podigni", "Izlaz");

	if(iznos < 1 || iznos > 2000000)
		return Dialog_Show(playerid, dialog_bauzmi, DIALOG_STYLE_INPUT, "{1b71bc}Podigni novac:", "{FFFFFF}Unesite kolicinu novca koju zelite da podignete sa Vaseg bankovnog racuna:", "Podigni", "Izlaz");

	PI[playerid][NovacBanka] -= iznos;
	PI[playerid][Novac] += iznos;
	GivePlayerMoney(playerid, iznos);
	CheckQuestDone(playerid, 16);

	UpdateBanka(playerid);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `NovacBanka` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][NovacBanka], PI[playerid][SQLID]);

	format(string, sizeof(string), "{C2A2DA}* %s dize novac sa bankovnog racuna.", ReturnPlayerName(playerid));
	ProxMessage(playerid, string, 20.0);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Podigli ste %d$ sa Vaseg bankovnog racuna.", iznos);
	return 1;
}

Dialog:dialog_stan(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    if(PI[playerid][Stan] == -1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate stan!");
	new i = PI[playerid][Stan];
	switch(listitem)
	{
		case 0:
		{
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ]))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u vasem stanu!");

			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Stan Informacije", "{FFFFFF}_______________________________________\n\n\
																							      {1b71bc}Vlasnik stana: {FFFFFF}%s\n\
																								  {1b71bc}Level: {FFFFFF}%d\n\
																								  {1b71bc}Cena: {FFFFFF}%d\n\
																								  {1b71bc}ID stana: {FFFFFF}%d\n\
																								  {1b71bc}Zatvoreno: {FFFFFF}%s\n\
																								  {1b71bc}Novac: {FFFFFF}%d\n\
																								  {1b71bc}Oruzije: {FFFFFF}%s\n\
																								  \n_______________________________________", "Ok", "", StanInfo[i][sVlasnik], StanInfo[i][sLevel], StanInfo[i][sCena], StanInfo[i][SQLID],
									  																													StanInfo[i][sZatvoreno] == 1 ? "Da" : "Ne", StanInfo[i][sNovac], StanInfo[i][sOruzije] == 1 ? "Da" : "Ne");
		}
		case 1:
		{
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ]))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u vasem stanu!");

			if(StanInfo[i][sZatvoreno] == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec je otkljucan!");

			mysql_tqueryEx(SQL, "UPDATE `apartments` SET `Zatvoreno` = '0' WHERE `SQLID` = '%d'", StanInfo[i][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Stan otkljucan!");
		}
		case 2:
		{
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ]))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u vasoj kuci!");

			if(StanInfo[i][sZatvoreno] == 1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec je zakljucan!");

			mysql_tqueryEx(SQL, "UPDATE `apartments` SET `Zatvoreno` = '1' WHERE `SQLID` = '%d'", StanInfo[i][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Stan zakljucan!");
		}
		case 3:
		{
  			if(!IsPlayerInRangeOfPoint(playerid, 5.0, StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ]))
			  	return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u vasem stanu!");

			Dialog_Show(playerid, dialog_sostavi, DIALOG_STYLE_LIST, "{1b71bc}Ostavi u stanu", "{1b71bc}(1). {FFFFFF}Novac\n\
																							    {1b71bc}(2). {FFFFFF}Oruzije", "Ok", "Izlaz");
		}
		case 4:
		{
  			if(!IsPlayerInRangeOfPoint(playerid, 5.0, StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ]))
			  return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u vasem stanu!");

			Dialog_Show(playerid, dialog_suzmi, DIALOG_STYLE_LIST, "{1b71bc}Uzmi iz stanu", "{1b71bc}(1). {FFFFFF}Novac\n\
                                                                                             {1b71bc}(2). {FFFFFF}Oruzije", "Ok", "Izlaz");
		}
		case 5:
		{
			if(PI[playerid][Stan] == -1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate stan!");

			if(!IsPlayerInRangeOfPoint(playerid, 5.0, StanInfo[i][sUlazX], StanInfo[i][sUlazY], StanInfo[i][sUlazZ]))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste ispred vaseg stana!");

			new cena1 = (StanInfo[i][sCena]/4)*2;
			Dialog_Show(playerid, dialog_sprodaja, DIALOG_STYLE_MSGBOX, "{1b71bc}Prodaja stana drzavi", "{FFFFFF}Prodaja stana drzavi\n\n\
   																						           Dali ste sigurni da zelite da prodate stan drzavi za {1b71bc}%d$!\n\n\
   																								   {FFFFFF}Ako ste sigurni kliknite na 'Prodaj' ako ne kliknite na 'Izlaz'", "Prodaj", "Izlaz", cena1);
		}
		case 6:
		{
  			if(!IsPlayerInRangeOfPoint(playerid, 5.0, StanInfo[i][sUlazX], StanInfo[i][sUlazY], StanInfo[i][sUlazZ]))
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste ispred vaseg stana!");

			Dialog_Show(playerid, dialog_spre, DIALOG_STYLE_TABLIST_HEADERS, "{1b71bc}Preuredjivanje", "Opcija\tCena\n\
		 																		                       {1b71bc}(1). {FFFFFF}Standardan Enterijer\n\
		 																		                       {1b71bc}(2). {FFFFFF}Enterijer 1\t5000$\n\
		 																							   {1b71bc}(3). {FFFFFF}Enterijer 2\t10000$\n\
                             													                       {1b71bc}(4). {FFFFFF}Enterijer 3\t15000$", "Ok", "Izlaz");
		}
	}
	return 1;
}

Dialog:dialog_spre(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    if(PI[playerid][Stan] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate stan!");

	new i = PI[playerid][Stan];

	switch(listitem)
	{
		case 0:
		{
  			StanInfo[i][sIzlazX] = 244.1522;
			StanInfo[i][sIzlazY] = 305.0730;
			StanInfo[i][sIzlazZ] = 999.1484;
			StanInfo[i][sInt] = 1;
			
			mysql_tqueryEx(SQL, "UPDATE `apartments` SET `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f', `Interijer` = '%d' WHERE `SQLID` = '%d'", StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ], StanInfo[i][sInt], StanInfo[i][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili enterijer stana u standardan enterijer!");
		}
		case 1:
		{
  			if(PI[playerid][Novac] < 5000)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 5000$!");

			StanInfo[i][sIzlazX] = 267.2224;
			StanInfo[i][sIzlazY] = 304.9358;
			StanInfo[i][sIzlazZ] = 999.1484;
			StanInfo[i][sInt] = 2;
			
			mysql_tqueryEx(SQL, "UPDATE `apartments` SET `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f', `Interijer` = '%d' WHERE `SQLID` = '%d'", StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ], StanInfo[i][sInt], StanInfo[i][SQLID]);

			PI[playerid][Novac] -= 5000;
			GivePlayerMoney(playerid, -5000); 
			
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili enterijer stana (5000$)!");
		}
		case 2:
		{
  			if(PI[playerid][Novac] < 10000)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10000$!");

			StanInfo[i][sIzlazX] = 2217.6794;
			StanInfo[i][sIzlazY] = -1076.2312;
			StanInfo[i][sIzlazZ] = 1050.4844;
			StanInfo[i][sInt] = 1;
			
			mysql_tqueryEx(SQL, "UPDATE `apartments` SET `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f', `Interijer` = '%d' WHERE `SQLID` = '%d'", StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ], StanInfo[i][sInt], StanInfo[i][SQLID]);

			PI[playerid][Novac] -= 10000;
			GivePlayerMoney(playerid, -10000);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili enterijer stana (10000$)!");
		}
		case 3:
		{
  			if(PI[playerid][Novac] < 15000)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 15000$!");

			StanInfo[i][sIzlazX] = 2282.9861;
			StanInfo[i][sIzlazY] = -1139.9357;
			StanInfo[i][sIzlazZ] = 1050.8984;
			StanInfo[i][sInt] = 11;
    		
    		mysql_tqueryEx(SQL, "UPDATE `apartments` SET `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f', `Interijer` = '%d' WHERE `SQLID` = '%d'", StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ], StanInfo[i][sInt], StanInfo[i][SQLID]);

			PI[playerid][Novac] -= 15000;
			GivePlayerMoney(playerid, -15000);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili enterijer stana (15000$)!");
		}
	}
	return 1;
}

Dialog:dialog_suzmi(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	if(PI[playerid][Stan] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate stan!");

	new i = PI[playerid][Stan];
	switch(listitem)
	{
		case 0:
		{
  			Dialog_Show(playerid, dialog_sunovac, DIALOG_STYLE_INPUT, "{1b71bc}Uzimanje Novca", "{FFFFFF}Unesite kolicinu novca koju zelite da uzmete", "Ostavi", "Izlaz");
		}
		case 1:
		{
  			if(StanInfo[i][sOruzije] == -1)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas oruzije u stanu!");

			GivePlayerWeapon(playerid, WEAPON:StanInfo[i][sOruzije], StanInfo[i][sMunicija]);
			StanInfo[i][sOruzije] = -1;
			StanInfo[i][sMunicija] = -1;

			mysql_tqueryEx(SQL, "UPDATE `apartments` SET `Oruzije` = '%d', `Municija` = '%d' WHERE `SQLID` = '%d'", StanInfo[i][sOruzije], StanInfo[i][sMunicija], StanInfo[i][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste oruzije iz vaseg stana!");
		}
	}
	return 1;
}

Dialog:dialog_sunovac(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	if(PI[playerid][Stan] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate stan!");

	new i = PI[playerid][Stan];
	
	static iznos;

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_sunovac, DIALOG_STYLE_INPUT, "{1b71bc}Uzimanje Novca", "{FFFFFF}Unesite kolicinu novca koju zelite da uzmete", "Ostavi", "Izlaz");

	if(iznos > StanInfo[i][sNovac])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko novca u stanu!");

	if(iznos < 1 || iznos > 50000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");

	StanInfo[i][sNovac] -= iznos;
	
	mysql_tqueryEx(SQL, "UPDATE `apartments` SET `Novac` = '%d' WHERE `SQLID` = '%d'", StanInfo[i][sNovac], StanInfo[i][SQLID]);

	PI[playerid][Novac] += iznos;
	GivePlayerMoney(playerid, iznos);
	
    mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
	
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste iz stana %d$ novca!", iznos);
	return 1;
}

Dialog:dialog_sonovac(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	if(PI[playerid][Stan] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate stan!");

	new i = PI[playerid][Stan];

	static iznos;

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_sonovac, DIALOG_STYLE_INPUT, "{1b71bc}Ostavljanje Novca", "{FFFFFF}Unesite kolicinu novca koju zelite da ostavite", "Ostavi", "Izlaz");

	if(iznos > PI[playerid][Novac])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko novca!");

	if(iznos < 1 || iznos > 50000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");

	StanInfo[i][sNovac] += iznos;

	mysql_tqueryEx(SQL, "UPDATE `apartments` SET `Novac` = '%d' WHERE `SQLID` = '%d'", StanInfo[i][sNovac], StanInfo[i][SQLID]);

	PI[playerid][Novac] -= iznos;
	GivePlayerMoney(playerid, -iznos);

    mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ostavili ste u stanu %d$ novca!", iznos);
	return 1;
}

Dialog:dialog_sostavi(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	if(PI[playerid][Stan] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate stan!");

	new i = PI[playerid][Stan];
	switch(listitem)
	{
		case 0:
		{
  			Dialog_Show(playerid, dialog_sonovac, DIALOG_STYLE_INPUT, "{1b71bc}Ostavljanje Novca", "{FFFFFF}Unesite kolicinu novca koju zelite da ostavite", "Ostavi", "Izlaz");
		}
		case 1:
		{
  			if(StanInfo[i][sOruzije] != -1)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imas oruzije u stanu!");
  				
            if(GetPlayerWeapon(playerid) <= WEAPON_FIST)
                return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas oruzije u ruci!");

			StanInfo[i][sOruzije] = GetPlayerWeapon(playerid);
			StanInfo[i][sMunicija] = GetPlayerAmmo(playerid);

			mysql_tqueryEx(SQL, "UPDATE `apartments` SET `Oruzije` = '%d', `Municija` = '%d' WHERE `SQLID` = '%d'", StanInfo[i][sOruzije], StanInfo[i][sMunicija], StanInfo[i][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ostavili ste oruzije u vasem stanu!");
		}
	}
	return 1;
}

Dialog:dialog_sprodaja(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    if(PI[playerid][Stan] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate stan!");

	new i = PI[playerid][Stan];
	
	new cena1 = (StanInfo[i][sCena]/4)*2;
 	PI[playerid][Novac] += cena1;
	GivePlayerMoney(playerid, cena1);
	PI[playerid][Stan] = -1;
	
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Stan` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Stan], PI[playerid][SQLID]);

	StanInfo[i][sProveraVlasnika] = 0;
	StanInfo[i][sNovac] = 0;
	StanInfo[i][sOruzije] = -1;
	StanInfo[i][sMunicija] = 0;
	StanInfo[i][sZatvoreno] = 1;

	strmid(StanInfo[i][sVlasnik], "Niko", 0, strlen("Niko"), 255);
	StanLP(i);
	
	mysql_tqueryEx(SQL, "UPDATE `apartments` SET `ProveraVlasnika` = '%d', `Vlasnik` = 'Niko', `Zatvoreno` = '%d', `Novac` = '%d', `Oruzije` = '%d', `Municija` = '%d' WHERE `SQLID` = '%d'",
		StanInfo[i][sProveraVlasnika], StanInfo[i][sZatvoreno], StanInfo[i][sNovac], StanInfo[i][sOruzije],StanInfo[i][sMunicija], StanInfo[i][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prodali ste stan za %d$!", cena1);
	return 1;
}

Dialog:dialog_kuca(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    if(PI[playerid][Kuca] == -1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate kucu!");
	new i = PI[playerid][Kuca];
	switch(listitem)
	{
		case 0:
		{
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u vasoj kuci!");

			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Kuca Informacije", "{FFFFFF}_______________________________________\n\n\
																							      {1b71bc}Vlasnik kuce: {FFFFFF}%s\n\
																								  {1b71bc}Level: {FFFFFF}%d\n\
																								  {1b71bc}Cena: {FFFFFF}%d\n\
																								  {1b71bc}Cena Renta: {FFFFFF}%d\n\
																								  {1b71bc}ID kuce: {FFFFFF}%d\n\
																								  {1b71bc}Zatvoreno: {FFFFFF}%s\n\
																								  {1b71bc}Novac: {FFFFFF}%d\n\
																								  {1b71bc}Droga: {FFFFFF}%d\n\
																								  {1b71bc}Mats: {FFFFFF}%d\n\
																								  {1b71bc}Odjeca: {FFFFFF}%s\n\
																								  {1b71bc}Oruzije: {FFFFFF}%s\n\
																								  \n_______________________________________", "Ok", "", KucaInfo[i][kVlasnik],KucaInfo[i][kLevel],KucaInfo[i][kCena],KucaInfo[i][kCenaRenta],
																								  															 KucaInfo[i][SQLID], KucaInfo[i][kZatvoreno] == 1 ? "Da" : "Ne", KucaInfo[i][kNovac],KucaInfo[i][kDroga],KucaInfo[i][kMats],
																							   																 KucaInfo[i][kOdjeca] == 1 ? "Da" : "Ne", KucaInfo[i][kOruzije] == 1 ? "Da" : "Ne");
		}
		case 1:
		{
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u vasoj kuci!");

			if(KucaInfo[i][kZatvoreno] == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec je otkljucana!");

			mysql_tqueryEx(SQL, "UPDATE `houses` SET `Zatvoreno` = '0' WHERE `SQLID` = '%d'", KucaInfo[i][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kuca otkljucana!");
		}
		case 2:
		{
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u vasoj kuci!");

			if(KucaInfo[i][kZatvoreno] == 1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec je zakljucana!");

			mysql_tqueryEx(SQL, "UPDATE `houses` SET `Zatvoreno` = '1' WHERE `SQLID` = '%d'", KucaInfo[i][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kuca zakljucana!");
		}
		case 3:
		{
  			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]))
			  	return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u vasoj kuci!");

			Dialog_Show(playerid, dialog_kostavi, DIALOG_STYLE_LIST, "{1b71bc}Ostavi u kuci", "{1b71bc}(1). {FFFFFF}Novac\n\
																						       {1b71bc}(2). {FFFFFF}Drogu\n\
																							   {1b71bc}(3). {FFFFFF}Mats\n\
																							   {1b71bc}(4). {FFFFFF}Odelo\n\
																							   {1b71bc}(5). {FFFFFF}Oruzije", "Ok", "Izlaz");
		}
		case 4:
		{
  			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]))
			  return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u vasoj kuci!");

			Dialog_Show(playerid, dialog_kuzmi, DIALOG_STYLE_LIST, "{1b71bc}Uzmi iz kuce", "{1b71bc}(1). {FFFFFF}Novac\n\
																						       {1b71bc}(2). {FFFFFF}Drogu\n\
																							   {1b71bc}(3). {FFFFFF}Mats\n\
																							   {1b71bc}(4). {FFFFFF}Odelo\n\
																							   {1b71bc}(5). {FFFFFF}Oruzije", "Ok", "Izlaz");
		}
		case 5:
		{
			if(PI[playerid][Kuca] == -1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate kucu!");

			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste ispred vase kuce!");

			new cena1 = (KucaInfo[i][kCena]/4)*2;
			Dialog_Show(playerid, dialog_kprodaja, DIALOG_STYLE_MSGBOX, "{1b71bc}Prodaja kuce drzavi", "{FFFFFF}Prodaja kuce drzavi\n\n\
   																						           Dali ste sigurni da zelite da prodate kucu drzavi za {1b71bc}%d$!\n\n\
   																								   {FFFFFF}Ako ste sigurni kliknite na 'Prodaj' ako ne kliknite na 'Izlaz'", "Prodaj", "Izlaz", cena1);
		}
		case 6:
		{
  			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]))
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u vasoj kuci!");

			if(KucaInfo[i][kRent] == 0)
			{
				KucaInfo[i][kRent] = 1;
				KuceLP(i);
				
				mysql_tqueryEx(SQL, "UPDATE `houses` SET `Rent` = '1' WHERE `SQLID` = '%d'", KucaInfo[i][SQLID]);
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odobrili ste rent kuce!");
			}
			else
			{
				KucaInfo[i][kRent] = 0;
				KuceLP(i);
				
				mysql_tqueryEx(SQL, "UPDATE `houses` SET `Rent` = '0' WHERE `SQLID` = '%d'", KucaInfo[i][SQLID]);
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Zabranili ste rent kuce!");
			}
		}
		case 7:
		{
  			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]))
		  		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u vasoj kuci!");

			if(KucaInfo[i][kRent] == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Na vasoj kuci nije dozvoljen rent pa ne mozete podesavati cenu!");

			Dialog_Show(playerid, dialog_krent, DIALOG_STYLE_INPUT, "{1b71bc}Cena Renta", "{FFFFFF}Unesite novu cenu renta", "Promeni", "Izlaz");
		}
		case 8:
		{
  			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]))
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste ispred vase kuce!");

			Dialog_Show(playerid, dialog_kpre, DIALOG_STYLE_TABLIST_HEADERS, "{1b71bc}Nadogradnja/Preuredjivanje", "Opcija\tCena\n\
																											         {1b71bc}(1). {FFFFFF}Zvono\t2000$\n\
																													 {1b71bc}(2). {FFFFFF}Frizder\t3000$\n\
																													 {1b71bc}(3). {FFFFFF}Standardan Enterijer 1\n\
																													 {1b71bc}(4). {FFFFFF}Enterijer 2\t30000$\n\
																													 {1b71bc}(5). {FFFFFF}Enterijer 3\t40000$", "Ok", "Izlaz");
		}
		case 9:
		{
  			if(!IsPlayerInRangeOfPoint(playerid, 5.0, KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ]))
		  		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u vasoj kuci!");

			if(KucaInfo[i][kFrizder] == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas frizder u kuci!");

			Dialog_Show(playerid, dialog_knamernice, DIALOG_STYLE_LIST, "{1b71bc}Namernice", "{1b71bc}(1). {FFFFFF}Koristi hranu\n{1b71bc}(2). {FFFFFF}Ostavi hranu", "Ok", "Izlaz");
		}
	}
	return 1;
}

Dialog:dialog_knamernice(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	if(PI[playerid][Kuca] == -1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate kucu!");

	new i = PI[playerid][Kuca];
	switch(listitem)
	{
		case 0:
		{
  			if(KucaInfo[i][kHrana] <= 0)
		  		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nema hrane u kuci!");

			static Float:hp;
			GetPlayerHealth(playerid, hp);

			if(hp >= 100)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste gladni!");

			KucaInfo[i][kHrana] --;
			mysql_tqueryEx(SQL, "UPDATE `houses` SET `Hrana` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kHrana], KucaInfo[i][SQLID]);

			SetPlayerHealth(playerid, 100);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Pojeli ste nesto hrane iz frizdera!");
		}
		case 1:
		{
  			Dialog_Show(playerid, dialog_konamernice, DIALOG_STYLE_INPUT, "{1b71bc}Namernice", "{FFFFFF}Unesite kolicinu hrane koju zelite da ostavite", "Unesi", "Izlaz");
		}
	}
	return 1;
}

Dialog:dialog_konamernice(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(PI[playerid][Kuca] == -1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate kucu!");

	new i = PI[playerid][Kuca];

	static iznos;

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_konamernice, DIALOG_STYLE_INPUT, "{1b71bc}Namernice", "{FFFFFF}Unesite kolicinu hrane koju zelite da ostavite", "Unesi", "Izlaz");

	if(iznos > PI[playerid][Hrana])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko hrane!");

	if(iznos < 1 || iznos > 5)
		va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Suma ne mozete biti manja od 1 i veca od 5 odjednom!");

	KucaInfo[i][kHrana] += iznos;
	PI[playerid][Hrana] -= iznos;

	mysql_tqueryEx(SQL, "UPDATE `houses` SET `Hrana` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kHrana], KucaInfo[i][SQLID]);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Hrana` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Hrana], PI[playerid][SQLID]);
	
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ostavili ste u kucu %d namernica!", iznos);
	return 1;
}

Dialog:dialog_kpre(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    if(PI[playerid][Kuca] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate kucu!");

	new i = PI[playerid][Kuca];

	switch(listitem)
	{
		case 0:
		{
			if(KucaInfo[i][kZvono] == 1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imas zvono u kuci!");

			if(PI[playerid][Novac] < 2000)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novac!");

			KucaInfo[i][kZvono] = 1;
			PI[playerid][Novac] -= 2000;
			GivePlayerMoney(playerid, -2000);

			mysql_tqueryEx(SQL, "UPDATE `houses` SET `Zvono` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kZvono], KucaInfo[i][SQLID]);
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ugradili ste zvono u vasu kucu /zvoni!");
		}
		case 1:
		{
  			if(KucaInfo[i][kFrizder] == 1)
			  return va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Vec imas frizder u kuci!");

			if(PI[playerid][Novac] < 3000)
				return va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Nemate dovoljno novca!");

			KucaInfo[i][kFrizder] = 1;
			PI[playerid][Novac] -= 3000;
			GivePlayerMoney(playerid, -3000);
			
			mysql_tqueryEx(SQL, "UPDATE `houses` SET `Frizider` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kFrizder], KucaInfo[i][SQLID]);
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ugradili ste frizder u vasu kucu!");
		}
		case 2:
		{
  			if(KucaInfo[i][kVrstaIntKuce] == 1)
	    	{
      			KucaInfo[i][kIzlazX] = 223.0732;
  				KucaInfo[i][kIzlazY] = 1288.3668;
  				KucaInfo[i][kIzlazZ] = 1082.1406;
  				KucaInfo[i][kInt] = 1;
  				SetPlayerInterior(playerid, 0);
			  	SetPlayerVirtualWorld(playerid, 0);
  				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);

				mysql_tqueryEx(SQL, "UPDATE `houses` SET `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f', `Interior` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ], KucaInfo[i][kInt], KucaInfo[i][SQLID]);

				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili enterijer kuce u standardan enterijer male kuce!");
		    }
      		else if(KucaInfo[i][kVrstaIntKuce] == 2)
		    {
      			KucaInfo[i][kIzlazX] = 2365.2822;
  				KucaInfo[i][kIzlazY] = -1134.5186;
  				KucaInfo[i][kIzlazZ] = 1050.8750;
  				KucaInfo[i][kInt] = 8;
  				SetPlayerInterior(playerid, 0);
		  		SetPlayerVirtualWorld(playerid, 0);
    			SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);

				mysql_tqueryEx(SQL, "UPDATE `houses` SET `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f', `Interior` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ], KucaInfo[i][kInt], KucaInfo[i][SQLID]);

				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili enterijer kuce u standardan enterijer srednje kuce!");
		    }
		    else if(KucaInfo[i][kVrstaIntKuce] == 3)
		    {
     			KucaInfo[i][kIzlazX] = 2317.8977;
  				KucaInfo[i][kIzlazY] = -1025.7722;
				KucaInfo[i][kIzlazZ] = 1050.2109;
				KucaInfo[i][kInt] = 9;
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
  				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);

                mysql_tqueryEx(SQL, "UPDATE `houses` SET `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f', `Interior` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ], KucaInfo[i][kInt], KucaInfo[i][SQLID]);

				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili enterijer kuce u standardan enterijer velike kuce!");
		    }
		    else if(KucaInfo[i][kVrstaIntKuce] == 4)
		    {
      			KucaInfo[i][kIzlazX] = 140.2605;
  				KucaInfo[i][kIzlazY] = 1367.4221;
  				KucaInfo[i][kIzlazZ] = 1083.8615;
  				KucaInfo[i][kInt] = 5;
  				SetPlayerInterior(playerid, 0);
		  		SetPlayerVirtualWorld(playerid, 0);
    			SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);

				mysql_tqueryEx(SQL, "UPDATE `houses` SET `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f', `Interior` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ], KucaInfo[i][kInt], KucaInfo[i][SQLID]);

				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili enterijer kuce u standardan enterijer ville!");

			}
		}
		case 3:
		{
  			if(PI[playerid][Novac] < 30000)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca (30000$)!");

            PI[playerid][Novac] -= 30000;
			GivePlayerMoney(playerid, -30000);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);

			if(KucaInfo[i][kVrstaIntKuce] == 1)
   			{
      			KucaInfo[i][kIzlazX] = 2308.7527;
  				KucaInfo[i][kIzlazY] = -1211.7507;
  				KucaInfo[i][kIzlazZ] = 1049.0234;
  				KucaInfo[i][kInt] = 6;
  				SetPlayerInterior(playerid, 0);
	  			SetPlayerVirtualWorld(playerid, 0);
    			SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);

				mysql_tqueryEx(SQL, "UPDATE `houses` SET `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f', `Interior` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ], KucaInfo[i][kInt], KucaInfo[i][SQLID]);

				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili enterijer male kuce (30000$)!");
    		}
      		else if(KucaInfo[i][kVrstaIntKuce] == 2)
		    {
      			KucaInfo[i][kIzlazX] = 2195.9036;
				KucaInfo[i][kIzlazY] = -1204.4109;
				KucaInfo[i][kIzlazZ] = 1049.0234;
				KucaInfo[i][kInt] = 6;
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
  				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);

				mysql_tqueryEx(SQL, "UPDATE `houses` SET `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f', `Interior` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ], KucaInfo[i][kInt], KucaInfo[i][SQLID]);

				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili enterijer srednje kuce (30000$)!");
		    }
		    else if(KucaInfo[i][kVrstaIntKuce] == 3)
		    {
     			KucaInfo[i][kIzlazX] = 83.1142;
  				KucaInfo[i][kIzlazY] = 1323.1691;
				KucaInfo[i][kIzlazZ] = 1083.8594;
				KucaInfo[i][kInt] = 9;
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
  				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);

				mysql_tqueryEx(SQL, "UPDATE `houses` SET `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f', `Interior` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ], KucaInfo[i][kInt], KucaInfo[i][SQLID]);
				
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili enterijer velike kuce (30000$)!");
		    }
		    else if(KucaInfo[i][kVrstaIntKuce] == 4)
		    {
      			KucaInfo[i][kIzlazX] = 226.9117;
  				KucaInfo[i][kIzlazY] = 1114.2726;
  				KucaInfo[i][kIzlazZ] = 1080.9961;
  				KucaInfo[i][kInt] = 5;
  				SetPlayerInterior(playerid, 0);
		  		SetPlayerVirtualWorld(playerid, 0);
    			SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);

                mysql_tqueryEx(SQL, "UPDATE `houses` SET `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f', `Interior` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ], KucaInfo[i][kInt], KucaInfo[i][SQLID]);
                
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili enterijer ville (30000$)!");
			}
		}
		case 4:
		{
		    if(PI[playerid][Novac] < 40000)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca (40000$)!");

            PI[playerid][Novac] -= 40000;
			GivePlayerMoney(playerid, -40000);
			
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);

			if(KucaInfo[i][kVrstaIntKuce] == 1)
   			{
      			KucaInfo[i][kIzlazX] = 261.0457;
  				KucaInfo[i][kIzlazY] = 1285.4824;
  				KucaInfo[i][kIzlazZ] = 1080.2578;
  				KucaInfo[i][kInt] = 4;
  				SetPlayerInterior(playerid, 0);
	  			SetPlayerVirtualWorld(playerid, 0);
    			SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);

				mysql_tqueryEx(SQL, "UPDATE `houses` SET `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f', `Interior` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ], KucaInfo[i][kInt], KucaInfo[i][SQLID]);

				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili enterijer male kuce (40000$)!");
		    }
      		else if(KucaInfo[i][kVrstaIntKuce] == 2)
		    {
      			KucaInfo[i][kIzlazX] = 2269.3962;
  				KucaInfo[i][kIzlazY] = -1210.4148;
  				KucaInfo[i][kIzlazZ] = 1047.5625;
  				KucaInfo[i][kInt] = 10;
  				SetPlayerInterior(playerid, 0);
		  		SetPlayerVirtualWorld(playerid, 0);
  				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);

                mysql_tqueryEx(SQL, "UPDATE `houses` SET `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f', `Interior` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ], KucaInfo[i][kInt], KucaInfo[i][SQLID]);

				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili enterijer srednje kuce (40000$)!");
		    }
		    else if(KucaInfo[i][kVrstaIntKuce] == 3)
		    {
     			KucaInfo[i][kIzlazX] = 2324.4817;
  				KucaInfo[i][kIzlazY] = -1148.3988;
				KucaInfo[i][kIzlazZ] = 1050.7101;
				KucaInfo[i][kInt] = 12;
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
  				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);

				mysql_tqueryEx(SQL, "UPDATE `houses` SET `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f', `Interior` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ], KucaInfo[i][kInt], KucaInfo[i][SQLID]);

				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili enterijer velike kuce (40000$)!");
		    }
		    else if(KucaInfo[i][kVrstaIntKuce] == 4)
		    {
      			KucaInfo[i][kIzlazX] = 225.9810;
  				KucaInfo[i][kIzlazY] = 1022.8190;
  				KucaInfo[i][kIzlazZ] = 1084.0137;
  				KucaInfo[i][kInt] = 7;
  				SetPlayerInterior(playerid, 0);
		  		SetPlayerVirtualWorld(playerid, 0);
  				SetPlayerPos(playerid, KucaInfo[i][kUlazX], KucaInfo[i][kUlazY], KucaInfo[i][kUlazZ]);

				mysql_tqueryEx(SQL, "UPDATE `houses` SET `IzlazX` = '%f', `IzlazY` = '%f', `IzlazZ` = '%f', `Interior` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ], KucaInfo[i][kInt], KucaInfo[i][SQLID]);

				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili enterijer ville (40000$)!");
	  		}
		}
	}
	return 1;
}

Dialog:dialog_krent(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;
	
	new i = PI[playerid][Kuca],
		cena;

	if(sscanf(inputtext, "i", cena))
		return Dialog_Show(playerid, dialog_krent, DIALOG_STYLE_INPUT, "{1b71bc}Cena Renta", "{FFFFFF}Unesite novu cenu renta", "Promeni", "Izlaz");

	if(cena < 1 || cena > 1000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Cena ne moze biti manja od 1 i veca od 1000!");

	KucaInfo[i][kCenaRenta] = cena;

	mysql_tqueryEx(SQL, "UPDATE `houses` SET `CenaRenta` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kCenaRenta], KucaInfo[i][SQLID]);
 	KuceLP(i);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste promenili cenu renta!");
	return 1;
}

Dialog:dialog_kprodaja(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    if(PI[playerid][Kuca] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate kucu!");

	new i = PI[playerid][Kuca];

	new cena1 = (KucaInfo[i][kCena]/4)*2;

    PI[playerid][Novac] += cena1;
	GivePlayerMoney(playerid, cena1);
	
	PI[playerid][Kuca] = -1;
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Kuca` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Kuca], PI[playerid][SQLID]);
	
	KucaInfo[i][kProveraVlasnika] = 0;
	KucaInfo[i][kNovac] = 0;
	KucaInfo[i][kOruzije] = -1;
	KucaInfo[i][kMunicija] = 0;
	KucaInfo[i][kOdjeca] = 0;
	KucaInfo[i][kDroga] = 0;
	KucaInfo[i][kMats] = 0;
	KucaInfo[i][kZatvoreno] = 1;
	KucaInfo[i][kRent] = 0;
	KucaInfo[i][kHrana] = 0;
	strmid(KucaInfo[i][kVlasnik], "Niko", 0, strlen("Niko"), 255);
	
	mysql_tqueryEx(SQL, "UPDATE `houses` SET `ProveraVlasnika` = '%d', `Vlasnik` = 'Niko', `Zatvoreno` = '%d', `Oruzije` = '%d', `Municija` = '%d', `Rent` = '%d', `Mats` = '%d', `Droga` = '%d',\
		`Odjeca` = '%d', `Hrana` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kProveraVlasnika], KucaInfo[i][kZatvoreno], KucaInfo[i][kOruzije], KucaInfo[i][kMunicija], KucaInfo[i][kRent],
		KucaInfo[i][kMats], KucaInfo[i][kDroga], KucaInfo[i][kOdjeca], KucaInfo[i][kHrana], KucaInfo[i][SQLID]);
		
    KuceLP(i);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prodali ste kucu za %d$!",cena1);
	return 1;
}

Dialog:dialog_kuzmi(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    if(PI[playerid][Kuca] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate kucu!");

	new i = PI[playerid][Kuca];
	
	switch(listitem)
	{
		case 0:
		{
  			Dialog_Show(playerid, dialog_kunovac, DIALOG_STYLE_INPUT, "{1b71bc}Uzimanje Novca", "{FFFFFF}Unesite kolicinu novca koju zelite da uzmete", "Ostavi", "Izlaz");
		}
		case 1:
		{
  			Dialog_Show(playerid, dialog_kudrogu, DIALOG_STYLE_INPUT, "{1b71bc}Uzimanje Droge", "{FFFFFF}Unesite kolicinu droge koju zelite da uzmete", "Ostavi", "Izlaz");
		}
		case 2:
		{
  			Dialog_Show(playerid, dialog_kumats, DIALOG_STYLE_INPUT, "{1b71bc}Uzimanje Materijala", "{FFFFFF}Unesite kolicinu materijala koju zelite da uzmete", "Ostavi", "Izlaz");
		}
		case 3:
		{
  			if(KucaInfo[i][kOdjeca] == 0)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate odjelo u ormanu!");

			SetPlayerSkin(playerid, KucaInfo[i][kOdjeca]);
			PI[playerid][Skin] = KucaInfo[i][kOdjeca];

			KucaInfo[i][kOdjeca] = 0;
			
			mysql_tqueryEx(SQL, "UPDATE `houses` SET `Odjeca` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kOdjeca], KucaInfo[i][SQLID]);
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Skin` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Skin], PI[playerid][SQLID]);
			
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste uzeli odelo iz ormana!");
		}
		case 4:
		{
  			if(KucaInfo[i][kOruzije] == -1)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas oruzije u kuci!");

			GivePlayerWeapon(playerid, WEAPON:KucaInfo[i][kOruzije], KucaInfo[i][kMunicija]);
			KucaInfo[i][kOruzije] = -1;
			KucaInfo[i][kMunicija] = -1;

			mysql_tqueryEx(SQL, "UPDATE `houses` SET `Oruzije` = '%d', `Municija` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kOruzije], KucaInfo[i][kMunicija], KucaInfo[i][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste oruzije iz vase kuce!");
		}
	}
	return 1;
}

Dialog:dialog_kumats(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    if(PI[playerid][Kuca] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate kucu!");

	new i = PI[playerid][Kuca];

	static iznos;

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_kumats, DIALOG_STYLE_INPUT, "{1b71bc}Uzimanje Materijala", "{FFFFFF}Unesite kolicinu materijala koju zelite da uzmete", "Ostavi", "Izlaz");

	if(iznos > KucaInfo[i][kMats])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko materijala u kuci!");

	if(iznos < 1 || iznos > 50000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");

	KucaInfo[i][kMats] -= iznos;
	PI[playerid][Mats] += iznos;
	
	mysql_tqueryEx(SQL, "UPDATE `houses` SET `Mats` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kMats], KucaInfo[i][SQLID]);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Mats` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Mats], PI[playerid][SQLID]);
	
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste iz kuce %d materijala!", iznos);
	return 1;
}

Dialog:dialog_kudrogu(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    if(!response) return 1;

    if(PI[playerid][Kuca] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate kucu!");

	new i = PI[playerid][Kuca];

	static iznos;

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_kudrogu, DIALOG_STYLE_INPUT, "{1b71bc}Uzimanje Droge", "{FFFFFF}Unesite kolicinu droge koju zelite da uzmete", "Ostavi", "Izlaz");

	if(iznos > KucaInfo[i][kDroga])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko droge u kuci!");

	if(iznos < 1 || iznos > 50000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");

	KucaInfo[i][kDroga] -= iznos;
	PI[playerid][Droga] += iznos;

	mysql_tqueryEx(SQL, "UPDATE `houses` SET `Droga` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kDroga], KucaInfo[i][SQLID]);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Droga` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Droga], PI[playerid][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste iz kuce %d droge!", iznos);
	return 1;
}

Dialog:dialog_kunovac(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(!response) return 1;

    if(PI[playerid][Kuca] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate kucu!");

	new i = PI[playerid][Kuca];

	static iznos;

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_kunovac, DIALOG_STYLE_INPUT, "{1b71bc}Uzimanje Novca", "{FFFFFF}Unesite kolicinu novca koju zelite da uzmete", "Ostavi", "Izlaz");

	if(iznos > KucaInfo[i][kNovac])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko droge u kuci!");

	if(iznos < 1 || iznos > 50000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");

	KucaInfo[i][kNovac] -= iznos;
	PI[playerid][Novac] += iznos;

	mysql_tqueryEx(SQL, "UPDATE `houses` SET `Novac` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kNovac], KucaInfo[i][SQLID]);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste iz kuce %d droge!", iznos);
	return 1;
}

Dialog:dialog_kostavi(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(PI[playerid][Kuca] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate kucu!");

	new i = PI[playerid][Kuca];

	switch(listitem)
	{
		case 0:
		{
  			Dialog_Show(playerid, dialog_konovac, DIALOG_STYLE_INPUT, "{1b71bc}Ostavljanje Novca", "{FFFFFF}Unesite kolicinu novca koju zelite da ostavite", "Ostavi", "Izlaz");
		}
		case 1:
		{
  			Dialog_Show(playerid, dialog_kodrogu, DIALOG_STYLE_INPUT, "{1b71bc}Ostavljanje Droge", "{FFFFFF}Unesite kolicinu droge koju zelite da ostavite", "Ostavi", "Izlaz");
		}
		case 2:
		{
  			Dialog_Show(playerid, dialog_komats, DIALOG_STYLE_INPUT, "{1b71bc}Ostavljanje Materijala", "{FFFFFF}Unesite kolicinu materijala koju zelite da ostavite", "Ostavi", "Izlaz");
		}
		case 3:
		{
  			if(KucaInfo[i][kOdjeca] != 0)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imas odelo u ormanu!");

			KucaInfo[i][kOdjeca] = GetPlayerSkin(playerid);
			mysql_tqueryEx(SQL, "UPDATE `houses` SET `Odjeca` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kOdjeca], KucaInfo[i][SQLID]);
			
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste ostavili odecu u ormar!");
		}
		case 4:
		{
  			if(KucaInfo[i][kOruzije] != -1)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas oruzije u kuci!");
  				
            if(GetPlayerWeapon(playerid) <= WEAPON_FIST)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas oruzije u ruci!");

			KucaInfo[i][kOruzije] = GetPlayerWeapon(playerid);
			KucaInfo[i][kMunicija] = GetPlayerAmmo(playerid);
			SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), 0);

            mysql_tqueryEx(SQL, "UPDATE `houses` SET `Oruzije` = '%d', `Municija` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kOruzije], KucaInfo[i][kMunicija], KucaInfo[i][SQLID]);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ostavili ste oruzije u kucu!");
		}
	}
	return 1;
}

Dialog:dialog_komats(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(PI[playerid][Kuca] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate kucu!");

	new i = PI[playerid][Kuca];
	
	static iznos;

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_komats, DIALOG_STYLE_INPUT, "{1b71bc}Ostavljanje Materijala", "{FFFFFF}Unesite kolicinu materijala koju zelite da ostavite", "Ostavi", "Izlaz");

	if(iznos > PI[playerid][Mats])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko materijala!");

	if(iznos < 1 || iznos > 50000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");

	KucaInfo[i][kMats] += iznos;
	PI[playerid][Mats] -= iznos;

	mysql_tqueryEx(SQL, "UPDATE `houses` SET `Mats` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kMats], KucaInfo[i][SQLID]);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Mats` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Mats], PI[playerid][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ostavili ste u kucu %d materijala!", iznos);
	return 1;
}

Dialog:dialog_kodrogu(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(PI[playerid][Kuca] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate kucu!");

	new i = PI[playerid][Kuca];

	static iznos;

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_kodrogu, DIALOG_STYLE_INPUT, "{1b71bc}Ostavljanje Droge", "{FFFFFF}Unesite kolicinu droge koju zelite da ostavite", "Ostavi", "Izlaz");

	if(iznos > PI[playerid][Droga])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko droge!");

	if(iznos < 1 || iznos > 50000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");

	KucaInfo[i][kDroga] += iznos;
	PI[playerid][Droga] -= iznos;

	mysql_tqueryEx(SQL, "UPDATE `houses` SET `Droga` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kDroga], KucaInfo[i][SQLID]);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Droga` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Droga], PI[playerid][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ostavili ste u kucu %d droge!", iznos);
	return 1;
}

Dialog:dialog_konovac(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(PI[playerid][Kuca] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate kucu!");

	new i = PI[playerid][Kuca];

	static iznos;

	if(sscanf(inputtext, "i", iznos))
		return Dialog_Show(playerid, dialog_konovac, DIALOG_STYLE_INPUT, "{1b71bc}Ostavljanje Novca", "{FFFFFF}Unesite kolicinu novca koju zelite da ostavite", "Ostavi", "Izlaz");

	if(iznos > PI[playerid][Novac])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko novca!");

	if(iznos < 1 || iznos > 50000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Suma ne mozete biti manja od 1 i veca od 50000 odjednom!");

	KucaInfo[i][kNovac] += iznos;
	PI[playerid][Novac] -= iznos;

	mysql_tqueryEx(SQL, "UPDATE `houses` SET `Novac` = '%d' WHERE `SQLID` = '%d'", KucaInfo[i][kNovac], KucaInfo[i][SQLID]);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ostavili ste u kucu %d$!", iznos);
	return 1;
}

Dialog:dialog_pspawn(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	switch(listitem)
	{
		case 0:
		{
			PI[playerid][Spawn] = SPAWN_NORMAL;
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Spawn` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Spawn], PI[playerid][SQLID]);
   			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste odabrali spawn | Spawn!");
		}
		case 1:
		{
  			if(PI[playerid][Kuca] != -1)
	    	{
      			PI[playerid][Spawn] = SPAWN_KUCA;
      			mysql_tqueryEx(SQL, "UPDATE `users` SET `Spawn` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Spawn], PI[playerid][SQLID]);
	        	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste odabrali spawn | Kuca!");
			}
			else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne posedujete kucu!");
		}
		case 2:
		{
  			if(PI[playerid][Rent] != -1)
	    	{
      			PI[playerid][Spawn] = SPAWN_RENTKUCA;
      			mysql_tqueryEx(SQL, "UPDATE `users` SET `Spawn` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Spawn], PI[playerid][SQLID]);
         		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste odabrali spawn | Rent Kuca!");
			}
			else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate rentanu kucu!");
		}
		case 3:
		{
  			if(PI[playerid][Stan] != -1)
	    	{
      			PI[playerid][Spawn] = SPAWN_STAN;
      			mysql_tqueryEx(SQL, "UPDATE `users` SET `Spawn` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Spawn], PI[playerid][SQLID]);
         		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste odabrali spawn | Stan!");
			}
			else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate stan!");
		}
		case 4:
		{
			if(PI[playerid][Lider] != 0 || PI[playerid][Clan] != 0)
	    	{
      			PI[playerid][Spawn] = SPAWN_ORGANIZACIJA;
      			mysql_tqueryEx(SQL, "UPDATE `users` SET `Spawn` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Spawn], PI[playerid][SQLID]);
         		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste odabrali spawn | Organizacija!");
			}
			else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste clan organizacije!");
		}
	}
	return 1;
}

Dialog:dialog_portime(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    Port_Lokacija[playerid] = listitem+1;
    Dialog_Show(playerid, dialog_portime2, DIALOG_STYLE_INPUT, "{1b71bc}Ime Porta", "Unesite novo ime izabranog porta.", "Dalje", "Izlaz");
    return 1;
}

Dialog:dialog_portime2(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    new imeport[35],
        id = Port_Lokacija[playerid];

	if(sscanf(inputtext, "s[35]", imeport))
		return Dialog_Show(playerid, dialog_portime2, DIALOG_STYLE_INPUT, "{1b71bc}Ime Porta", "Unesite novo ime izabranog porta.", "Dalje", "Izlaz");

	if(Port_Lokacija[playerid] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas izabranu port lokaciju.");

	strmid(PortInfo[id][PortIme], imeport, 0, strlen(imeport), 35);
	
    mysql_tqueryEx(SQL, "UPDATE `ports` SET `PortIme` = '%s' WHERE `SQLID` = '%d'", PortInfo[id][PortIme], PortInfo[id][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "Info: {FFFFFF}Ime lokacije promjenena u '%s'.", imeport);
	
	Dialog_Show(playerid, dialog_portvrsta, DIALOG_STYLE_INPUT, "{1b71bc}Vrsta Porta", "Unesite vrsta izabranog porta.\n[ 1. Lokacije | 2. Organizacije | 3. Poslovi ]", "Dalje", "Izlaz");
    return 1;
}

Dialog:dialog_portvrsta(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    new id = Port_Lokacija[playerid],
		vrsta;

    if(sscanf(inputtext, "i", vrsta))
		return Dialog_Show(playerid, dialog_portvrsta, DIALOG_STYLE_INPUT, "{1b71bc}Vrsta Porta", "Unesite vrsta izabranog porta.\n[ 1. Lokacije | 2. Organizacije | 3. Poslovi ]", "Dalje", "Izlaz");

	PortInfo[id][PortVrsta] = vrsta;

 	mysql_tqueryEx(SQL, "UPDATE `ports` SET `PortVrsta` = '%d' WHERE `SQLID` = '%d'",
		PortInfo[id][PortVrsta], PortInfo[id][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "Info: {FFFFFF}Vrsta lokacije '%s' uspesno promjenena.", PortInfo[id][PortIme]);
	Port_Lokacija[playerid] = -1;
	return 1;
}

Dialog:dialog_portpoz(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    new id = listitem+1,
		Float:Pos[3];

	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);

	PortInfo[id][PozicijaX] = Pos[0];
 	PortInfo[id][PozicijaY] = Pos[1];
 	PortInfo[id][PozicijaZ] = Pos[2];
 	
 	mysql_tqueryEx(SQL, "UPDATE `ports` SET `PozicijaX` = '%f', `PozicijaY` = '%f', `PozicijaZ` = '%f' WHERE `SQLID` = '%d'",
		PortInfo[id][PozicijaX], PortInfo[id][PozicijaY], PortInfo[id][PozicijaZ], PortInfo[id][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "Info: {FFFFFF}Pozicija lokacije '%s' uspesno promjenena na vasu poziciju.", PortInfo[id][PortIme]);
	return 1;
}

Dialog:dialog_gps(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;

	switch(listitem)
	{
	    case 0:
		{
            DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, 817.852, -1326.62, 13.4833, 5.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}Lokacija 'Spawn' vam je oznacena {FF0000}crveno {FFFFFF}na mapi.");
		}
		case 1:
		{
            DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, 1463.1, -1033.97, 23.6562, 5.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}Lokacija 'Banka' vam je oznacena {FF0000}crveno {FFFFFF}na mapi.");
		}
		case 2:
		{
            DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, 1477.35, -1731.22, 13.3828, 5.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}Lokacija 'Opstina' vam je oznacena {FF0000}crveno {FFFFFF}na mapi.");
		}
		case 3:
		{
            DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, 2008.92, -1267.1, 23.9844, 5.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}Lokacija 'Zlatara' vam je oznacena {FF0000}crveno {FFFFFF}na mapi.");
		}
		case 4:
		{
            DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, 1996.82, -1756.64, 13.3828, 5.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}Lokacija 'Auto Skola' vam je oznacena {FF0000}crveno {FFFFFF}na mapi.");
		}
		case 5:
		{
            DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, 1317.1543,-923.7031,37.8036, 5.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}Lokacija 'Market 24/7' vam je oznacena {FF0000}crveno {FFFFFF}na mapi.");
		}
		case 6:
		{
            DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, 1204.6899,-940.5520,42.7429, 5.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}Lokacija 'Burg' vam je oznacena {FF0000}crveno {FFFFFF}na mapi.");
		}
		case 7:
		{
            DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, 1041.8199,-1039.4399,31.7802, 5.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}Lokacija 'Tuning Garaza LS 1' vam je oznacena {FF0000}crveno {FFFFFF}na mapi.");
		}
		case 8:
		{
            DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, 2645.1699,-2008.5800,13.3828, 5.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}Lokacija 'Tuning Garaza LS 2' vam je oznacena {FF0000}crveno {FFFFFF}na mapi.");
		}
		case 9:
		{
            DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, -2706.2600,217.7170,4.1797, 5.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}Lokacija 'Tuning Garaza SF' vam je oznacena {FF0000}crveno {FFFFFF}na mapi.");
		}
		case 10:
		{
            DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, 2384.6001,1004.7200,10.8203, 5.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}Lokacija 'Tuning Garaza LV' vam je oznacena {FF0000}crveno {FFFFFF}na mapi.");
		}
		case 11:
		{
            DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, 1962.6400,-2012.3700,13.3828, 5.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}Lokacija 'Bugatti Auto Salon' vam je oznacena {FF0000}crveno {FFFFFF}na mapi.");
		}
		case 12:
		{
            DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, 1528.07,-1674.35,13.3828, 5.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}Lokacija 'Policijska Stanica' vam je oznacena {FF0000}crveno {FFFFFF}na mapi.");
		}
		case 13:
		{
            DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, 1243.43,-1710.58,13.3828, 5.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}Lokacija 'SAJ' vam je oznacena {FF0000}crveno {FFFFFF}na mapi.");
		}
		case 14:
		{
            DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, 1115.54,-1740.57, 13.4125, 5.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}Lokacija 'Pijaca' vam je oznacena {FF0000}crveno {FFFFFF}na mapi.");
		}
		case 15:
		{
            DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, 1712.64,-1159.54,23.6534, 5.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}Lokacija 'Lutrija' vam je oznacena {FF0000}crveno {FFFFFF}na mapi.");
		}
		case 16:
		{
            DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid, 1207.35, -1325.14, 13.398, 5.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0xFF0000FF, "#GPS: {FFFFFF}Lokacija 'Bolnica' vam je oznacena {FF0000}crveno {FFFFFF}na mapi.");
		}
	}
	return 1;
}

Dialog:dialog_port(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;

	switch(listitem)
	{
	    case 0: // Lokacije
		{
		    new prikazilistu[500], portlista;
			new string[500];
			for(new i = 0; i < MAX_PORT; i++)
			{
				if(PortInfo[i][PortVrsta] == 1)
				{
					format(string,sizeof(string),"\n{1b71bc}> {FFFFFF}%s", PortInfo[i][PortIme]);
					strcat(prikazilistu,string);
					Port_Lista[playerid][portlista] = i;
					portlista++;
				}
			}
			Dialog_Show(playerid, dialog_port1, DIALOG_STYLE_LIST, "{1b71bc}Lokacije Port", prikazilistu, "Port", "Izlaz");
		}
		case 1: // Organizacije
		{
		    new prikazilistu[500], portlista;
			new string[500];
			for(new i = 0; i < MAX_PORT; i++)
			{
				if(PortInfo[i][PortVrsta] == 2)
				{
					format(string,sizeof(string),"\n{1b71bc}> {FFFFFF}%s", PortInfo[i][PortIme]);
					strcat(prikazilistu,string);
					Port_Lista[playerid][portlista] = i;
					portlista++;
				}
			}
			Dialog_Show(playerid, dialog_port2, DIALOG_STYLE_LIST, "{1b71bc}Organizacije Port", prikazilistu, "Port", "Izlaz");
		}
		case 2: // Poslovi
		{
		    new prikazilistu[500], portlista;
			new string[500];
			for(new i = 0; i < MAX_PORT; i++)
			{
				if(PortInfo[i][PortVrsta] == 3)
				{
					format(string,sizeof(string),"\n{1b71bc}> {FFFFFF}%s", PortInfo[i][PortIme]);
					strcat(prikazilistu,string);
					Port_Lista[playerid][portlista] = i;
					portlista++;
				}
			}
			Dialog_Show(playerid, dialog_port3, DIALOG_STYLE_LIST, "{1b71bc}Poslovi Port", prikazilistu, "Port", "Izlaz");
		}
	}
	return 1;
}

Dialog:dialog_port1(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;
	
	new xd;
	for(new ld = 0; ld < MAX_PORT; ld++)
	{
		if(listitem == ld)
		{
  			xd = ld;
			break;
		}
	}
	new i = Port_Lista[playerid][xd];

	new tmpcar = GetPlayerVehicleID(playerid);

	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		SetVehiclePos(tmpcar, PortInfo[i][PozicijaX], PortInfo[i][PozicijaY], PortInfo[i][PozicijaZ]);
	}
	else
	{
		SetPlayerPos(playerid, PortInfo[i][PozicijaX], PortInfo[i][PozicijaY], PortInfo[i][PozicijaZ]);
	}
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Teleportovani ste.");
	new str[256];
	format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Igrac %s se teleportova%s do lokacije %s | Vrsta Porta: Lokacije!", ReturnPlayerName(playerid), PI[playerid][Pol] == 1 ? "o" : "la", PortInfo[i][PortIme]);
	AdminMessage(-1, str);
	return 1;
}

Dialog:dialog_port2(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;

	new xd;
	for(new ld = 0; ld < MAX_PORT; ld++)
	{
		if(listitem == ld)
		{
  			xd = ld;
			break;
		}
	}
	new i = Port_Lista[playerid][xd];

	new tmpcar = GetPlayerVehicleID(playerid);

	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		SetVehiclePos(tmpcar, PortInfo[i][PozicijaX], PortInfo[i][PozicijaY], PortInfo[i][PozicijaZ]);
	}
	else
	{
		SetPlayerPos(playerid, PortInfo[i][PozicijaX], PortInfo[i][PozicijaY], PortInfo[i][PozicijaZ]);
	}
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Teleportovani ste.");
	new str[256];
	format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Igrac %s se teleportova%s do lokacije %s | Vrsta Porta: Organizacije!", ReturnPlayerName(playerid), PI[playerid][Pol] == 1 ? "o" : "la", PortInfo[i][PortIme]);
	AdminMessage(-1, str);
	return 1;
}

Dialog:dialog_port3(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;

	new xd;
	for(new ld = 0; ld < MAX_PORT; ld++)
	{
		if(listitem == ld)
		{
  			xd = ld;
			break;
		}
	}
	new i = Port_Lista[playerid][xd];

	new tmpcar = GetPlayerVehicleID(playerid);

	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		SetVehiclePos(tmpcar, PortInfo[i][PozicijaX], PortInfo[i][PozicijaY], PortInfo[i][PozicijaZ]);
	}
	else
	{
		SetPlayerPos(playerid, PortInfo[i][PozicijaX], PortInfo[i][PozicijaY], PortInfo[i][PozicijaZ]);
	}
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Teleportovani ste.");
	new str[256];
	format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Igrac %s se teleportova%s do lokacije %s | Vrsta Porta: Poslovi!", ReturnPlayerName(playerid), PI[playerid][Pol] == 1 ? "o" : "la", PortInfo[i][PortIme]);
	AdminMessage(-1, str);
	return 1;
}

Dialog:dialog_erent(playerid, response, listitem, inputtext[])
{
	if(!response) return va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odustali ste od editovanja.");
	
	switch(listitem)
 	{
		case 0:
	    {
            EditDynamicObject(playerid, RentObjekat[RentEdit[playerid]]);
            va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odredite poziciju objekta a zatim mesto pickupa i spawnanja vozila podesite komandom /erent.");
		}
	    case 1:
		{
		    new rentid = RentEdit[playerid], Float:Poz[3];
	        GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);

			RentInfo[rentid][PickupX] = Poz[0];
	        RentInfo[rentid][PickupY] = Poz[1];
	        RentInfo[rentid][PickupZ] = Poz[2];

            mysql_tqueryEx(SQL, "UPDATE `rent` SET `PickupX` = '%f', `PickupY` = '%f', `PickupZ` = '%f' WHERE `SQLID` = '%d'",
				RentInfo[rentid][PickupX], RentInfo[rentid][PickupY], RentInfo[rentid][PickupZ], RentInfo[rentid][SQLID]);

	        UpdateRent(rentid);
        	RentEdit[playerid] = -1;
	        va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno kreiran/pomeren pickup");
		}
		case 2:
		{
		     new rentid = RentEdit[playerid], Float:Poz[4];
		     GetPlayerPos(playerid, Poz[0], Poz[1], Poz[2]);
	         GetPlayerFacingAngle(playerid, Poz[3]);

			 RentInfo[rentid][VoziloX] = Poz[0];
	         RentInfo[rentid][VoziloY] = Poz[1];
	         RentInfo[rentid][VoziloZ] = Poz[2]-0.3;
	         RentInfo[rentid][VoziloR] = Poz[3];
	         
	         mysql_tqueryEx(SQL, "UPDATE `rent` SET `VoziloX` = '%f', `VoziloY` = '%f', `VoziloZ` = '%f', `VoziloR` = '%f' WHERE `SQLID` = '%d'",
				RentInfo[rentid][VoziloX], RentInfo[rentid][VoziloY], RentInfo[rentid][VoziloZ], RentInfo[rentid][VoziloR], RentInfo[rentid][SQLID]);
				
             RentEdit[playerid] = -1;
	         va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno postavljeno mesto za stvaranje rent vozila.");
		}
		case 3:
		{
		    new rentid = RentEdit[playerid];

			UnistiRent(rentid);

			if(RentInfo[rentid][SQLID] < 1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj rent ne postoji u bazi podataka!");

			RentInfo[rentid][SQLID] = 0;
		    mysql_tqueryEx(SQL, "DELETE FROM `rent` WHERE `SQLID` = '%d'", rentid);

			RentEdit[playerid] = -1;
		    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Rent objekat je obrisan.");
    	}
	}
	return 1;
}

Dialog:dialog_rent(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;

	new rentid = GetNearestRentPickup(playerid), model, cijena;

	if(rentid == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu za rentanje vozila. Da vidite najblize mesto ukucajte /najblizirent.");

	if(IznajmioVozilo[playerid] != 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imas rentano vozilo (/unrent)!");

	if(listitem == 0) model = 462, cijena = 200;
	else if(listitem == 1) model = 527, cijena = 300;
	else if(listitem == 2) model = 426, cijena = 400;
	else if(listitem == 3) model = 587, cijena = 500;

	if(PI[playerid][Novac] < cijena) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovljno novca!");
	KreirajRentVozilo(playerid, model, rentid);
	PI[playerid][Novac] -= cijena;
	GivePlayerMoney(playerid, -cijena);
	CheckQuestDone(playerid, 1);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
 	RentTimer[playerid] = SetTimerEx("TimerRent", 1800000, false, "d", playerid);
  	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Iznajmili ste vozilo, mozete ga koristiti narednih 30 min. ili dok ne izadjete sa servera.");
   	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Da prekinete iznajmljivanje vozila, ukucajte /unrent.");
	return 1;
}

Dialog:dialog_firma(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    if(PI[playerid][Firma] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate firmu!");

	new i = PI[playerid][Firma];

	switch(listitem)
	{
		case 0:
		{
 			if(!IsPlayerInRangeOfPoint(playerid, 5.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ]))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste ispred vase firme!");

			Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Firma Informacije", "{FFFFFF}_______________________________________\n\n\
																			                      {1b71bc}Vlasnik Firme: {FFFFFF}%s\n\
																								  {1b71bc}Naziv Firme: {FFFFFF}%s\n\
																								  {1b71bc}Level: {FFFFFF}%d\n\
																								  {1b71bc}Cena: {FFFFFF}%d\n\
																								  {1b71bc}ID: {FFFFFF}%d\n\
																								  {1b71bc}Zatvoreno: {FFFFFF}%s\n\
																								  {1b71bc}Kasa: {FFFFFF}%d\n\n\
																								  _______________________________________", "Ok", "Izlaz", FirmaInfo[i][fVlasnik], FirmaInfo[i][fNaziv], FirmaInfo[i][fLevel],
																								  FirmaInfo[i][fCena], FirmaInfo[i][SQLID], FirmaInfo[i][fZatvoreno] == 1 ? "Da" : "Ne", FirmaInfo[i][fKasa]);
		}
		case 1:
		{
  			if(FirmaInfo[i][fVrsta] == VRSTA_POSAO)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ova firma nema interijer!");

			if(PI[playerid][Firma] == -1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate firmu!");
				
            if(!IsPlayerInRangeOfPoint(playerid, 15.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ]))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste ispred vase firme!");

			if(FirmaInfo[i][fZatvoreno] == 1)
			{
				FirmaInfo[i][fZatvoreno] = 0;
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Firma otkljucana!");
				mysql_tqueryEx(SQL, "UPDATE `business` SET `Zatvoreno` = '%d' WHERE `SQLID` = '%d'", FirmaInfo[i][fZatvoreno], FirmaInfo[i][SQLID]);
			}
			else
			{
			    FirmaInfo[i][fZatvoreno] = 1;
				va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Firma zakljucana!");
				mysql_tqueryEx(SQL, "UPDATE `business` SET `Zatvoreno` = '%d' WHERE `SQLID` = '%d'", FirmaInfo[i][fZatvoreno], FirmaInfo[i][SQLID]);
			}
		}
  		case 2:
		{
  			if(FirmaInfo[i][fVrsta] == VRSTA_POSAO)
	    	{
      			if(!IsPlayerInRangeOfPoint(playerid, 5.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ]))
			  		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste ispred vase firme!");

				Dialog_Show(playerid, dialog_fpodigni, DIALOG_STYLE_INPUT, "{1b71bc}Dizanje novca iz firme", "{FFFFFF}Unesite kolicinu novca koji zelite da podignete\n\
	                                                                                                          {FFFFFF}U kasi trenutno ima %d$!", "Podigni", "Izlaz",
                                                                                                              FirmaInfo[i][fKasa]);
			}
			else
			{
   				if(!IsPlayerInRangeOfPoint(playerid, 15.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]))
   					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u vasoj firmi!");
				
				Dialog_Show(playerid, dialog_fpodigni, DIALOG_STYLE_INPUT, "{1b71bc}Dizanje novca iz firme", "{FFFFFF}Unesite kolicinu novca koji zelite da podignete\n\
	                                                                                                          {FFFFFF}U kasi trenutno ima %d$!", "Podigni", "Izlaz",
                                                                                                              FirmaInfo[i][fKasa]);
			}
		}
		case 3:
		{
		    if(FirmaInfo[i][fVrsta] == VRSTA_POSAO)
	    	{
      			if(!IsPlayerInRangeOfPoint(playerid, 5.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ]))
			  		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste ispred vase firme!");

				Dialog_Show(playerid, dialog_fostavi, DIALOG_STYLE_INPUT, "{1b71bc}Ostavljanje novca iz firme", "{FFFFFF}Unesite kolicinu novca koji zelite da ostavite\n\
	                                                                                                          {FFFFFF}U kasi trenutno ima %d$!", "Podigni", "Izlaz",
                                                                                                              FirmaInfo[i][fKasa]);
			}
			else
			{
   				if(!IsPlayerInRangeOfPoint(playerid, 15.0, FirmaInfo[i][fIzlazX], FirmaInfo[i][fIzlazY], FirmaInfo[i][fIzlazZ]))
   					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u vasoj firmi!");

				Dialog_Show(playerid, dialog_fostavi, DIALOG_STYLE_INPUT, "{1b71bc}Ostavljanje novca iz firme", "{FFFFFF}Unesite kolicinu novca koji zelite da ostavite\n\
	                                                                                                          {FFFFFF}U kasi trenutno ima %d$!", "Podigni", "Izlaz",
                                                                                                              FirmaInfo[i][fKasa]);
			}
		}
		case 4:
		{
  			if(!IsPlayerInRangeOfPoint(playerid, 5.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ]))
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste ispred vase firme!");

			Dialog_Show(playerid, dialog_fnaziv, DIALOG_STYLE_INPUT, "{1b71bc}Firma Ime", "{FFFFFF}Upisite novo ime firme\n{FF0000}Zabranjeno je stavljati OOC ime firme!", "Promeni", "Izlaz");
		}
		case 5:
		{
			if(PI[playerid][Firma] == -1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate firmu!");

			if(!IsPlayerInRangeOfPoint(playerid, 5.0, FirmaInfo[i][fUlazX], FirmaInfo[i][fUlazY], FirmaInfo[i][fUlazZ]))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste ispred vase firme!");

			new cena1 = (FirmaInfo[i][fCena]/4)*2;
					
			Dialog_Show(playerid, dialog_fprodaja, DIALOG_STYLE_MSGBOX, "{1b71bc}Prodaja firme drzavi", "{FFFFFF}Prodaja firme drzavi\n\n\
												   					     Dali ste sigurni da zelite da prodate firmu drzavi za {1b71bc}%d$\n\n\
												                         {FFFFFF}Ako ste sigurni kliknite na {1b71bc}'Prodaj' {FFFFFF}ako ne kliknite na {FF0000}'Izlaz'",
																		 "Prodaj", "Izlaz", cena1);
		}
	}
	return 1;
}

Dialog:dialog_fpodigni(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(PI[playerid][Firma] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate firmu!");

	new i = PI[playerid][Firma];
	
	new iznos;

	if(sscanf(inputtext, "i", iznos))
	    return Dialog_Show(playerid, dialog_fpodigni, DIALOG_STYLE_INPUT, "{1b71bc}Dizanje novca iz firme", "{FF0000}Pogresan Iznos!\n\
																								             {FFFFFF}Unesite kolicinu novca koji zelite da podignete\n\
																								  	         U kasi trenutno ima %d$!", "Podigni", "Izlaz",
																								  			 FirmaInfo[i][fKasa]);
	if(iznos > FirmaInfo[i][fKasa])
	    return Dialog_Show(playerid, dialog_fpodigni, DIALOG_STYLE_INPUT, "{1b71bc}Dizanje novca iz firme", "{FF0000}Nemate toliko novca u kasi!\n\
																								             {FFFFFF}Unesite kolicinu novca koji zelite da podignete\n\
																								  	         U kasi trenutno ima %d$!", "Podigni", "Izlaz",
																								  			 FirmaInfo[i][fKasa]);
	if(iznos < 1 || iznos > 1000000)
	    return Dialog_Show(playerid, dialog_fpodigni, DIALOG_STYLE_INPUT, "{1b71bc}Dizanje novca iz firme", "{FF0000}Suma ne moze biti manja od 1$ i vec od 1000000$!\n\
																								             {FFFFFF}Unesite kolicinu novca koji zelite da podignete\n\
																								  	         U kasi trenutno ima %d$!", "Podigni", "Izlaz",
																								  			 FirmaInfo[i][fKasa]);

	FirmaInfo[i][fKasa] -= iznos;

	PI[playerid][Novac] += iznos;
	GivePlayerMoney(playerid, iznos);

    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', WHERE `SQLID` = '%d'",
		FirmaInfo[i][fKasa], FirmaInfo[i][SQLID]);
		
    mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
		PI[playerid][Novac], PI[playerid][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Podigli ste %d$ novca iz firme!", iznos);
	return 1;
}

Dialog:dialog_fostavi(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(PI[playerid][Firma] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate firmu!");

	new i = PI[playerid][Firma];

	new iznos;

	if(sscanf(inputtext, "i", iznos))
	    return Dialog_Show(playerid, dialog_fostavi, DIALOG_STYLE_INPUT, "{1b71bc}Ostavljanje novca iz firme", "{FF0000}Pogresan Iznos!\n\
																								                {FFFFFF}Unesite kolicinu novca koji zelite da ostavite\n\
																								  	            U kasi trenutno ima %d$!", "Ostavi", "Izlaz",
																								  			    FirmaInfo[i][fKasa]);
	if(iznos > FirmaInfo[i][fKasa])
	    return Dialog_Show(playerid, dialog_fostavi, DIALOG_STYLE_INPUT, "{1b71bc}Ostavljanje novca iz firme", "{FF0000}Nemate toliko novca u kasi!\n\
																								                {FFFFFF}Unesite kolicinu novca koji zelite da ostavite\n\
																								  	            U kasi trenutno ima %d$!", "Ostavi", "Izlaz",
																								  			    FirmaInfo[i][fKasa]);
	if(iznos < 1 || iznos > 1000000)
	    return Dialog_Show(playerid, dialog_fostavi, DIALOG_STYLE_INPUT, "{1b71bc}Ostavljanje novca iz firme", "{FF0000}Suma ne moze biti manja od 1$ i vec od 1000000$!\n\
																								                {FFFFFF}Unesite kolicinu novca koji zelite da ostavite\n\
                                                                                                                U kasi trenutno ima %d$!", "Ostavi", "Izlaz",
																								  			    FirmaInfo[i][fKasa]);

	FirmaInfo[i][fKasa] += iznos;

	PI[playerid][Novac] -= iznos;
	GivePlayerMoney(playerid, iznos);

    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', WHERE `SQLID` = '%d'",
		FirmaInfo[i][fKasa], FirmaInfo[i][SQLID]);

    mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
		PI[playerid][Novac], PI[playerid][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ostavili ste %d$ novca u vasu firmu!", iznos);
	return 1;
}

Dialog:dialog_fprodaja(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(PI[playerid][Firma] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate firmu!");

	new i = PI[playerid][Firma];
	
	new cena1 = (FirmaInfo[i][fCena]/4)*2;

	PI[playerid][Novac] += cena1;
	GivePlayerMoney(playerid, cena1);

	FirmaInfo[i][fImaVlasnika] = 0;
	FirmaInfo[i][fKasa] = 0;
	PI[playerid][Firma] = -1;
	
	mysql_tqueryEx(SQL, "UPDATE `business` SET `ImaVlasnika` = '%d', `Vlasnik` = 'Niko', `Kasa` = '%d', WHERE `SQLID` = '%d'",
		FirmaInfo[i][fImaVlasnika], FirmaInfo[i][fKasa], FirmaInfo[i][SQLID]);

	FirmaLabelIPickup(i);
			
    mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Firma` = '%d' WHERE `SQLID` = '%d'",
		PI[playerid][Novac], PI[playerid][Firma], PI[playerid][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prodali ste firmu za %d$!", cena1);
	return 1;
}

Dialog:dialog_fnaziv(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    if(PI[playerid][Firma] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate firmu!");

	new i = PI[playerid][Firma];
	
	new imeq[35];

	if(sscanf(inputtext, "s[35]", imeq))
		return Dialog_Show(playerid, dialog_fnaziv, DIALOG_STYLE_INPUT, "{1b71bc}Firma Ime", "{FFFFFF}Upisite novo ime firme\n{FF0000}Zabranjeno je stavljati OOC ime firme!", "Promeni", "Izlaz");

	if(strlen(imeq) > 35)
	    return Dialog_Show(playerid, dialog_fnaziv, DIALOG_STYLE_INPUT, "{1b71bc}Firma Ime", "{FF0000}Ime firme je predugacko!\n{FFFFFF}Upisite novo ime firme\n{FF0000}Zabranjeno je stavljati OOC ime firme!", "Promeni", "Izlaz");
			
	if(strfind(imeq, "|") != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Koriscenje znakova u imenu firme je zabranjeno!");

	strmid(FirmaInfo[i][fNaziv], imeq, 0, strlen(imeq), 255);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Postavili ste ime firme na '%s'!", imeq);
	FirmaLabelIPickup(i);

	mysql_tqueryEx(SQL, "UPDATE `business` SET `Naziv` = '%d', WHERE `SQLID` = '%d'",
		FirmaInfo[i][fNaziv], FirmaInfo[i][SQLID]);
	return 1;
}

Dialog:dialog_kmarket(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");

    switch(listitem)
	{
		case 0:
		{
			if(PI[playerid][Novac] < 150)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 150$!");
				
            if(PI[playerid][Mobilni] != 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec posedujes mobilni telefon!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 150;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 150;
			GivePlayerMoney(playerid, -150);
			new br = 100000 + random(899000);
			PI[playerid][Mobilni] = br;
			CheckQuestDone(playerid, 8);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Mobilni` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][Mobilni], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste mobilni telefon | Broj vaseg mobilnog je : %d!", br);
		}
		case 1:
		{
			if(PI[playerid][Novac] < 50)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 50$!");
				
            if(PI[playerid][Imenik] == 1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imate imenik!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 50;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 50;
			GivePlayerMoney(playerid, -50);
			PI[playerid][Imenik] = 1;

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Imenik` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][Imenik], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste imenik za 50$ | /broj [ za listu brojeva ]!");
			CheckQuestDone(playerid, 12);
		}
		case 2:
		{
			if(PI[playerid][Novac] < 20)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 20$!");
				
            if(PI[playerid][Cigare] != 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imas %d cigara!", PI[playerid][Cigare]);

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 20;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 20;
			GivePlayerMoney(playerid, -20);
			PI[playerid][Cigare] = 20;

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Cigare` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][Cigare], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste cigare za 20$ | ( /zapalicigaru | /ugasicigaru )!");
		}
		case 3:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10$!");
				
            if(PI[playerid][Upaljac] == 1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imas upaljac!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);
			PI[playerid][Upaljac] = 1;

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Upaljac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][Upaljac], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste upaljac za 10$!");
		}
		case 4:
		{
			if(PI[playerid][Novac] < 50)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 50$!");
				
            if(PI[playerid][Mobilni] == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas mobilni telefon!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 50;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 50;
			GivePlayerMoney(playerid, -50);
			PI[playerid][MobKredit] += 50;

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `MobKredit` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][Upaljac], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Dopunili ste vas mobilni racun sa 50 kredita!");
		}
		case 5:
		{
			if(PI[playerid][Novac] < 100)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 100$!");

            if(PI[playerid][Mobilni] == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas mobilni telefon!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 100;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 100;
			GivePlayerMoney(playerid, -100);
			PI[playerid][MobKredit] += 100;

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `MobKredit` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][Upaljac], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Dopunili ste vas mobilni racun sa 100 kredita!");
		}
		case 6:
		{
			if(PI[playerid][Novac] < 100)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 100$!");

            if(PI[playerid][Kanap] == 1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imas kanap!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 100;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 100;
			GivePlayerMoney(playerid, -100);
			PI[playerid][Kanap] = 1;

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Kanap` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][Kanap], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste kanap za 100$!");
		}
		case 7:
		{
			if(PI[playerid][Novac] < 300)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 300$!");

            if(PI[playerid][Naocare] == 1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imas kanap!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 300;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 300;
			GivePlayerMoney(playerid, -300);
			PI[playerid][Naocare] = 1;

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Naocare` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][Naocare], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste naocare za 300$ | /naocare!");
		}
		case 8:
		{
			if(PI[playerid][Novac] < 100)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 100$!");

			GivePlayerWeapon(playerid,WEAPON_FLOWER,1);
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 100;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 100;
			GivePlayerMoney(playerid, -100);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste cvece za 100$!");
		}
		case 9:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste sok za 10$!");
		}
		case 10:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste pivo za 10$!");
		}
		case 11:
		{
			if(PI[playerid][Novac] < 130)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 130$!");
				
            if(PI[playerid][Sat] == 1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imas sat!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 130;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 130;
			GivePlayerMoney(playerid, -130);
			PI[playerid][Sat] = 1;

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Sat` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][Sat], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste sat za 130$ | /vreme!");
		}
		case 12:
		{
			if(PI[playerid][Novac] < 300)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 300$!");

            if(PI[playerid][Hrana] == 5)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemozes imati vise od 5 hrane!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 300;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 130;
			GivePlayerMoney(playerid, -130);
			PI[playerid][Hrana] ++;

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Hrana` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][Hrana], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste sat za 130$ | /koristi!");
		}
	}
	return 1;
}

Dialog:dialog_kgs(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");

	if(PI[playerid][Level] < 2)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 2 da bi mogli kupovati oruzije!");
    
    switch(listitem)
	{
		case 0:
		{
			if(PI[playerid][Novac] < 100)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 100$!");

			GivePlayerWeapon(playerid,WEAPON_KNIFE,1);
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 100;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 100;
			GivePlayerMoney(playerid, -100);
			
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);
				
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste noz za 100$!");
		}
		case 1:
		{
			if(PI[playerid][Novac] < 60)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 60$!");

			GivePlayerWeapon(playerid,WEAPON_BAT,1);
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 60;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 60;
			GivePlayerMoney(playerid, -60);
			
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);
			
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste palicu za 60$!");
		}
		case 2:
		{
			if(PI[playerid][Novac] < 500)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 500$!");

			GivePlayerWeapon(playerid,WEAPON_SHOTGUN,60);
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 500;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 500;
			GivePlayerMoney(playerid, -500);
			
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);
			
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste shotgun za 500$!");
		}
		case 3:
		{
			if(PI[playerid][Novac] < 250)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 250$!");

			GivePlayerWeapon(playerid,WEAPON_PARACHUTE,1);
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 250;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 250;
			GivePlayerMoney(playerid, -250);
			
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);
			
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste padobran za 250$!");
		}
		case 4:
		{
			if(PI[playerid][Novac] < 600)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 600$!");

			GivePlayerWeapon(playerid,WEAPON_DEAGLE,50);
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 600;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 600;
			GivePlayerMoney(playerid, -600);
			
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);
			
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste dezert za 600$!");
		}
		case 5:
		{
			if(PI[playerid][Novac] < 1000)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 1000$!");

			GivePlayerWeapon(playerid,WEAPON_M4,150);
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 1000;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 1000;
			GivePlayerMoney(playerid, -1000);
			
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);
			
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste M4 za 1000$!");
		}
		case 6:
		{
			if(PI[playerid][Novac] < 1000)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 1000$!");

			GivePlayerWeapon(playerid,WEAPON_AK47,150);
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 1000;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 1000;
			GivePlayerMoney(playerid, -1000);
			
   			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);
			
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste AK-47 za 1000$!");
		}
		case 7:
		{
			if(PI[playerid][Novac] < 900) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 900$!");

			GivePlayerWeapon(playerid,WEAPON_MP5,100);
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 900;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

			PI[playerid][Novac] -= 900;
			GivePlayerMoney(playerid, -900);
			
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);
				
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste MP5 za 900$!");
		}
		case 8:
		{
			if(PI[playerid][Novac] < 2000)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 2000$!");

			GivePlayerWeapon(playerid,WEAPON_SNIPER,60);
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 2000;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 2000;
			GivePlayerMoney(playerid, -2000);
			
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);
				
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste Sniper za 2000$!");
		}
	}
	return 1;
}

Dialog:dialog_kpice(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");
		
	new string[50];

    switch(listitem)
	{
		case 0:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije pivo.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
		    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+350);
		}
		case 1:
		{
			if(PI[playerid][Novac] < 20)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 20$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 20;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 20;
			GivePlayerMoney(playerid, -20);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije rakiju.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
		    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+350);
		}
		case 2:
		{
			if(PI[playerid][Novac] < 50)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 50$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 50;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 50;
			GivePlayerMoney(playerid, -50);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije viski.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
		    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+350);
		}
		case 3:
		{
			if(PI[playerid][Novac] < 40)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 40$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 40;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 40;
			GivePlayerMoney(playerid, -40);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije liker.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
		    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+350);
		}
		case 4:
		{
			if(PI[playerid][Novac] < 35)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 35$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 35;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 35;
			GivePlayerMoney(playerid, -35);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije pelinkovac.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
		    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+350);
		}
		case 5:
		{
			if(PI[playerid][Novac] < 30)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 30$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 30;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 30;
			GivePlayerMoney(playerid, -30);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije vodku.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
		    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+350);
		}
		case 6:
		{
			if(PI[playerid][Novac] < 25)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 25$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 25;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 25;
			GivePlayerMoney(playerid, -25);

   			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije lozovacu.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
		    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+350);
		}
		case 7:
		{
			if(PI[playerid][Novac] < 30) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 30$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 30;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

			PI[playerid][Novac] -= 30;
			GivePlayerMoney(playerid, -30);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije vino.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
		    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+350);
		}
		case 8:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije vodu.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
		    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)-1000);
		}
	}
	return 1;
}

Dialog:dialog_teretana(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");

    switch(listitem)
	{
		case 0:
		{
			if(PI[playerid][Novac] < 100)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 100$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 100;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 100;
			GivePlayerMoney(playerid, -100);
			PI[playerid][BorbeniStil] = FIGHT_STYLE_NORMAL;

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `BorbeniStil` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][BorbeniStil], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Stil vase borbe je 'Normalan'!");
		}
		case 1:
		{
			if(PI[playerid][Novac] < 200)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 100$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 200;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 200;
			GivePlayerMoney(playerid, -200);
			PI[playerid][BorbeniStil] = FIGHT_STYLE_BOXING;

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `BorbeniStil` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][BorbeniStil], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Stil vase borbe je 'Boksing'!");
		}
		case 2:
		{
			if(PI[playerid][Novac] < 300)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 100$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 300;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 300;
			GivePlayerMoney(playerid, -300);
			PI[playerid][BorbeniStil] = FIGHT_STYLE_KUNGFU;

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `BorbeniStil` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][BorbeniStil], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Stil vase borbe je 'Kung Fu'!");
		}
		case 3:
		{
			if(PI[playerid][Novac] < 400)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 100$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 400;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 400;
			GivePlayerMoney(playerid, -400);
			PI[playerid][BorbeniStil] = FIGHT_STYLE_KNEEHEAD;

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `BorbeniStil` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][BorbeniStil], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Stil vase borbe je 'Kneehead'!");
		}
		case 4:
		{
			if(PI[playerid][Novac] < 500)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 100$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 500;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 500;
			GivePlayerMoney(playerid, -500);
			PI[playerid][BorbeniStil] = FIGHT_STYLE_GRABKICK;

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `BorbeniStil` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][BorbeniStil], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Stil vase borbe je 'Grabkick'!");
		}
		case 5:
		{
			if(PI[playerid][Novac] < 600)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 100$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 600;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 600;
			GivePlayerMoney(playerid, -600);
			PI[playerid][BorbeniStil] = FIGHT_STYLE_ELBOW;

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `BorbeniStil` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][BorbeniStil], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Stil vase borbe je 'Elbow'!");
		}
	}
	return 1;
}

Dialog:dialog_kss(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");
		
    switch(listitem)
	{
		case 0:
		{
			if(PI[playerid][Novac] < 50)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas dovoljno novca 50$!");

			GivePlayerWeapon(playerid, WEAPON_VIBRATOR2, 1);
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 50;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 50;
			GivePlayerMoney(playerid, -50);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);
				
   			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste sivi vibrator za 50$.");
		}
		case 1:
		{
			if(PI[playerid][Novac] < 50)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas dovoljno novca 50$!");

			GivePlayerWeapon(playerid, WEAPON_DILDO2, 1);
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 50;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 50;
			GivePlayerMoney(playerid, -50);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste beli vibrator za 50$.");
		}
		case 2:
		{
			if(PI[playerid][Novac] < 70)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas dovoljno novca 70$!");
			
			GivePlayerWeapon(playerid, WEAPON_DILDO, 1);
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 70;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 70;
			GivePlayerMoney(playerid, -70);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);
				
   			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste ljubicasti vibrator za 70$.");
		}
		case 3:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas dovoljno novca 10$!");

			GivePlayerWeapon(playerid, WEAPON_FLOWER, 1);
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);
				
   			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste cvece za 10$.");
		}
	}
	return 1;
}

Dialog:dialog_krestoran(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");
		
    static Float:hp,
		Float:nhp,
		string[50];

	GetPlayerHealth(playerid, hp);
	nhp = floatadd(hp, 20.0);
	SetPlayerHealth(playerid, nhp);
	if(nhp > 99.0) SetPlayerHealth(playerid, 99.0);
	if(nhp >= 99.0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste gladni!");

	switch(listitem)
	{
	    case 0:
		{
			if(PI[playerid][Novac] < 20)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 20$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 20;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 20;
			GivePlayerMoney(playerid, -20);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede supu.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);
   			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 1:
		{
			if(PI[playerid][Novac] < 30)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 30$!");
				
            FirmaInfo[UsaoFirma[playerid]][fKasa] += 30;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 30;
			GivePlayerMoney(playerid, -30);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);
				
    		format(string, sizeof(string), "{C2A2DA}* %s jede pasulj.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);
   			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 2:
		{
			if(PI[playerid][Novac] < 40)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 40$!");
				
            FirmaInfo[UsaoFirma[playerid]][fKasa] += 40;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 40;
			GivePlayerMoney(playerid, -40);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede riblju corbu.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);
   			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 3:
		{
			if(PI[playerid][Novac] < 60)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 60$!");
				
            FirmaInfo[UsaoFirma[playerid]][fKasa] += 60;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 60;
			GivePlayerMoney(playerid, -60);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede slovenski kulen.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);
   			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 4:
		{
			if(PI[playerid][Novac] < 30)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 30$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 30;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 30;
			GivePlayerMoney(playerid, -30);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);
				
			format(string, sizeof(string), "{C2A2DA}* %s jede pitu od sira.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
  		case 5:
		{
			if(PI[playerid][Novac] < 70)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 70$!");
				
            FirmaInfo[UsaoFirma[playerid]][fKasa] += 70;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 70;
			GivePlayerMoney(playerid, -70);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede raznjice.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
  		case 6:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10$!");
			
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede palacinke.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
  		case 7:
		{
			if(PI[playerid][Novac] < 30)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 30$!");
				
            FirmaInfo[UsaoFirma[playerid]][fKasa] += 30;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 30;
			GivePlayerMoney(playerid, -30);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);
				
			format(string, sizeof(string), "{C2A2DA}* %s jede cvarke.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
  		case 8:
		{
			if(PI[playerid][Novac] < 90)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 90$!");
				
            FirmaInfo[UsaoFirma[playerid]][fKasa] += 30;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 30;
			GivePlayerMoney(playerid, -30);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede biftek.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 9:
		{
			if(PI[playerid][Novac] < 50)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 50$!");
			
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 50;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 50;
			GivePlayerMoney(playerid, -50);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede proju.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 10:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);
				
			format(string, sizeof(string), "{C2A2DA}* %s pije coca colu.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);
   			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
		}
		case 11:
		{
			if(PI[playerid][Novac] < 100)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 100$!");
			
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 100;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 100;
			GivePlayerMoney(playerid, -100);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije viski.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
		    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+350);
		}
		case 12:
		{
			if(PI[playerid][Novac] < 10) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10$!");
			
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);
				
			format(string, sizeof(string), "{C2A2DA}* %s pije pivo.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
		    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+350);
		}
		case 13:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10$!");
			
			FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije gusti sok.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
		}
	}
	return 1;
}

Dialog:dialog_kburg(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");

    static Float:hp,
		Float:nhp,
		string[50];

	GetPlayerHealth(playerid, hp);
	nhp = floatadd(hp, 20.0);
	SetPlayerHealth(playerid, nhp);
	if(nhp > 99.0) SetPlayerHealth(playerid, 99.0);
	if(nhp >= 99.0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste gladni!");

	switch(listitem)
	{
	    case 0:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede hamburger.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);
   			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 1:
		{
			if(PI[playerid][Novac] < 15)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 15$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 15;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 15;
			GivePlayerMoney(playerid, -15);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

    		format(string, sizeof(string), "{C2A2DA}* %s jede cheeseburger.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);
   			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 2:
		{
			if(PI[playerid][Novac] < 15)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 15$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 15;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 15;
			GivePlayerMoney(playerid, -15);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede pomfrit.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);
   			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 3:
		{
			if(PI[playerid][Novac] < 20)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 20$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 20;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 20;
			GivePlayerMoney(playerid, -20);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede pilece medaljone.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);
   			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 4:
		{
			if(PI[playerid][Novac] < 25)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 25$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 25;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 25;
			GivePlayerMoney(playerid, -25);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede mijesanu salatu.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
  		case 5:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije kafu.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
		}
  		case 6:
		{
			if(PI[playerid][Novac] < 15)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 15$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 15;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 15;
			GivePlayerMoney(playerid, -15);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije caj.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
		}
  		case 7:
		{
			if(PI[playerid][Novac] < 20)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 30$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 20;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 20;
			GivePlayerMoney(playerid, -20);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede sladoled.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
  		case 8:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 90$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije coca colu.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
		}
		case 9:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 50$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije vodu.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
		}
	}
	return 1;
}

Dialog:dialog_kcluckin(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");

    static Float:hp,
		Float:nhp,
		string[50];

	GetPlayerHealth(playerid, hp);
	nhp = floatadd(hp, 20.0);
	SetPlayerHealth(playerid, nhp);
	if(nhp > 99.0) SetPlayerHealth(playerid, 99.0);
	if(nhp >= 99.0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste gladni!");

	switch(listitem)
	{
	    case 0:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede hamburger.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);
   			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 1:
		{
			if(PI[playerid][Novac] < 20)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 20$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 20;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 20;
			GivePlayerMoney(playerid, -20);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

    		format(string, sizeof(string), "{C2A2DA}* %s jede sladoled tortu.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);
   			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 2:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede sendvic.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);
   			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 3:
		{
			if(PI[playerid][Novac] < 20)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 20$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 20;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 20;
			GivePlayerMoney(playerid, -20);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede burek.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);
   			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 4:
		{
			if(PI[playerid][Novac] < 15)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 15$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 15;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 15;
			GivePlayerMoney(playerid, -15);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede krofnu.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
  		case 5:
		{
			if(PI[playerid][Novac] < 15)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 15$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 15;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 15;
			GivePlayerMoney(playerid, -15);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije kakao.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
		}
  		case 6:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije coca cola.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
		}
  		case 7:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije kafu.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
		}
	}
	return 1;
}

Dialog:dialog_kpizza(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(FirmaInfo[UsaoFirma[playerid]][fProdukti] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemamo vise produkata!");

    static Float:hp,
		Float:nhp,
		string[50];

	GetPlayerHealth(playerid, hp);
	nhp = floatadd(hp, 20.0);
	SetPlayerHealth(playerid, nhp);
	if(nhp > 99.0) SetPlayerHealth(playerid, 99.0);
	if(nhp >= 99.0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste gladni!");

	switch(listitem)
	{
	    case 0:
		{
			if(PI[playerid][Novac] < 30)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 30$!");

			FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 30;
			GivePlayerMoney(playerid, -30);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede kapricozu.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);
   			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 1:
		{
			if(PI[playerid][Novac] < 25)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 25$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 25;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 25;
			GivePlayerMoney(playerid, -25);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

    		format(string, sizeof(string), "{C2A2DA}* %s jede margarita.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);
   			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 2:
		{
			if(PI[playerid][Novac] < 15)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 15$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 15;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 15;
			GivePlayerMoney(playerid, -15);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede piletinu.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);
   			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 3:
		{
			if(PI[playerid][Novac] < 15)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 15$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 15;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 15;
			GivePlayerMoney(playerid, -15);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s jede pomfrit.", ReturnPlayerName(playerid));
			ProxMessage(playerid, string, 20.0);
   			OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		}
		case 4:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije limunadu.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
		}
  		case 5:
		{
			if(PI[playerid][Novac] < 10)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca 10$!");

            FirmaInfo[UsaoFirma[playerid]][fKasa] += 10;
			FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

		    mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
				FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);

            PI[playerid][Novac] -= 10;
			GivePlayerMoney(playerid, -10);

			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			format(string, sizeof(string), "{C2A2DA}* %s pije kafu.", ReturnPlayerName(playerid));
   			ProxMessage(playerid, string, 20.0);
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
		}
	}
	return 1;
}

Dialog:dialog_satiket(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    if(sastavljatiket[playerid] == false)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne sastavljate tiket!");

	if(UtakmicaInfo[playerid][izabraotekmu[playerid]][Kvota][listitem] == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Odabrana kvota nije igriva!");

	for(new i = 0; i < 15; i++)
 	{
  		if(UtakmicaInfo[playerid][izabraotekmu[playerid]][ParID] == 0) return 1;
    	if(TiketInfo[playerid][i][ParID] == UtakmicaInfo[playerid][izabraotekmu[playerid]][ParID])
     	{
      		va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Odigrali ste vec tu utakmicu!");
        	return 1;
      	}
  	}
	new bool:found = false;
 	for(new i = 0; i < 15; ++i)
  	{
   		if(TiketInfo[playerid][i][ParID] == 0)
     	{
      		TiketInfo[playerid][i][ParID] = UtakmicaInfo[playerid][izabraotekmu[playerid]][ParID];
        	TiketInfo[playerid][i][Kvota] = UtakmicaInfo[playerid][izabraotekmu[playerid]][Kvota][listitem];

			if(listitem == 0) TiketInfo[playerid][i][Odigrao] = 1;//1
   			if(listitem == 1) TiketInfo[playerid][i][Odigrao] = 3;//X
      		if(listitem == 2) TiketInfo[playerid][i][Odigrao] = 2;//2
      		if(listitem == 3) TiketInfo[playerid][i][Odigrao] = 4;//3+
      		if(listitem == 4) TiketInfo[playerid][i][Odigrao] = 5;//4+
        	if(listitem == 5) TiketInfo[playerid][i][Odigrao] = 6;//gg&3+
         	format(TiketInfo[playerid][i][Par], 100, "%s",UtakmicaInfo[playerid][izabraotekmu[playerid]][Par]);

			new string2[200];
   			format(string2, sizeof(string2),"(%d)_%s_(%s)_-_%0.2f",TiketInfo[playerid][i][ParID],TiketInfo[playerid][i][Par],GetTicketPlay(TiketInfo[playerid][i][Odigrao]),TiketInfo[playerid][i][Kvota]);
      		strreplace(string2, ' ', '_');
        	PlayerTextDrawSetString(playerid, biltentiket[playerid][i+1], string2);
         	found = true;
          	break;
      	}
	}
 	if(found == false) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Odigrali ste maksimalno utakmica!");
  	///ukupna kvota
   	new Float:ukupnakvota = 1.0;
    for(new i = 0; i < 15; ++i)
    {
    	if(TiketInfo[playerid][i][ParID] > 0)
     	{
      		ukupnakvota = TiketInfo[playerid][i][Kvota]*ukupnakvota;
      	}
    }
    new kvotastr[50]; format(kvotastr, sizeof(kvotastr),"Ukupna_kvota:_%0.2f",ukupnakvota);
    PlayerTextDrawSetString(playerid, biltentd[playerid][195], kvotastr);
    return 1;
}

Dialog:dialog_urezultat(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

	static idtekme,
		rezultat = 0,
		staigrastr[10],
		gol1,
		gol2;

	if(sscanf(inputtext,"is[10]ii",idtekme,staigrastr,gol1,gol2))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nepravilan unos!");

	if(idtekme < 1 || idtekme > 2000000000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nepravilan unos IDa utakmice!");

	if(strlen(staigrastr) > 10 || strlen(staigrastr) < 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan unos!");

	rezultat = TicketWhat(staigrastr);

	if(rezultat == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan unos rezultata!");

  	new query[256];
   	format(query, sizeof(query), "SELECT * FROM `matchs` WHERE `SQLID` = '%d'", idtekme);
    mysql_tquery(SQL, query, "CheckTiket9", "iiiii", playerid,idtekme,rezultat,gol1,gol2);
    return 1;
}

Dialog:dialog_tend(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;
	
	if(sastavljatiket[playerid] == false) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne sastavljate tiket!");
    
	new ulozeno = strval(inputtext);
    
	if(ulozeno < 1000 || ulozeno > 50000) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ulog mora biti izmedju 1.000$-50.000$!");
    
	if(ulozeno > PI[playerid][Novac]) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko novca!");
    
	if(gettime() > tikettime[playerid]) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Predugo ste sastavljali tiket.");
   	
	BiltenTD(playerid,false);
	PI[playerid][Novac] -= ulozeno;
    GivePlayerMoney(playerid, -ulozeno);

    FirmaInfo[UsaoFirma[playerid]][fKasa] += ulozeno;
	FirmaInfo[UsaoFirma[playerid]][fProdukti] --;

	mysql_tqueryEx(SQL, "UPDATE `business` SET `Kasa` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'",
		FirmaInfo[UsaoFirma[playerid]][fKasa], FirmaInfo[UsaoFirma[playerid]][fProdukti], FirmaInfo[UsaoFirma[playerid]][SQLID]);
    
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);        
    mysql_tqueryEx(SQL, "INSERT INTO `tickets` (Ime, Ulozio) VALUES( '%s', '%d' )", ReturnPlayerName(playerid), ulozeno);
            
	for(new i = 0; i < 15; ++i)
    {
    	if(TiketInfo[playerid][i][ParID] > 0)
        {
        	mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par%d` = '%s',`Par%dID` = '%d',`Par%dOdigrao` = '%d',`Par%dKvota` = '%f' WHERE `Ime` = '%s' LIMIT 1",
         		i+1,TiketInfo[playerid][i][Par],i+1,TiketInfo[playerid][i][ParID],i+1,TiketInfo[playerid][i][Odigrao],i+1,TiketInfo[playerid][i][Kvota],ReturnPlayerName(playerid));
        }        
    }
    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odigrali ste tiket, mozete ga provjeravati na /tiket.");
  	return 1;
}

Dialog:dialog_tpreview(playerid, response, listitem, inputtext[])
{
    if(!response)
    {
        Dialog_Show(playerid, dialog_tend, DIALOG_STYLE_INPUT, "Sastavljanje tiketa", "Unesite koliko ulazete. (1000$-50000$)", "OK", "");
	}
	
	kojautakmica[playerid]++;
 	new query[256];
  	format(query, sizeof(query), "SELECT * FROM `matchs` WHERE Datum >= NOW() AND `Rezultat` = '0'", ReturnPlayerName(playerid));
   	mysql_tquery(SQL, query, "CheckTiket2", "ii", playerid,0);
   	return 1;
}

Dialog:dialog_stiket(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    static idtekme,
		staigra = 0,
		staigrastr[10];

	if(sscanf(inputtext,"is[10]",idtekme,staigrastr))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nepravilan unos!");

	if(idtekme < 1 || idtekme > 2000000000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nepravilan unos!");

	staigra = TicketWhat(staigrastr);

	if(staigra == 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Pogresan unos!");

  	new query[256];
   	format(query, sizeof(query), "SELECT * FROM `matchs` WHERE Datum >= NOW() AND `SQLID` = '%d'",idtekme);
    mysql_tquery(SQL, query, "CheckTiket3", "iii", playerid,idtekme,staigra);
    return 1;
}

Dialog:dialog_vozila(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    switch(listitem)
    {
   		case 0:
    	{
	    	new Vozilo_1 = PI[playerid][Vozilo1];

			if(Vozilo_1 == -1)
		 		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate vozilo na slotu 1!");
		 		
            VoziloSlot[playerid] = 1;

			Dialog_Show(playerid, dialog_vozilo, DIALOG_STYLE_LIST, "{1b71bc}Vozilo 1", "{1b71bc}> {FFFFFF}Informacije\n\
										                                                 {1b71bc}> {FFFFFF}%s\n\
																						 {1b71bc}> {FFFFFF}Lociraj vozilo\n\
																						 {1b71bc}> {FFFFFF}Parkiraj vozilo\n\
																						 {1b71bc}> {FFFFFF}Promena boje\n\
																						 {1b71bc}> {FFFFFF}Ostavi u vozilu\n\
																						 {1b71bc}> {FFFFFF}Uzmi iz vozila\n\
																						 {1b71bc}> {FFFFFF}Prodaj vozilo\n\
																						 {1b71bc}> {FFFFFF}Ugradi radio\n\
																						 {1b71bc}> {FFFFFF}Radio\n\
																						 {1b71bc}> {FFFFFF}Prodaj vozilo igracu\n\
																						 {1b71bc}> {FFFFFF}Skini Tuning", "Odaberi", "Nazad",
																						 VoziloInfo[Vozilo_1][vZakljucan] == 1 ? "Otkljucaj Vozilo" : "Zakljucaj Vozilo");
  		}
		case 1:
    	{
	    	new Vozilo_2 = PI[playerid][Vozilo2];

			if(Vozilo_2 == -1)
		 		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate vozilo na slotu 2!");

            VoziloSlot[playerid] = 2;

			Dialog_Show(playerid, dialog_vozilo, DIALOG_STYLE_LIST, "{1b71bc}Vozilo 2", "{1b71bc}> {FFFFFF}Informacije\n\
										                                                 {1b71bc}> {FFFFFF}%s\n\
																						 {1b71bc}> {FFFFFF}Lociraj vozilo\n\
																						 {1b71bc}> {FFFFFF}Parkiraj vozilo\n\
																						 {1b71bc}> {FFFFFF}Promena boje\n\
																						 {1b71bc}> {FFFFFF}Ostavi u vozilu\n\
																						 {1b71bc}> {FFFFFF}Uzmi iz vozila\n\
																						 {1b71bc}> {FFFFFF}Prodaj vozilo\n\
																						 {1b71bc}> {FFFFFF}Ugradi radio\n\
																						 {1b71bc}> {FFFFFF}Radio\n\
																						 {1b71bc}> {FFFFFF}Prodaj vozilo igracu\n\
																						 {1b71bc}> {FFFFFF}Skini Tuning", "Odaberi", "Nazad",
																						 VoziloInfo[Vozilo_2][vZakljucan] == 1 ? "Otkljucaj Vozilo" : "Zakljucaj Vozilo");
  		}
		case 2:
    	{
	    	new Vozilo_3 = PI[playerid][Vozilo3];

			if(Vozilo_3 == -1)
		 		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate vozilo na slotu 3!");

            VoziloSlot[playerid] = 3;

			Dialog_Show(playerid, dialog_vozilo, DIALOG_STYLE_LIST, "{1b71bc}Vozilo 3", "{1b71bc}> {FFFFFF}Informacije\n\
										                                                 {1b71bc}> {FFFFFF}%s\n\
																						 {1b71bc}> {FFFFFF}Lociraj vozilo\n\
																						 {1b71bc}> {FFFFFF}Parkiraj vozilo\n\
																						 {1b71bc}> {FFFFFF}Promena boje\n\
																						 {1b71bc}> {FFFFFF}Ostavi u vozilu\n\
																						 {1b71bc}> {FFFFFF}Uzmi iz vozila\n\
																						 {1b71bc}> {FFFFFF}Prodaj vozilo\n\
																						 {1b71bc}> {FFFFFF}Ugradi radio\n\
																						 {1b71bc}> {FFFFFF}Radio\n\
																						 {1b71bc}> {FFFFFF}Prodaj vozilo igracu\n\
																						 {1b71bc}> {FFFFFF}Skini Tuning", "Odaberi", "Nazad",
																						 VoziloInfo[Vozilo_3][vZakljucan] == 1 ? "Otkljucaj Vozilo" : "Zakljucaj Vozilo");
  		}
	}
	return 1;
}

Dialog:dialog_vozilo(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    new Vozilo_1;
    switch(VoziloSlot[playerid])
    {
    	case 1: Vozilo_1 = PI[playerid][Vozilo1];
     	case 2: Vozilo_1 = PI[playerid][Vozilo2];
      	case 3: Vozilo_1 = PI[playerid][Vozilo3];
       	default: return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate nijedno vozilo!");
    }
    switch(listitem)
    {
    	case 0:
     	{
     		if(Vozilo_1 == -1)
		 		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate vozilo na ovom slotu!");
		 		
			va_SendClientMessage(playerid,-1,"{1b71bc}||-------------------------------------------------------------------------------------------||");
			va_SendClientMessage(playerid,-1,"{1b71bc}Vlasnik vozila: {FFFFFF}%s | {1b71bc}ID Vozila: {FFFFFF}%d | {1b71bc}Zakljucano: {FFFFFF}%s",VoziloInfo[Vozilo_1][vVlasnik],VoziloInfo[Vozilo_1][vID],VoziloInfo[Vozilo_1][vZakljucan] == 1 ? "Da" : "Ne");
			va_SendClientMessage(playerid,-1,"{1b71bc}Model: {FFFFFF}%s | {1b71bc}Droga: {FFFFFF}%dg | {1b71bc}Materijali: {FFFFFF}%d",ImenaVozila[VoziloInfo[Vozilo_1][vModel] - 400], VoziloInfo[Vozilo_1][vDroga], VoziloInfo[Vozilo_1][vMats]);
			va_SendClientMessage(playerid,-1,"{1b71bc}Oruzije: {FFFFFF}%s | {1b71bc}Cijena: {FFFFFF}%d$ | {1b71bc}Boja: {FFFFFF}%d/%d",VoziloInfo[Vozilo_1][vOruzije] == 1 ? "Da" : "Ne", VoziloInfo[Vozilo_1][vCena],VoziloInfo[Vozilo_1][vBoja1],VoziloInfo[Vozilo_1][vBoja2]);
   			va_SendClientMessage(playerid,-1,"{1b71bc}||-------------------------------------------------------------------------------------------||");
		}
		case 1:
		{
  			if(Vozilo_1 == -1)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate vozilo na ovom slotu!");
  				
            new Float:vehPoz[3];
			GetVehiclePos(VoziloInfo[Vozilo_1][vID], vehPoz[0], vehPoz[1], vehPoz[2]);

			if(!IsPlayerInRangeOfPoint(playerid, 8.0, vehPoz[0], vehPoz[1], vehPoz[2]))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u blizini svog vozila!");
				
            if(gettime() < OZSpam[playerid])
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Otkljucavanje/zakljucavanje vozila mozete svakih 5 sekundi.");

			OZSpam[playerid] = gettime() + 5;

			if(VoziloInfo[Vozilo_1][vZakljucan] == 0)
			{
				VoziloInfo[Vozilo_1][vZakljucan] = 1;
				GameTextForPlayer(playerid, "~w~VOZILO ~n~~r~ZAKLJUCANO", 4000, 3);

				if(VoziloJeAuto(GetVehicleModel(VoziloInfo[Vozilo_1][vID])))
    			{
			        foreach(new i : Player) { if(IsPlayerInRangeOfPoint(i, 20.0, vehPoz[0], vehPoz[1], vehPoz[2])) PlayerPlaySound(i, 24600, vehPoz[0], vehPoz[1], vehPoz[2]); }
       			}
				mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Zakljucan` = '1' WHERE `SQLID` = '%d'", VoziloInfo[Vozilo_1][SQLID]);
			}
			else
			{
				VoziloInfo[Vozilo_1][vZakljucan] = 0;
				GameTextForPlayer(playerid, "~w~VOZILO ~n~~g~OTKLJUCANO", 4000, 3);

				if(VoziloJeAuto(GetVehicleModel(VoziloInfo[Vozilo_1][vID])))
    			{
			        foreach(new i : Player) { if(IsPlayerInRangeOfPoint(i, 20.0, vehPoz[0], vehPoz[1], vehPoz[2])) PlayerPlaySound(i, 24600, vehPoz[0], vehPoz[1], vehPoz[2]); }
       			}
				mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Zakljucan` = '0' WHERE `SQLID` = '%d'", VoziloInfo[Vozilo_1][SQLID]);
			}
		}
		case 2:
		{
			new Float:Poz[3];
			Lociranje[playerid] = 1;
			GetVehiclePos(VoziloInfo[Vozilo_1][vID], Poz[0], Poz[1], Poz[2]);
			SetPlayerCheckpoint(playerid, Poz[0], Poz[1], Poz[2], 4.0);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Vase auto je oznaceno {FF0000}crveno {FFFFFF}na mapi!");
		}
		case 3:
		{
			new Float:PozAS[4],
				Float:HP;

			if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID])
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u svom vozilu!");

			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu vozaca!");

			GetVehicleHealth(GetPlayerVehicleID(playerid), HP);

			if(HP < 400.0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vozilo vam je previse osteceno, ne mozete ga parkirati!");

			GetVehiclePos(VoziloInfo[Vozilo_1][vID], PozAS[0], PozAS[1], PozAS[2]);
			GetVehicleZAngle(VoziloInfo[Vozilo_1][vID], PozAS[3]);
			VoziloInfo[Vozilo_1][vPozX] = PozAS[0];
			VoziloInfo[Vozilo_1][vPozY] = PozAS[1];
			VoziloInfo[Vozilo_1][vPozZ] = PozAS[2];
			VoziloInfo[Vozilo_1][vPozA] = PozAS[3];
			DestroyVehicle(VoziloInfo[Vozilo_1][vID]);
			DestroyDynamic3DTextLabel(VoziloInfo[Vozilo_1][v3DText]);
			VoziloInfo[Vozilo_1][vVW] = GetPlayerVirtualWorld(playerid);
			VoziloInfo[Vozilo_1][vInt] = GetPlayerInterior(playerid);

			VoziloInfo[Vozilo_1][vID] = AddStaticVehicleEx(VoziloInfo[Vozilo_1][vModel],VoziloInfo[Vozilo_1][vPozX],VoziloInfo[Vozilo_1][vPozY],VoziloInfo[Vozilo_1][vPozZ],VoziloInfo[Vozilo_1][vPozA],VoziloInfo[Vozilo_1][vBoja1],VoziloInfo[Vozilo_1][vBoja2],2400);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Vozilo je uspesno parkirano!");

			mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `X` = '%f', `Y` = '%f', `Z` = '%f', `A` = '%f', `Interijer` = '%d', `VW` = '%d'  WHERE `SQLID` = '%d'",
				VoziloInfo[Vozilo_1][vPozX], VoziloInfo[Vozilo_1][vPozY], VoziloInfo[Vozilo_1][vPozZ], VoziloInfo[Vozilo_1][vPozA], VoziloInfo[Vozilo_1][vInt], VoziloInfo[Vozilo_1][vVW], VoziloInfo[Vozilo_1][SQLID]);

			SetVehicleToRespawn(VoziloInfo[Vozilo_1][vID]);
			PostaviVLabel(VoziloInfo[Vozilo_1][vID]);
			ModVehicle(Vozilo_1);
		}
		case 4:
		{
		    if(Vozilo_1 == -1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate vozilo na ovom slotu!");

			if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID])
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u svom vozilu!");

			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu vozaca!");

			Dialog_Show(playerid, dialog_vboja, DIALOG_STYLE_INPUT, "{1b71bc}Boja Vozila", "{FFFFFF}Unesite ID boje 1 i 2 sa razmakom (Primer: 5 1)\nCena Boje: 500$", "Promeni", "Izlaz");
		}
		case 5:
		{
		    if(Vozilo_1 == -1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate vozilo na ovom slotu!");

			if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID])
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u svom vozilu!");

			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu vozaca!");
				
    		Dialog_Show(playerid, dialog_vostavi, DIALOG_STYLE_LIST, "{1b71bc}Ostavi u vozilu", "{1b71bc}> {FFFFFF}Drogu\n\
																				               {1b71bc}> {FFFFFF}Materijale\n\
																							   {1b71bc}> {FFFFFF}Oruzije", "Odaberi", "Izlaz");
		}
		case 6:
		{
		    if(Vozilo_1 == -1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate vozilo na ovom slotu!");

			if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID])
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u svom vozilu!");

			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu vozaca!");

    		Dialog_Show(playerid, dialog_vuzmi, DIALOG_STYLE_LIST, "{1b71bc}Uzmi iz vozila", "{1b71bc}> {FFFFFF}Drogu\n\
																				               {1b71bc}> {FFFFFF}Materijale\n\
																							   {1b71bc}> {FFFFFF}Oruzije", "Odaberi", "Izlaz");
		}
		case 7:
		{
		    if(Vozilo_1 == -1) 
                return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate vozilo na ovom slotu!");

			if(!IsPlayerInAnyVehicle(playerid))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u vozilu!");

			if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID])
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u svom vozilu!");

			if(!IsPlayerInRangeOfPoint(playerid, 35.0, 1091.1118,-1748.9574,13.3982))
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na pijaci polovnih automobila!");

			Dialog_Show(playerid, dialog_vprodaja, DIALOG_STYLE_MSGBOX, "{1b71bc}Prodaja auta drzavi", "{FFFFFF}Prodaja auta drzavi\n\n\
			                                                                                            Dali ste sigurni da zelite da prodate auto drzavi za {1b71bc}%d$\n\n\
																								        {FFFFFF}Ako ste sigurni kliknite na {1b71bc}'Prodaj' ako ne kliknite na {FF0000}'Izlaz'",
																								        "Prodaj", "Izlaz", VoziloInfo[Vozilo_1][vCena]/2);
		}
		case 8:
		{
		    if(Vozilo_1 == -1)
                return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate vozilo na ovom slotu!");
                
		    if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID])
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u svom vozilu!");

			if(VoziloInfo[Vozilo_1][vRadio] != 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}U vozilu vec ima radio!");

			if(PI[playerid][Novac] < 3000)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca (3000$)!");

			VoziloInfo[Vozilo_1][vRadio] = 1;
			PI[playerid][Novac] -= 3000;
			GivePlayerMoney(playerid, -3000); 
			
			mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Radio` = '%d' WHERE `SQLID` = '%d'",
				VoziloInfo[Vozilo_1][vRadio], VoziloInfo[Vozilo_1][SQLID]);
				
            mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
				PI[playerid][Novac], PI[playerid][SQLID]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste ugradili radio u vas auto za 3000$!");
		}
		case 9:
		{
		    if(Vozilo_1 == -1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate vozilo na ovom slotu!");

			if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID])
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u svom vozilu!");

			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu vozaca!");
				
			if(VoziloInfo[Vozilo_1][vRadio] != 1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate radio u autu!");

			Dialog_Show(playerid, dialog_radio, DIALOG_STYLE_LIST, "{1b71bc}Radio", "{1b71bc}> {FFFFFF}Radio Pink\n\
																		             {1b71bc}> {FFFFFF}Radio Folk\n\
																					 {1b71bc}> {FFFFFF}Radio TDI\n\
																					 {1b71bc}> {FFFFFF}Juzni Vetar Radio\n\
																					 {1b71bc}> {FFFFFF}Balkan DJ Radio", "Odaberi", "Izlaz");
		}
		case 10:
		{
  			if(Vozilo_1 == -1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate vozilo na ovom slotu!");

			if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID])
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u svom vozilu!");

			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu vozaca!");

			if(VoziloInfo[Vozilo_1][vRadio] != 1)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate radio u autu!");

			Dialog_Show(playerid, dialog_pivozila, DIALOG_STYLE_INPUT, "{1b71bc}Prodaja auta", "{FFFFFF}Unesite ID igraca kome zelite da prodate vozilo...", "Potvrdi", "Odustani");
		}
		case 11:
		{
			if(Vozilo_1 == -1) 
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate vozilo na ovom slotu!");
					
			if(!IsPlayerInAnyVehicle(playerid)) 
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u vozilu!");
					
			if(VoziloJeBicikla(GetVehicleModel(VoziloInfo[Vozilo_1][vID]))) 
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete ovu opciju koristiti na biciklu!");
					
			if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID]) 
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u svom vozilu!");
					
			if(!VoziloJeAuto(GetVehicleModel(VoziloInfo[Vozilo_1][vID]))) 
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Tuning mozete ukloniti samo na autima");
			
			if(VoziloInfo[Vozilo_1][vKomponenta1] == 0 && VoziloInfo[Vozilo_1][vKomponenta2] == 0 && VoziloInfo[Vozilo_1][vKomponenta3] == 0
				&& VoziloInfo[Vozilo_1][vKomponenta4] == 0 && VoziloInfo[Vozilo_1][vKomponenta5] == 0 && VoziloInfo[Vozilo_1][vKomponenta6]	== 0
				&& VoziloInfo[Vozilo_1][vKomponenta7] == 0 && VoziloInfo[Vozilo_1][vKomponenta8] == 0 && VoziloInfo[Vozilo_1][vKomponenta9] == 0
				&& VoziloInfo[Vozilo_1][vKomponenta10] == 0 && VoziloInfo[Vozilo_1][vKomponenta11] == 0 && VoziloInfo[Vozilo_1][vKomponenta12] == 0
				&& VoziloInfo[Vozilo_1][vKomponenta13] == 0 && VoziloInfo[Vozilo_1][vPaintJob] == -1)
			{
				va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate nijednu komponentu/paintjob na vasem vozilu!");
				return 1;
			}
			RemoveVehicleComponent(VoziloInfo[Vozilo_1][vID], VoziloInfo[Vozilo_1][vKomponenta1]);
	        RemoveVehicleComponent(VoziloInfo[Vozilo_1][vID], VoziloInfo[Vozilo_1][vKomponenta2]);
	       	RemoveVehicleComponent(VoziloInfo[Vozilo_1][vID], VoziloInfo[Vozilo_1][vKomponenta3]);
	        RemoveVehicleComponent(VoziloInfo[Vozilo_1][vID], VoziloInfo[Vozilo_1][vKomponenta4]);
	        RemoveVehicleComponent(VoziloInfo[Vozilo_1][vID], VoziloInfo[Vozilo_1][vKomponenta5]);
	        RemoveVehicleComponent(VoziloInfo[Vozilo_1][vID], VoziloInfo[Vozilo_1][vKomponenta6]);
	        RemoveVehicleComponent(VoziloInfo[Vozilo_1][vID], VoziloInfo[Vozilo_1][vKomponenta7]);
	        RemoveVehicleComponent(VoziloInfo[Vozilo_1][vID], VoziloInfo[Vozilo_1][vKomponenta8]);
	        RemoveVehicleComponent(VoziloInfo[Vozilo_1][vID], VoziloInfo[Vozilo_1][vKomponenta9]);
	        RemoveVehicleComponent(VoziloInfo[Vozilo_1][vID], VoziloInfo[Vozilo_1][vKomponenta10]);
	        RemoveVehicleComponent(VoziloInfo[Vozilo_1][vID], VoziloInfo[Vozilo_1][vKomponenta11]);
	        RemoveVehicleComponent(VoziloInfo[Vozilo_1][vID], VoziloInfo[Vozilo_1][vKomponenta12]);
	        RemoveVehicleComponent(VoziloInfo[Vozilo_1][vID], VoziloInfo[Vozilo_1][vKomponenta13]);
	        VoziloInfo[Vozilo_1][vKomponenta1] = 0;
	        VoziloInfo[Vozilo_1][vKomponenta2] = 0;
	        VoziloInfo[Vozilo_1][vKomponenta3] = 0;
	        VoziloInfo[Vozilo_1][vKomponenta4] = 0;
	        VoziloInfo[Vozilo_1][vKomponenta5] = 0;
	        VoziloInfo[Vozilo_1][vKomponenta6] = 0;
	        VoziloInfo[Vozilo_1][vKomponenta7] = 0;
	        VoziloInfo[Vozilo_1][vKomponenta8] = 0;
	        VoziloInfo[Vozilo_1][vKomponenta9] = 0;
	        VoziloInfo[Vozilo_1][vKomponenta10] = 0;
	        VoziloInfo[Vozilo_1][vKomponenta11] = 0;
	        VoziloInfo[Vozilo_1][vKomponenta12] = 0;
	        VoziloInfo[Vozilo_1][vKomponenta13] = 0;
	        VoziloInfo[Vozilo_1][vPaintJob] = -1;
	       	ChangeVehiclePaintjob(VoziloInfo[Vozilo_1][vID], 3);
	        
			mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Komponenta1` = '%d', `Komponenta2` = '%d', `Komponenta3` = '%d', `Komponenta4` = '%d', `Komponenta5` = '%d', `Komponenta6` = '%d', `Komponenta7` = '%d', `Komponenta8` = '%d', \
				`Komponenta9` = '%d', `Komponenta10` = '%d', `Komponenta11` = '%d', `Komponenta12` = '%d', `Komponenta13` = '%d', `PaintJob` = '%d' WHERE `SQLID` = '%d'",
				VoziloInfo[Vozilo_1][vKomponenta1], VoziloInfo[Vozilo_1][vKomponenta2], VoziloInfo[Vozilo_1][vKomponenta3], VoziloInfo[Vozilo_1][vKomponenta4], VoziloInfo[Vozilo_1][vKomponenta5], VoziloInfo[Vozilo_1][vKomponenta6],
				VoziloInfo[Vozilo_1][vKomponenta7], VoziloInfo[Vozilo_1][vKomponenta8], VoziloInfo[Vozilo_1][vKomponenta9], VoziloInfo[Vozilo_1][vKomponenta10], VoziloInfo[Vozilo_1][vKomponenta11], VoziloInfo[Vozilo_1][vKomponenta12],
				VoziloInfo[Vozilo_1][vKomponenta13], VoziloInfo[Vozilo_1][vPaintJob], VoziloInfo[Vozilo_1][SQLID]);
		}
	}
	return 1;
}

Dialog:dialog_vboja(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    new Vozilo_1, boja[2];
    switch(VoziloSlot[playerid])
    {
    	case 1: Vozilo_1 = PI[playerid][Vozilo1];
     	case 2: Vozilo_1 = PI[playerid][Vozilo2];
      	case 3: Vozilo_1 = PI[playerid][Vozilo3];
       	default: return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate nijedno vozilo!");
    }

	if(Vozilo_1 == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate vozilo na ovom slotu!");
		
    if(sscanf(inputtext, "ii", boja[0], boja[1]))
		return Dialog_Show(playerid, dialog_vboja, DIALOG_STYLE_INPUT, "{1b71bc}Boja Vozila", "{FFFFFF}Unesite ID boje 1 i 2 sa razmakom (Primer: 5 1)\nCena Boje: 500$", "Promeni", "Izlaz");

	if(PI[playerid][Novac] < 500)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca (500$)!");

	VoziloInfo[Vozilo_1][vBoja1] = boja[0];
	VoziloInfo[Vozilo_1][vBoja2] = boja[1];

	PI[playerid][Novac] -= 500;
	GivePlayerMoney(playerid, -500);

	mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Boja1` = '%d', `Boja2` = '%d' WHERE `SQLID` = '%d'",
		VoziloInfo[Vozilo_1][vBoja1], VoziloInfo[Vozilo_1][vBoja2], VoziloInfo[Vozilo_1][SQLID]);

	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'",
		PI[playerid][Novac], PI[playerid][SQLID]);

	ChangeVehicleColours(VoziloInfo[Vozilo_1][vID], boja[0], boja[1]);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste ofarbali vase auto za 500$!");
	return 1;
}

Dialog:dialog_vostavi(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    new Vozilo_1;
    switch(VoziloSlot[playerid])
    {
    	case 1: Vozilo_1 = PI[playerid][Vozilo1];
     	case 2: Vozilo_1 = PI[playerid][Vozilo2];
      	case 3: Vozilo_1 = PI[playerid][Vozilo3];
       	default: return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate nijedno vozilo!");
    }
    
    switch(listitem)
    {
    	case 0:
     	{
			if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID])
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u svom vozilu!");

			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu vozaca!");

			Dialog_Show(playerid, dialog_vdostavi, DIALOG_STYLE_INPUT, "{1b71bc}Ostavi", "{FFFFFF}Unesite kolicinu droge koju zelite da ostavite u vozilu {FF0000}(MAX 5000)...", "Ostavi", "Izlaz");
		}
		case 1:
  		{
		    if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID])
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u svom vozilu!");

			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu vozaca!");

            Dialog_Show(playerid, dialog_vmostavi, DIALOG_STYLE_INPUT, "{1b71bc}Ostavi", "{FFFFFF}Unesite kolicinu materijala koju zelite da ostavite u vozilu {FF0000}(MAX 5000)...", "Ostavi", "Izlaz");
		}
		case 2:
		{
		    if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID])
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u svom vozilu!");
				
  			if(VoziloInfo[Vozilo_1][vOruzije] != -1)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec imas oruzije u vozilu!");

			if(GetPlayerWeapon(playerid) <= WEAPON_FIST)
				va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemas oruzije u ruci!");

			VoziloInfo[Vozilo_1][vOruzije] = GetPlayerWeapon(playerid);
			VoziloInfo[Vozilo_1][vMunicija] = GetPlayerAmmo(playerid);
			
			mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Oruzije` = '%d', `Municija` = '%d' WHERE `SQLID` = '%d'",
				VoziloInfo[Vozilo_1][vOruzije], VoziloInfo[Vozilo_1][vMunicija], VoziloInfo[Vozilo_1][SQLID]);

			SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), 0);
			ResetPlayerWeapons(playerid);
		}
	}
	return 1;
}

Dialog:dialog_vmostavi(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    new Vozilo_1, mats;
    switch(VoziloSlot[playerid])
    {
    	case 1: Vozilo_1 = PI[playerid][Vozilo1];
     	case 2: Vozilo_1 = PI[playerid][Vozilo2];
      	case 3: Vozilo_1 = PI[playerid][Vozilo3];
       	default: return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate nijedno vozilo!");
    }
    
    if(sscanf(inputtext, "i", mats))
		return Dialog_Show(playerid, dialog_vmostavi, DIALOG_STYLE_INPUT, "{1b71bc}Ostavi", "{FFFFFF}Unesite kolicinu materijala koju zelite da ostavite u vozilu {FF0000}(MAX 5000)...", "Ostavi", "Izlaz");

	if(PI[playerid][Mats] < mats)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko materijala!");

	if(VoziloInfo[Vozilo_1][vMats] + mats >= 5000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete toliko materijala ostaviti u gepek (MAX 5000)!");

	if(mats < 1 || mats > 5000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kolicina ne mozete ici ispod 1 i iznad 5000!");

	VoziloInfo[Vozilo_1][vMats] += mats;
	PI[playerid][Mats] -= mats;
	
	mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Mats` = '%d' WHERE `SQLID` = '%d'",
		VoziloInfo[Vozilo_1][vMats], VoziloInfo[Vozilo_1][SQLID]);

	mysql_tqueryEx(SQL, "UPDATE `users` SET `Mats` = '%d' WHERE `SQLID` = '%d'",
		PI[playerid][Mats], PI[playerid][SQLID]);
	
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ostavili ste %d materijala u vase vozilo!", mats);
	return 1;
}

Dialog:dialog_vdostavi(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    new Vozilo_1, mats;
    switch(VoziloSlot[playerid])
    {
    	case 1: Vozilo_1 = PI[playerid][Vozilo1];
     	case 2: Vozilo_1 = PI[playerid][Vozilo2];
      	case 3: Vozilo_1 = PI[playerid][Vozilo3];
       	default: return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate nijedno vozilo!");
    }

    if(sscanf(inputtext, "i", mats))
		return Dialog_Show(playerid, dialog_vdostavi, DIALOG_STYLE_INPUT, "{1b71bc}Ostavi", "{FFFFFF}Unesite kolicinu droge koju zelite da ostavite u vozilu {FF0000}(MAX 5000)...", "Ostavi", "Izlaz");

	if(PI[playerid][Droga] < mats)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko materijala!");

	if(VoziloInfo[Vozilo_1][vDroga] + mats >= 5000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete toliko materijala ostaviti u gepek (MAX 5000)!");

	if(mats < 1 || mats > 5000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kolicina ne mozete ici ispod 1 i iznad 5000!");

	VoziloInfo[Vozilo_1][vDroga] += mats;
	PI[playerid][Droga] -= mats;

	mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Droga` = '%d' WHERE `SQLID` = '%d'",
		VoziloInfo[Vozilo_1][vDroga], VoziloInfo[Vozilo_1][SQLID]);

	mysql_tqueryEx(SQL, "UPDATE `users` SET `Droga` = '%d' WHERE `SQLID` = '%d'",
		PI[playerid][Droga], PI[playerid][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ostavili ste %dg droge u vase vozilo!", mats);
	return 1;
}

Dialog:dialog_vuzmi(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    new Vozilo_1;
    switch(VoziloSlot[playerid])
    {
    	case 1: Vozilo_1 = PI[playerid][Vozilo1];
     	case 2: Vozilo_1 = PI[playerid][Vozilo2];
      	case 3: Vozilo_1 = PI[playerid][Vozilo3];
       	default: return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate nijedno vozilo!");
    }

    switch(listitem)
    {
    	case 0:
     	{
			if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID])
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u svom vozilu!");

			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu vozaca!");

			Dialog_Show(playerid, dialog_vduzmi, DIALOG_STYLE_INPUT, "{1b71bc}Uzmi", "{FFFFFF}Unesite kolicinu droge koju zelite da uzmete iz vozila {FF0000}(MAX 5000)...", "Uzmi", "Izlaz");
		}
		case 1:
  		{
		    if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID])
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u svom vozilu!");

			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste na mestu vozaca!");

            Dialog_Show(playerid, dialog_vmuzmi, DIALOG_STYLE_INPUT, "{1b71bc}Uzmi", "{FFFFFF}Unesite kolicinu materijala koju zelite da uzmete iz vozila {FF0000}(MAX 5000)...", "Uzmi", "Izlaz");
		}
		case 2:
		{
            if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID])
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u svom vozilu!");
				
  			if(VoziloInfo[Vozilo_1][vOruzije] == -1)
  				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate oruzije u vozilu!");

			VoziloInfo[Vozilo_1][vOruzije] = -1;
			VoziloInfo[Vozilo_1][vMunicija] = -1;

			mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Oruzije` = '%d', `Municija` = '%d' WHERE `SQLID` = '%d'",
				VoziloInfo[Vozilo_1][vOruzije], VoziloInfo[Vozilo_1][vMunicija], VoziloInfo[Vozilo_1][SQLID]);

			GivePlayerWeapon(playerid, WEAPON:VoziloInfo[Vozilo_1][vOruzije], VoziloInfo[Vozilo_1][vMunicija]);
		}
	}
	return 1;
}

Dialog:dialog_vmuzmi(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    new Vozilo_1, mats;
    switch(VoziloSlot[playerid])
    {
    	case 1: Vozilo_1 = PI[playerid][Vozilo1];
     	case 2: Vozilo_1 = PI[playerid][Vozilo2];
      	case 3: Vozilo_1 = PI[playerid][Vozilo3];
       	default: return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate nijedno vozilo!");
    }

    if(sscanf(inputtext, "i", mats))
		return Dialog_Show(playerid, dialog_vduzmi, DIALOG_STYLE_INPUT, "{1b71bc}Uzmi", "{FFFFFF}Unesite kolicinu droge koju zelite da uzmete iz vozila {FF0000}(MAX 5000)...", "Uzmi", "Izlaz");

	if(VoziloInfo[Vozilo_1][vMats] < mats)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko materijala!");

	if(mats < 1 || mats > 5000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kolicina ne mozete ici ispod 1 i iznad 5000!");

	VoziloInfo[Vozilo_1][vMats] -= mats;
	PI[playerid][Mats] += mats;

	mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Mats` = '%d' WHERE `SQLID` = '%d'",
		VoziloInfo[Vozilo_1][vMats], VoziloInfo[Vozilo_1][SQLID]);

	mysql_tqueryEx(SQL, "UPDATE `users` SET `Mats` = '%d' WHERE `SQLID` = '%d'",
		PI[playerid][Mats], PI[playerid][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste %d materijala iz vaseg vozila!", mats);
	return 1;
}

Dialog:dialog_vduzmi(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    new Vozilo_1, mats;
    switch(VoziloSlot[playerid])
    {
    	case 1: Vozilo_1 = PI[playerid][Vozilo1];
     	case 2: Vozilo_1 = PI[playerid][Vozilo2];
      	case 3: Vozilo_1 = PI[playerid][Vozilo3];
       	default: return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate nijedno vozilo!");
    }

    if(sscanf(inputtext, "i", mats))
		return Dialog_Show(playerid, dialog_vduzmi, DIALOG_STYLE_INPUT, "{1b71bc}Uzmi", "{FFFFFF}Unesite kolicinu droge koju zelite da uzmete iz vozila {FF0000}(MAX 5000)...", "Uzmi", "Izlaz");

	if(VoziloInfo[Vozilo_1][vDroga] < mats)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko droge!");

	if(mats < 1 || mats > 5000)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Kolicina ne mozete ici ispod 1 i iznad 5000!");

	VoziloInfo[Vozilo_1][vDroga] -= mats;
	PI[playerid][Droga] += mats;

	mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Droga` = '%d' WHERE `SQLID` = '%d'",
		VoziloInfo[Vozilo_1][vDroga], VoziloInfo[Vozilo_1][SQLID]);

	mysql_tqueryEx(SQL, "UPDATE `users` SET `Droga` = '%d' WHERE `SQLID` = '%d'",
		PI[playerid][Droga], PI[playerid][SQLID]);

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uzeli ste %dg droge iz vaseg vozila!", mats);
	return 1;
}

Dialog:dialog_radio(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    switch(listitem)
	{
		case 0:
		{
  			PlayAudioStreamForPlayer(playerid, "http://89.149.245.237:80");
	    	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Slusate Radio Pink!");
		    RadioAktiviran[playerid] = 1;
		}
  		case 1:
    	{
	    	PlayAudioStreamForPlayer(playerid, "http://89.205.127.244:8002");
		    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Slusate Radio Folk!");
		    RadioAktiviran[playerid] = 1;
	    }
	    case 2:
	    {
	    	PlayAudioStreamForPlayer(playerid, "http://streaming.tdiradio.com:9000");
		    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Slusate Radio TDI!");
		    RadioAktiviran[playerid] = 1;
	    }
	    case 3:
	    {
	    	PlayAudioStreamForPlayer(playerid, "http://rtvmerak.com:8003");
		    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Slusate Radio Juzni Vetar!");
		    RadioAktiviran[playerid] = 1;
	    }
	    case 4:
	    {
	    	PlayAudioStreamForPlayer(playerid, "http://balkan.dj.topstream.net:8070");
		    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Slusate Balkan DJ Radio!");
		    RadioAktiviran[playerid] = 1;
	    }
	}
	return 1;
}

Dialog:dialog_vprodaja(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    
    new Vozilo_1;
    switch(VoziloSlot[playerid])
    {
    	case 1: Vozilo_1 = PI[playerid][Vozilo1];
     	case 2: Vozilo_1 = PI[playerid][Vozilo2];
      	case 3: Vozilo_1 = PI[playerid][Vozilo3];
       	default: return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate nijedno vozilo!");
    }
    
    if(Vozilo_1 == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate vozilo na ovom slotu!");
		
    if(!IsPlayerInAnyVehicle(playerid))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u vozilu!");

	if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti u svom vozilu!");

    if(VoziloInfo[Vozilo_1][SQLID] > 0)
	{
		new poz = random(sizeof(RandomPijacaSpawn));
		VoziloInfo[Vozilo_1][vPozX] = RandomPijacaSpawn[poz][0];
		VoziloInfo[Vozilo_1][vPozY] = RandomPijacaSpawn[poz][1];
		VoziloInfo[Vozilo_1][vPozZ] = RandomPijacaSpawn[poz][2];
		VoziloInfo[Vozilo_1][vPozA] = RandomPijacaSpawn[poz][3];

		DestroyVehicle(VoziloInfo[Vozilo_1][vID]);
		DestroyDynamic3DTextLabel(VoziloInfo[Vozilo_1][v3DText]);
		VoziloInfo[Vozilo_1][vID] = AddStaticVehicleEx(VoziloInfo[Vozilo_1][vModel],VoziloInfo[Vozilo_1][vPozX],VoziloInfo[Vozilo_1][vPozY],VoziloInfo[Vozilo_1][vPozZ],VoziloInfo[Vozilo_1][vPozA],VoziloInfo[Vozilo_1][vBoja1],VoziloInfo[Vozilo_1][vBoja2],2400);
        PostaviVLabel(VoziloInfo[Vozilo_1][vID]);
	    GivePlayerMoney(playerid, VoziloInfo[Vozilo_1][vCena]/2);

		mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `X` = '%f', `Y` = '%f', `Z` = '%f', `A` = '%f', `Vlasnik` = 'Niko', `ImaVlasnika` = '0', `Zakljucan` = '0', `Droga` = '0', \
	 		`Mats` = '0', `Oruzije` = '-1', `Municija` = '0', `NaPijaci` = '1', `VW` = '0' WHERE `SQLID` = '%d'",
			VoziloInfo[Vozilo_1][vPozX], VoziloInfo[Vozilo_1][vPozY], VoziloInfo[Vozilo_1][vPozZ], VoziloInfo[Vozilo_1][vPozA], VoziloInfo[Vozilo_1][SQLID]);

        switch(VoziloSlot[playerid])
	    {
	    	case 1: PI[playerid][Novac] += VoziloInfo[Vozilo_1][vCena]/2, PI[playerid][Vozilo1] = -1, mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
	     	case 2: PI[playerid][Novac] += VoziloInfo[Vozilo_1][vCena]/2, PI[playerid][Vozilo2] = -1, mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
	      	case 3: PI[playerid][Novac] += VoziloInfo[Vozilo_1][vCena]/2, PI[playerid][Vozilo3] = -1, mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
	       	default: return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate nijedno vozilo!");
	    }
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prodali ste vase vozilo na pijacu za %d$!", VoziloInfo[Vozilo_1][vCena]/2);
	}
	else
	{
		va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Doslo je do greske, fajl od vozila ne postoji u bazi prijavite ovo adminima!");
	}
	return 1;
}


Dialog:dialog_pivozila(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    new Vozilo_1;
    switch(VoziloSlot[playerid])
    {
    	case 1: Vozilo_1 = PI[playerid][Vozilo1];
     	case 2: Vozilo_1 = PI[playerid][Vozilo2];
      	case 3: Vozilo_1 = PI[playerid][Vozilo3];
       	default: return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate nijedno vozilo!");
    }
    
    if(Vozilo_1 == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate vozilo na ovom slotu!");
    
    new kid,
		Float:Poz[3];

	if(sscanf(inputtext, "u", kid))
		return Dialog_Show(playerid, dialog_pivozila, DIALOG_STYLE_INPUT, "{1b71bc}Prodaja auta", "{FFFFFF}Unesite ID igraca kome zelite da prodate vozilo...", "Potvrdi", "Odustani");

	if(!IsPlayerConnected(kid))
		return Dialog_Show(playerid, dialog_pivozila, DIALOG_STYLE_INPUT, "{1b71bc}Prodaja auta", "{FFFFFF}Unesite ID igraca kome zelite da prodate vozilo...", "Potvrdi", "Odustani");

	if(GetPlayerVehicleID(playerid) != VoziloInfo[Vozilo_1][vID])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u svom vozilu!");

	GetPlayerPos(kid, Poz[0], Poz[1], Poz[2]);

	if(!IsPlayerInRangeOfPoint(playerid, 5.0, Poz[0], Poz[1], Poz[2]))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nije u vasoj blizini!");

	if(kid == playerid)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete sami sebi ponuditi prodaju!");

	KomeProdaje[playerid] = kid;
	PonudioIgrac[kid] = playerid;

	Dialog_Show(playerid, dialog_picena, DIALOG_STYLE_INPUT, "{1b71bc}Prodaja auta", "Sad unesite cenu vaseg auta za koliko zelite da ga prodate...", "Potvrdi", "Odustani");
	return 1;
}

Dialog:dialog_picena(playerid, response, listitem, inputtext[])
{
    if(!response)
    {
        CijenaProdaje[playerid] = 0; CijenaProdaje[KomeProdaje[playerid]] = 0;
    	PonudioIgrac[KomeProdaje[playerid]] = -1; PonudioIgrac[playerid] = -1;
	    KomeProdaje[KomeProdaje[playerid]] = -1; KomeProdaje[playerid] = -1;
	    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odustali ste od prodaje vaseg vozila!");
	}
	
	new cena;
	
	if(PI[KomeProdaje[playerid]][Level] < 3)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac nije level 3+!");

	if(sscanf(inputtext, "i", cena))
		return Dialog_Show(playerid, dialog_picena, DIALOG_STYLE_INPUT, "{1b71bc}Prodaja auta", "Sad unesite cenu vaseg auta za koliko zelite da ga prodate...", "Potvrdi", "Odustani");

	if(cena < 0 || cena > 10000000)
		return Dialog_Show(playerid, dialog_picena, DIALOG_STYLE_INPUT, "{1b71bc}Prodaja auta", "Sad unesite cenu vaseg auta za koliko zelite da ga prodate...", "Potvrdi", "Odustani");

	CijenaProdaje[playerid] = cena;
	CijenaProdaje[KomeProdaje[playerid]] = cena;

	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ponudili ste auta igracu %s za %d$ novca!", ReturnPlayerName(KomeProdaje[playerid]), cena);
	va_SendClientMessage(KomeProdaje[playerid], 0x1b71bcFF, "#Info: {FFFFFF}Igrac %s vam je ponudio svoje auta za %d$!", ReturnPlayerName(playerid), cena);

	Dialog_Show(KomeProdaje[playerid], dialog_pcenaprih, DIALOG_STYLE_MSGBOX, "{1b71bc}Prodaja auta", "{FFFFFF}Igrac %s vam je ponudio svoje vozilo za {1b71bc}%d$...\n\
																	                                  {FFFFFF}Kliknite na {1b71bc}'Prihvati' {FFFFFF}ukoliko zelite da prihvatite prodaju", "Prihvati", "Odustani",
																							          ReturnPlayerName(playerid), cena);
	return 1;
}

Dialog:dialog_pcenaprih(playerid, response, listitem, inputtext[])
{
    if(!response)
	{
		CijenaProdaje[playerid] = 0; CijenaProdaje[KomeProdaje[playerid]] = 0;
		PonudioIgrac[KomeProdaje[playerid]] = -1; PonudioIgrac[playerid] = -1;
  		KomeProdaje[KomeProdaje[playerid]] = -1; KomeProdaje[playerid] = -1;
    	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odustali ste od kupovine vozila!");
	}
	
	new Vozilo_1, id = PonudioIgrac[playerid];
 	switch(VoziloSlot[PonudioIgrac[playerid]])
  	{
   		case 1: Vozilo_1 = PI[id][Vozilo1];
     	case 2: Vozilo_1 = PI[id][Vozilo2];
      	case 3: Vozilo_1 = PI[id][Vozilo3];
       	default: return va_SendClientMessage(id, 0xFF0000FF, "#Greska: {FFFFFF}Nemate nijedno vozilo!");
   	}

	if(PI[playerid][Level] < 3)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi niste level 3+!");

	if(CijenaProdaje[playerid] <= 0)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Prodavac nije odredio cenu vozila!");

	if(PI[playerid][Novac] < CijenaProdaje[playerid])
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

	if(!IsPlayerConnected(PonudioIgrac[playerid]))
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Igrac koji vam je ponudio vozilo vise nije online!"), PonudioIgrac[playerid] = -1, CijenaProdaje[playerid] = 0, KomeProdaje[playerid] = -1;

	if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama su svi slotovi puni!");

	if(PI[id][Vozilo1] == -1 && PI[id][Vozilo2] == -1 && PI[id][Vozilo3] == -1)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nema auto!");

	if(PI[playerid][Vozilo1] == -1)
	{
		PI[playerid][Vozilo1] = Vozilo_1;
		CheckQuestDone(playerid, 4);
		GivePlayerMoney(playerid, -CijenaProdaje[playerid]);
		PI[playerid][Novac] -= CijenaProdaje[playerid];
		GivePlayerMoney(PonudioIgrac[playerid], CijenaProdaje[playerid]);
		
		mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
		
		DestroyDynamic3DTextLabel(VoziloInfo[PI[PonudioIgrac[playerid]][Vozilo1]][v3DText]);
		strmid(VoziloInfo[PI[playerid][Vozilo1]][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
		mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Vlasnik` = '%s' WHERE `SQLID` = '%d'", VoziloInfo[PI[playerid][Vozilo1]][vVlasnik], VoziloInfo[PI[playerid][Vozilo1]][SQLID]);
		PostaviVLabel(VoziloInfo[PI[playerid][Vozilo1]][vID]);

		switch(VoziloSlot[id])
  		{
    		case 1: PI[id][Novac] += CijenaProdaje[playerid], PI[id][Vozilo1] = -1, mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[id][Novac],PI[id][Vozilo1],PI[id][SQLID]);
      		case 2: PI[id][Novac] += CijenaProdaje[playerid], PI[id][Vozilo2] = -1, mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[id][Novac],PI[id][Vozilo2],PI[id][SQLID]);
      		case 3: PI[id][Novac] += CijenaProdaje[playerid], PI[id][Vozilo3] = -1, mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[id][Novac],PI[id][Vozilo3],PI[id][SQLID]);
        	default: return va_SendClientMessage(id, 0xFF0000FF, "#Greska: {FFFFFF}Nemate nijedno vozilo!");
        }
        va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste kupili auto od igraca %s!",ReturnPlayerName(id));
        va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste prodali auto igracu %s!",ReturnPlayerName(playerid));
		RemovePlayerFromVehicle(id); CijenaProdaje[id] = 0; CijenaProdaje[playerid] = 0;
  		PonudioIgrac[id] = -1; PonudioIgrac[playerid] = -1;
    	KomeProdaje[id] = -1; KomeProdaje[playerid] = -1;
	}
	if(PI[playerid][Vozilo2] == -1)
	{
		PI[playerid][Vozilo2] = Vozilo_1;
		GivePlayerMoney(playerid, -CijenaProdaje[playerid]);
		PI[playerid][Novac] -= CijenaProdaje[playerid];
		GivePlayerMoney(PonudioIgrac[playerid], CijenaProdaje[playerid]);

		mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);

		strmid(VoziloInfo[PI[playerid][Vozilo2]][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
		mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Vlasnik` = '%s' WHERE `SQLID` = '%d'", VoziloInfo[PI[playerid][Vozilo2]][vVlasnik], VoziloInfo[PI[playerid][Vozilo2]][SQLID]);
		DestroyDynamic3DTextLabel(VoziloInfo[PI[PonudioIgrac[playerid]][Vozilo1]][v3DText]);
		PostaviVLabel(VoziloInfo[PI[playerid][Vozilo2]][vID]);

		switch(VoziloSlot[id])
  		{
    		case 1: PI[id][Novac] += CijenaProdaje[playerid], PI[id][Vozilo1] = -1, mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[id][Novac],PI[id][Vozilo1],PI[id][SQLID]);
      		case 2: PI[id][Novac] += CijenaProdaje[playerid], PI[id][Vozilo2] = -1, mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[id][Novac],PI[id][Vozilo2],PI[id][SQLID]);
      		case 3: PI[id][Novac] += CijenaProdaje[playerid], PI[id][Vozilo3] = -1, mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[id][Novac],PI[id][Vozilo3],PI[id][SQLID]);
        	default: return va_SendClientMessage(id, 0xFF0000FF, "#Greska: {FFFFFF}Nemate nijedno vozilo!");
        }
        va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste kupili auto od igraca %s!",ReturnPlayerName(id));
        va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste prodali auto igracu %s!",ReturnPlayerName(playerid));
		RemovePlayerFromVehicle(id); CijenaProdaje[id] = 0; CijenaProdaje[playerid] = 0;
  		PonudioIgrac[id] = -1; PonudioIgrac[playerid] = -1;
    	KomeProdaje[id] = -1; KomeProdaje[playerid] = -1;
	}
	if(PI[playerid][Vozilo3] == -1)
	{
		PI[playerid][Vozilo3] = Vozilo_1;
		GivePlayerMoney(playerid, -CijenaProdaje[playerid]);
		PI[playerid][Novac] -= CijenaProdaje[playerid];
		GivePlayerMoney(PonudioIgrac[playerid], CijenaProdaje[playerid]);

		mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);

		strmid(VoziloInfo[PI[playerid][Vozilo3]][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
		mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Vlasnik` = '%s' WHERE `SQLID` = '%d'", VoziloInfo[PI[playerid][Vozilo2]][vVlasnik], VoziloInfo[PI[playerid][Vozilo2]][SQLID]);
		DestroyDynamic3DTextLabel(VoziloInfo[PI[PonudioIgrac[playerid]][Vozilo1]][v3DText]);
		PostaviVLabel(VoziloInfo[PI[playerid][Vozilo3]][vID]);

		switch(VoziloSlot[id])
  		{
    		case 1: PI[id][Novac] += CijenaProdaje[playerid], PI[id][Vozilo1] = -1, mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[id][Novac],PI[id][Vozilo1],PI[id][SQLID]);
      		case 2: PI[id][Novac] += CijenaProdaje[playerid], PI[id][Vozilo2] = -1, mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[id][Novac],PI[id][Vozilo2],PI[id][SQLID]);
      		case 3: PI[id][Novac] += CijenaProdaje[playerid], PI[id][Vozilo3] = -1, mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[id][Novac],PI[id][Vozilo3],PI[id][SQLID]);
        	default: return va_SendClientMessage(id, 0xFF0000FF, "#Greska: {FFFFFF}Nemate nijedno vozilo!");
        }
        va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste kupili auto od igraca %s!",ReturnPlayerName(id));
        va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste prodali auto igracu %s!",ReturnPlayerName(playerid));
		RemovePlayerFromVehicle(id); CijenaProdaje[id] = 0; CijenaProdaje[playerid] = 0;
  		PonudioIgrac[id] = -1; PonudioIgrac[playerid] = -1;
    	KomeProdaje[id] = -1; KomeProdaje[playerid] = -1;
	}
	return 1;
}

Dialog:dialog_kvozilo(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    switch(listitem)
    {
        case 0:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 100000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");
			        
				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 100000;
				GivePlayerMoney(playerid, -100000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 100000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 100000;
				GivePlayerMoney(playerid, -100000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 100000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 100000;
				GivePlayerMoney(playerid, -100000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 400;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 100000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
   			new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 1:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 150000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 150000;
				GivePlayerMoney(playerid, -150000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 150000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 150000;
				GivePlayerMoney(playerid, -150000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 150000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 150000;
				GivePlayerMoney(playerid, -150000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 402;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 150000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 2:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 80000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=80000;
				GivePlayerMoney(playerid, -80000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 80000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=80000;
				GivePlayerMoney(playerid, -80000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 80000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=80000;
				GivePlayerMoney(playerid, -80000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 405;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 80000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 3:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 700000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=700000;
				GivePlayerMoney(playerid, -700000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 700000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=700000;
				GivePlayerMoney(playerid, -80000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 700000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=700000;
				GivePlayerMoney(playerid, -700000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 411;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 700000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 4:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 45000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=45000;
				GivePlayerMoney(playerid, -45000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 45000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=45000;
				GivePlayerMoney(playerid, -45000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 45000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=45000;
				GivePlayerMoney(playerid, -45000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 412;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 45000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 5:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 480000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=480000;
				GivePlayerMoney(playerid, -480000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 480000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=480000;
				GivePlayerMoney(playerid, -480000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 480000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=480000;
				GivePlayerMoney(playerid, -480000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 415;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 480000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
        case 6:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 45000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=45000;
				GivePlayerMoney(playerid, -45000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 45000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=45000;
				GivePlayerMoney(playerid, -45000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 45000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=45000;
				GivePlayerMoney(playerid, -45000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 419;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 45000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

           	mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 7:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 80000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=80000;
				GivePlayerMoney(playerid, -80000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 80000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=80000;
				GivePlayerMoney(playerid, -80000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 80000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=80000;
				GivePlayerMoney(playerid, -80000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 426;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 80000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 8:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 220000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=220000;
				GivePlayerMoney(playerid, -220000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 220000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=220000;
				GivePlayerMoney(playerid, -220000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 220000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=220000;
				GivePlayerMoney(playerid, -220000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 429;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 220000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 9:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 35000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=35000;
				GivePlayerMoney(playerid, -35000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 35000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=35000;
				GivePlayerMoney(playerid, -35000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 35000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=35000;
				GivePlayerMoney(playerid, -35000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 439;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 35000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 10:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 600000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=600000;
				GivePlayerMoney(playerid, -600000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 600000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=600000;
				GivePlayerMoney(playerid, -600000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 600000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=600000;
				GivePlayerMoney(playerid, -600000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 451;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 600000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 11:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 35000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=35000;
				GivePlayerMoney(playerid, -35000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 35000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=35000;
				GivePlayerMoney(playerid, -35000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 35000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=35000;
				GivePlayerMoney(playerid, -35000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 466;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 35000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 12:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 35000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=35000;
				GivePlayerMoney(playerid, -35000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 35000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=35000;
				GivePlayerMoney(playerid, -35000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 35000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=35000;
				GivePlayerMoney(playerid, -35000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 466;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 35000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 13:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 35000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=35000;
				GivePlayerMoney(playerid, -35000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 35000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=35000;
				GivePlayerMoney(playerid, -35000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 35000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=35000;
				GivePlayerMoney(playerid, -35000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 474;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 35000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 14:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 50000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=50000;
				GivePlayerMoney(playerid, -50000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 50000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=50000;
				GivePlayerMoney(playerid, -50000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 50000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=50000;
				GivePlayerMoney(playerid, -50000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 475;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 50000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 15:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 200000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=200000;
				GivePlayerMoney(playerid, -200000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 200000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=200000;
				GivePlayerMoney(playerid, -200000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 200000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=200000;
				GivePlayerMoney(playerid, -200000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 477;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 200000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 16:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 200000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=200000;
				GivePlayerMoney(playerid, -200000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 200000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=200000;
				GivePlayerMoney(playerid, -200000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 200000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=200000;
				GivePlayerMoney(playerid, -200000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 477;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 200000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 17:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 270000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=270000;
				GivePlayerMoney(playerid, -270000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 270000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=270000;
				GivePlayerMoney(playerid, -270000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 270000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=270000;
				GivePlayerMoney(playerid, -270000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 489;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 270000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 18:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 70000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=70000;
				GivePlayerMoney(playerid, -70000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 70000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=70000;
				GivePlayerMoney(playerid, -70000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 270000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=70000;
				GivePlayerMoney(playerid, -70000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 500;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 70000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 19:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 120000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=120000;
				GivePlayerMoney(playerid, -120000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 120000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=120000;
				GivePlayerMoney(playerid, -120000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 120000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=120000;
				GivePlayerMoney(playerid, -120000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 506;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 120000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 20:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 35000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -=35000;
				GivePlayerMoney(playerid, -35000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 35000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -=35000;
				GivePlayerMoney(playerid, -35000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 35000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -=35000;
				GivePlayerMoney(playerid, -35000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 516;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 35000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
            new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 21:
		{
		    Dialog_Show(playerid, dialog_kvozilo2, DIALOG_STYLE_TABLIST, "{1b71bc}Katalog Vozila:", "{1b71bc}> {FFFFFF}Slamvan\t{6EF83C}130000$\n\
                                                                                                    {1b71bc}> {FFFFFF}Bullet\t{6EF83C}600000$\n\
                                                                                                    {1b71bc}> {FFFFFF}Hustler\t{6EF83C}300000$\n\
                                                                                                    {1b71bc}> {FFFFFF}Merit\t{6EF83C}50000$\n\
                                                                                                    {1b71bc}> {FFFFFF}Yosemite\t{6EF83C}80000$\n\
                                                                                                    {1b71bc}> {FFFFFF}Jester\t{6EF83C}300000$\n\
                                                                                                    {1b71bc}> {FFFFFF}Sultan\t{6EF83C}650000$\n\
                                                                                                    {1b71bc}> {FFFFFF}Stratum\t{6EF83C}270000$\n\
                                                                                                    {1b71bc}> {FFFFFF}Elegy\t{6EF83C}600000$\n\
                                                                                                    {1b71bc}> {FFFFFF}Tahoma\t{6EF83C}45000$\n\
                                                                                                    {1b71bc}> {FFFFFF}Huntley\t{6EF83C}400000$\n\
                                                                                                    {1b71bc}> {FFFFFF}Stafford\t{6EF83C}55000$\n\
                                                                                                    {1b71bc}> {FFFFFF}Phoenix\t{6EF83C}180000$\n\
                                                                                                    {1b71bc}> {FFFFFF}Picador\t{6EF83C}40000$\n\
                                                                                                    {1b71bc}> {FFFFFF}Club\t{6EF83C}100000$\n\
                                                                                                    {1b71bc}> {FFFFFF}Vincent\t{6EF83C}60000$\n\
																							        {FFFFFF}Prehodna strana", "Kupi", "Izadji");
		}
	}
	return 1;
}

Dialog:dialog_kvozilo2(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;

    switch(listitem)
    {
        case 0:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 130000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 130000;
				GivePlayerMoney(playerid, -130000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 130000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 130000;
				GivePlayerMoney(playerid, -130000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 130000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 130000;
				GivePlayerMoney(playerid, -130000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 535;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 130000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
   			new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 1:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 600000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 600000;
				GivePlayerMoney(playerid, -600000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 600000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 600000;
				GivePlayerMoney(playerid, -600000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 600000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 600000;
				GivePlayerMoney(playerid, -600000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 541;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 600000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
   			new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 2:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 300000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 300000;
				GivePlayerMoney(playerid, -300000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 300000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 300000;
				GivePlayerMoney(playerid, -300000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 300000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 300000;
				GivePlayerMoney(playerid, -300000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 545;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 300000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
   			new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 3:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 50000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 50000;
				GivePlayerMoney(playerid, -50000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 50000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 50000;
				GivePlayerMoney(playerid, -50000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 50000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 50000;
				GivePlayerMoney(playerid, -50000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 551;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 50000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
   			new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 4:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 80000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 80000;
				GivePlayerMoney(playerid, -80000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 80000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 80000;
				GivePlayerMoney(playerid, -80000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 80000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 80000;
				GivePlayerMoney(playerid, -80000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 554;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 80000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
   			new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 5:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 300000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 300000;
				GivePlayerMoney(playerid, -300000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 300000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 300000;
				GivePlayerMoney(playerid, -300000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 300000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 300000;
				GivePlayerMoney(playerid, -300000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 559;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 300000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
   			new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 6:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 650000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 650000;
				GivePlayerMoney(playerid, -650000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 650000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 650000;
				GivePlayerMoney(playerid, -650000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 650000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 650000;
				GivePlayerMoney(playerid, -650000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 560;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 650000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
   			new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 7:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 270000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 270000;
				GivePlayerMoney(playerid, -270000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 270000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 270000;
				GivePlayerMoney(playerid, -270000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 270000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 270000;
				GivePlayerMoney(playerid, -270000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 561;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 270000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
   			new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 8:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 600000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 600000;
				GivePlayerMoney(playerid, -600000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 600000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 600000;
				GivePlayerMoney(playerid, -600000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 600000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 600000;
				GivePlayerMoney(playerid, -600000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 562;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 600000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
   			new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 9:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 45000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 45000;
				GivePlayerMoney(playerid, -45000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 45000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 45000;
				GivePlayerMoney(playerid, -45000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 45000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 45000;
				GivePlayerMoney(playerid, -45000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 566;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 45000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
   			new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 10:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 400000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 400000;
				GivePlayerMoney(playerid, -400000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 400000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 400000;
				GivePlayerMoney(playerid, -400000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 400000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 400000;
				GivePlayerMoney(playerid, -400000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 579;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 400000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
   			new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 11:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 55000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 55000;
				GivePlayerMoney(playerid, -55000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 55000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 55000;
				GivePlayerMoney(playerid, -55000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 55000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 55000;
				GivePlayerMoney(playerid, -55000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 580;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 55000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
   			new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 12:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 180000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 180000;
				GivePlayerMoney(playerid, -180000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 180000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 180000;
				GivePlayerMoney(playerid, -180000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 180000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 180000;
				GivePlayerMoney(playerid, -180000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 603;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 180000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
   			new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 13:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 40000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 40000;
				GivePlayerMoney(playerid, -40000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 40000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 40000;
				GivePlayerMoney(playerid, -40000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 40000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 40000;
				GivePlayerMoney(playerid, -40000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 600;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 40000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
   			new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 14:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 100000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 100000;
				GivePlayerMoney(playerid, -100000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 100000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 100000;
				GivePlayerMoney(playerid, -100000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 100000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 100000;
				GivePlayerMoney(playerid, -100000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 589;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 100000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
   			new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 15:
        {
            new veh_ID;
		    for(new freeid = 1; freeid < MAX_VOZILA; freeid++)
			{
		        if(VoziloInfo[freeid][SQLID] < 1)
				{
		            veh_ID = freeid; break;
		        }
		    }
		    if(veh_ID == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum kupljenih vozila je dostignut!");

			if(PI[playerid][Vozilo1] != -1 && PI[playerid][Vozilo2] != -1 && PI[playerid][Vozilo3] != -1)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vama svi slotovi su puni!");

			if(PI[playerid][Vozilo1] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 60000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo1] = veh_ID; CheckQuestDone(playerid, 4);
				PI[playerid][Novac] -= 60000;
				GivePlayerMoney(playerid, -60000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo1` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo1], PI[playerid][SQLID]);
			}
   			else if(PI[playerid][Vozilo2] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 60000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo2] = veh_ID;
				PI[playerid][Novac] -= 60000;
				GivePlayerMoney(playerid, -60000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo2` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo2], PI[playerid][SQLID]);
			}
			else if(PI[playerid][Vozilo3] == -1)
			{
			    if(PI[playerid][Level] < 3)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti level 3+!");

                if(PI[playerid][Novac] < 60000)
			        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

				PI[playerid][Vozilo3] = veh_ID;
				PI[playerid][Novac] -= 60000;
				GivePlayerMoney(playerid, -60000);
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Vozilo3` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Vozilo3], PI[playerid][SQLID]);
			}

			new poz = random(sizeof(RandomAutoSpawn));
			VoziloInfo[veh_ID][SQLID] = veh_ID;
			VoziloInfo[veh_ID][vModel] = 540;
			VoziloInfo[veh_ID][vPozX] = RandomAutoSpawn[poz][0];
			VoziloInfo[veh_ID][vPozY] = RandomAutoSpawn[poz][1];
			VoziloInfo[veh_ID][vPozZ] = RandomAutoSpawn[poz][2];
			VoziloInfo[veh_ID][vPozA] = RandomAutoSpawn[poz][3];
			VoziloInfo[veh_ID][vCena] = 60000;
			strmid(VoziloInfo[veh_ID][vVlasnik], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
			VoziloInfo[veh_ID][vID] = AddStaticVehicleEx(VoziloInfo[veh_ID][vModel],VoziloInfo[veh_ID][vPozX],VoziloInfo[veh_ID][vPozY],VoziloInfo[veh_ID][vPozZ],VoziloInfo[veh_ID][vPozA],VoziloInfo[veh_ID][vBoja1],VoziloInfo[veh_ID][vBoja2],2400);
   			new engine, lights, alarm, bonnet, boot, objective;
			SetVehicleParamsEx(VoziloInfo[veh_ID][vID], engine, lights, alarm, VoziloInfo[veh_ID][vZakljucan], bonnet, boot, objective);
			Fuel[VoziloInfo[veh_ID][vID]] = 45;
			PostaviVLabel(VoziloInfo[veh_ID][vID]);

            mysql_tqueryEx(SQL, "INSERT INTO `vehicles` (SQLID, Model, X, Y, Z, A, Boja1, Boja2, Vlasnik, ImaVlasnika, Zakljucan, Cena) \
        		VALUES('%d', '%d', '%f', '%f', '%f', '%f', '0', '0', '%s', '1', '1', '%d')",
				veh_ID, VoziloInfo[veh_ID][vModel], VoziloInfo[veh_ID][vPozX], VoziloInfo[veh_ID][vPozY], VoziloInfo[veh_ID][vPozZ], VoziloInfo[veh_ID][vPozA], VoziloInfo[veh_ID][vVlasnik], VoziloInfo[veh_ID][vCena]);

			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo! Kupili ste vozilo, vozilo vam se nalazi ispred salona.");
		}
		case 16:
		{
		    Dialog_Show(playerid, dialog_kvozilo, DIALOG_STYLE_TABLIST, "{1b71bc}Katalog Vozila:", "{1b71bc}> {FFFFFF}Lanstalker\t{6EF83C}100000$\n\
   																							        {1b71bc}> {FFFFFF}Buffalo\t{6EF83C}150000$\n\
		 																		                    {1b71bc}> {FFFFFF}Sentinel\t{6EF83C}80000$\n\
	                                                                                         	    {1b71bc}> {FFFFFF}Infernus\t{6EF83C}700000$\n\
																							        {1b71bc}> {FFFFFF}Voodoo\t{6EF83C}45000$\n\
																							 		{1b71bc}> {FFFFFF}Cheetah\t{6EF83C}480000$\n\
																							 		{1b71bc}> {FFFFFF}Esperanto\t{6EF83C}45000$\n\
																							 		{1b71bc}> {FFFFFF}Premier\t{6EF83C}80000$\n\
																						 			{1b71bc}> {FFFFFF}Banshee\t{6EF83C}220000$\n\
																							 		{1b71bc}> {FFFFFF}Stallion\t{6EF83C}35000$\n\
																							 		{1b71bc}> {FFFFFF}Turismo\t{6EF83C}600000$\n\
																							 		{1b71bc}> {FFFFFF}Glendale\t{6EF83C}35000$\n\
																							 		{1b71bc}> {FFFFFF}Hermes\t{6EF83C}35000$\n\
																							 		{1b71bc}> {FFFFFF}Sabre\t{6EF83C}50000$\n\
																							 		{1b71bc}> {FFFFFF}ZR-350\t{6EF83C}200000$\n\
																							 		{1b71bc}> {FFFFFF}Rancher\t{6EF83C}270000$\n\
																							 		{1b71bc}> {FFFFFF}Mesa\t{6EF83C}70000$\n\
																							 		{1b71bc}> {FFFFFF}Super GT\t{6EF83C}120000$\n\
																							 		{1b71bc}> {FFFFFF}Nebula\t{6EF83C}35000$\n\
																							 		{1b71bc}> {FFFFFF}Fortune\t{6EF83C}40000$\n\
																							 		{1b71bc}> {FFFFFF}Feltzer\t{6EF83C}80000$\n\
																							 		{FFFFFF}Sledeca strana", "Kupi", "Izadji");
  		}
  	}
	return 1;
}

Dialog:dialog_opstina(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;
	
	switch(listitem)
	{
	    case 0:
		{
		    Dialog_Show(playerid, dialog_poslovi, DIALOG_STYLE_LIST, "{1b71bc}Poslovi", "{1b71bc}> {FFFFFF}Kosac Trave\n\
																			             {1b71bc}> {FFFFFF}Uber\n\
																						 {1b71bc}> {FFFFFF}Pilot\n\
																						 {1b71bc}> {FFFFFF}Masinovodja", "Odaberi", "Izlaz");
		}
		case 1:
		{
		    Dialog_Show(playerid, dialog_kprodukte, DIALOG_STYLE_INPUT, "{1b71bc}Produkti", "{FFFFFF}Unesite kolicinu produkata koju zelite da kupite.\n{FF0000}Cijena produkata po komandu je 25$.", "Kupi", "Izlaz");
		}
		case 2:
		{
		    if(PI[playerid][OrgKazna] == 0)
		        return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi nemate organizacijsku kaznu.");
		        
			if(PI[playerid][Novac] < 50000)
			    return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca (50000$).");
			    
			PI[playerid][OrgKazna] = 0;
			PI[playerid][Novac] -= 50000;
			
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `OrgKazna` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][OrgKazna], PI[playerid][SQLID]);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste platili organizacijsku kaznu (-50000$)!");
			va_SendClientMessage(playerid, -1, "Sada mozete ponovo uci u organizaciju.");
		}
	}
	return 1;
}

Dialog:dialog_poslovi(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;

    switch(listitem)
	{
	    case 0:
		{
		   	SetPlayerCheckpoint(playerid, 228.0947,-1408.8477,13.4279, 1.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odabrali ste posao {FF0000}Kosac trave {FFFFFF}i oznacen vam je {FF0000}crvenim {FFFFFF}markerom na mapi.");
		}
		case 1:
		{
		   	SetPlayerCheckpoint(playerid, 1752.5144,-1894.0979,13.5574, 1.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odabrali ste posao {FF0000}Uber {FFFFFF}i oznacen vam je {FF0000}crvenim {FFFFFF}markerom na mapi.");
		}
		case 2:
		{
		   	SetPlayerCheckpoint(playerid, 1891.9248,-2328.6655,13.5469, 1.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odabrali ste posao {FF0000}Pilot {FFFFFF}i oznacen vam je {FF0000}crvenim {FFFFFF}markerom na mapi.");
		}
        case 3:
		{
		   	SetPlayerCheckpoint(playerid, 1751.1300,-1943.7557,13.5691, 1.0);
			Lociranje[playerid] = 1;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odabrali ste posao {FF0000}Masinovodja {FFFFFF}i oznacen vam je {FF0000}crvenim {FFFFFF}markerom na mapi.");
		}
	}
	return 1;
}

Dialog:dialog_kprodukte(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;
	
	new kolicina;
	if(sscanf(inputtext, "i", kolicina))
		return Dialog_Show(playerid, dialog_kprodukte, DIALOG_STYLE_INPUT, "{1b71bc}Produkti", "{FFFFFF}Unesite kolicinu produkata koju zelite da kupite.\n{FF0000}Cijena produkata po komandu je 25$.", "Kupi", "Izlaz");

	if(kolicina < 1 || kolicina > 300)
		return Dialog_Show(playerid, D_KUPIPRODUKTE, DIALOG_STYLE_INPUT, "{1b71bc}Produkti", "{FFFFFF}Unesite kolicinu produkata koju zelite da kupite.\n{FF0000}Cijena produkata po komandu je 25$.\n{FFFFFF}Ne mozete ici ispod 1 i iznad 300!", "Kupi", "Izlaz");

	if(PI[playerid][Produkti] + kolicina > 300)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete imati vise od 300 produkata kod sebe!");

	if(PI[playerid][Novac] < kolicina * 25)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate dovoljno novca!");

	PI[playerid][Produkti] += kolicina;
	PI[playerid][Novac] -= kolicina * 25;
	GivePlayerMoney(playerid, -kolicina * 25);
	
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Produkti], PI[playerid][SQLID]);
	
	new str[80];
	format(str, sizeof(str), "{C2A2DA}* %s kupuje produkte za firmu.", ReturnPlayerName(playerid));
	ProxMessage(playerid, str, 20.0);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Kupili ste %d produkata za %d$, trenutno imate %s produkata kod sebe!", kolicina, kolicina * 25, PI[playerid][Produkti]);
	va_SendClientMessage(playerid, -1, "Kada dodjete do neke od firmi koristite (/produkti).");
	return 1;
}

Dialog:dialog_uprodukte(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;
	new kolicina, Nasao_Firmu = 0;

	if(sscanf(inputtext, "i", kolicina))
		return Dialog_Show(playerid, dialog_uprodukte, DIALOG_STYLE_INPUT, "{1b71bc}Produkti", "{FFFFFF}Unesite kolicinu produkata koju zelite da preprodate ovoj firmi:", "Preprodaj", "Zatvori");

    if(kolicina < 1 || kolicina > 300)
        return Dialog_Show(playerid, dialog_uprodukte, DIALOG_STYLE_INPUT, "{1b71bc}Produkti", "{FFFFFF}Unesite kolicinu produkata koju zelite da preprodate ovoj firmi:\n{FF0000}Ne mozete ici ispod 1 i iznad max. produkata!", "Preprodaj", "Zatvori");

	for(new fi_id = 1; fi_id < MAX_FIRMI; fi_id++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 8.0, FirmaInfo[fi_id][fUlazX], FirmaInfo[fi_id][fUlazY], FirmaInfo[fi_id][fUlazZ]))
		{
			Nasao_Firmu ++;
			if(PI[playerid][Firma] == fi_id)
			{
   				if(FirmaInfo[fi_id][fProdukti] + kolicina > 300)
   					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vasa firma ima dovoljno produkata!");
			}
			else
			{
   				if(FirmaInfo[fi_id][fProdukti] > 0)
   					return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}U firmu mozete stavljati produkte kada firma bude imala 0 produkata!");
			}
			if(FirmaInfo[fi_id][fImaVlasnika] == 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Firma nema vlasnika pa joj ne mozete preprodati produkte!");

			if(PI[playerid][Produkti] < kolicina)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nemate toliko produkata kod sebe!");

			if(FirmaInfo[fi_id][fKasa] < kolicina * 25)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Firma nema dovoljno novca da plati Vase produkte!");

			if(sscanf(inputtext, "i", kolicina))
				return Dialog_Show(playerid, dialog_uprodukte, DIALOG_STYLE_INPUT, "{1b71bc}Produkti", "{FFFFFF}Unesite kolicinu produkata koju zelite da preprodate ovoj firmi:", "Preprodaj", "Zatvori");

			FirmaInfo[fi_id][fKasa] -= kolicina * 25;
			FirmaInfo[fi_id][fProdukti] += kolicina;
			mysql_tqueryEx(SQL, "UPDATE `business` SET `Produkti` = '%d' WHERE `SQLID` = '%d'", FirmaInfo[fi_id][fProdukti], FirmaInfo[fi_id][SQLID]);

			PI[playerid][Produkti] -= kolicina;
			PI[playerid][Novac] += kolicina * 25;
			GivePlayerMoney(playerid, kolicina * 25);
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d', `Produkti` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][Produkti], PI[playerid][SQLID]);
			
			new str[80];
			format(str, sizeof(str), "{C2A2DA}* %s ubacuje produkte u firmu.", ReturnPlayerName(playerid));
			ProxMessage(playerid, str, 20.0);
							
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prodali ste %d produkata za %d$ ovoj firmi.", kolicina, kolicina * 25);
			break;
		}
	}
	if(Nasao_Firmu == 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste u blizini niti jedne firme!");
	return 1;
}

Dialog:dialog_vpvozila(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;

	switch(listitem)
	{
		case 0:
		{
			new vehId = PI[playerid][Vozilo1];

			if(vehId < 0 || strcmp(VoziloInfo[vehId][vVlasnik], ReturnPlayerName(playerid)) != 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ne posedujete vozilo.");

			new Float:fPos[3];
			GetPlayerPos(playerid, fPos[0], fPos[1], fPos[2]);
			SetVehiclePos(VoziloInfo[vehId][vID], fPos[0], fPos[1], fPos[2]);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Vozilo je teleportovano.");
		}
		case 1:
		{
			new vehId = PI[playerid][Vozilo2];

			if(vehId < 0 || strcmp(VoziloInfo[vehId][vVlasnik], ReturnPlayerName(playerid)) != 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ne posedujete vozilo.");

			new Float:fPos[3];
			GetPlayerPos(playerid, fPos[0], fPos[1], fPos[2]);
			SetVehiclePos(VoziloInfo[vehId][vID], fPos[0], fPos[1], fPos[2]);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Vozilo je teleportovano.");
		}
		case 2:
		{
			new vehId = PI[playerid][Vozilo3];

			if(vehId < 0 || strcmp(VoziloInfo[vehId][vVlasnik], ReturnPlayerName(playerid)) != 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ne posedujete vozilo.");

			new Float:fPos[3];
			GetPlayerPos(playerid, fPos[0], fPos[1], fPos[2]);
			SetVehiclePos(VoziloInfo[vehId][vID], fPos[0], fPos[1], fPos[2]);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Vozilo je teleportovano.");
		}

	}
	return 1;
}

Dialog:dialog_vrvozila(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;

	switch(listitem)
	{
		case 0:
		{
			new vehId = PI[playerid][Vozilo1];

			if(vehId < 0 || strcmp(VoziloInfo[vehId][vVlasnik], ReturnPlayerName(playerid)) != 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ne posedujete vozilo.");

            SetVehicleToRespawn(VoziloInfo[vehId][vID]);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Vozilo je respawnovano.");
		}
		case 1:
		{
			new vehId = PI[playerid][Vozilo2];

			if(vehId < 0 || strcmp(VoziloInfo[vehId][vVlasnik], ReturnPlayerName(playerid)) != 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ne posedujete vozilo.");

			SetVehicleToRespawn(VoziloInfo[vehId][vID]);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Vozilo je teleportovano.");
		}
		case 2:
		{
			new vehId = PI[playerid][Vozilo3];

			if(vehId < 0 || strcmp(VoziloInfo[vehId][vVlasnik], ReturnPlayerName(playerid)) != 0)
				return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vi ne posedujete vozilo.");

			SetVehicleToRespawn(VoziloInfo[vehId][vID]);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Vozilo je respawnovano.");
		}

	}
	return 1;
}

Dialog:dialog_lp(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;

	listitem ++;
 	if(PitanjaInfo[listitem][pPostavio] == false)
 		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Na ovom slotu nema pitanja.");

	IzabraniAskQ[playerid] = listitem;
 	Dialog_Show(playerid, dialog_lpodg, DIALOG_STYLE_INPUT, "{1b71bc}Odgovori na Pitanje:", "{FFFFFF}Pitanje od igraca {1b71bc}%s {FFFFFF}:\n\n\
	 																	                     {1b71bc}Pitanje: {FFFFFF}%s", "OK", "", PitanjaInfo[listitem][pIme_Igraca], PitanjaInfo[listitem][pPitanje_Text]);
	return 1;
}

Dialog:dialog_lpodg(playerid, response, listitem, inputtext[])
{
    if(!response) return 1;
    new text[128];
    if(sscanf(inputtext, "s[128]", text)) return 1;
	new askid = IzabraniAskQ[playerid];

	if(PitanjaInfo[askid][pPostavio] == false)
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Na ovom slotu nema pitanja.");

	PitanjaInfo[askid][pPostavio] = false;
	new id = PitanjaInfo[askid][pID_Igraca];
	IzabraniAskQ[playerid] = -1;
	if(strcmp(ReturnPlayerName(id), PitanjaInfo[askid][pIme_Igraca], true) == 0)
	{
		OdgovoriInfo[id][pOdgovorio] = true;
		strmid(OdgovoriInfo[id][pOdgovorio_Ime], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 32);
  		strmid(OdgovoriInfo[id][pOdgovor_Text], text, 0, strlen(text), 128);
		if(PI[playerid][Admin] >= 1)
		{
            static str[256];
			format(str, sizeof(str), "[ADMIN]: {FFFFFF}%s je odgovorio na pitanje igracu %s | Tekst : %s.", ReturnPlayerName(playerid), PitanjaInfo[askid][pIme_Igraca], text);
			AdminMessage(0xFF0000FF, str);
		}
  		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odgovorili ste na pitanje igracu %s (ID:%d): %s.", text);
		va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Admin je odgovorio na tvoje pitanje.");
		va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Da pogledate odgovor kucajte /pogledajodgovor.");
		strmid(PitanjaInfo[askid][pIme_Igraca], "Prazno", 0, strlen("Prazno"), 32);
  		PitanjaInfo[askid][pID_Igraca] = -1; Slot_Pitanja[id] = -1;
	}
 	else
	{
 		if(id != INVALID_PLAYER_ID)
		{
			OdgovoriInfo[id][Postavio_Pitanje] = false;
   			OdgovoriInfo[id][pOdgovorio] = false;
			strmid(OdgovoriInfo[id][pOdgovorio_Ime], "Prazno", 0, strlen("Prazno"), 32);
   			strmid(OdgovoriInfo[id][pOdgovor_Text], "Prazno", 0, strlen("Prazno"), 128);
      		Slot_Pitanja[id] = -1;
      	}
       	strmid(PitanjaInfo[askid][pIme_Igraca], "Prazno", 0, strlen("Prazno"), 32);
        PitanjaInfo[askid][pPostavio] = false;
        PitanjaInfo[askid][pID_Igraca] = -1;
		va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije online.");
		return 1;
	}
	return 1;
}

Dialog:dialog_teritorija(playerid, response, listitem, inputtext[])
{
	if(!response) return va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odustali ste od kreiranje teritorije.");
	
	switch(listitem)
	{
		case 0:
		{
			new t_id;
			for(new id = 1; id < MAX_TERITORIJA; id++)
			{
			    if(TeritorijeInfo[id][SQLID] < 1)
		        {
		            t_id = id; break;
		        }
			}
		    if(t_id == 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Maksimum teritorija je dostignut!");
			
			Kreira_Teritoriju_IDID[playerid] = t_id;
			TeritorijeInfo[t_id][SQLID] = t_id;
			
			mysql_tqueryEx(SQL, "INSERT INTO `zones` (SQLID) VALUES('%d')", TeritorijeInfo[t_id][t_Boja]);
			            
			Kreira_Teritoriju_ID[playerid] = 1;
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Uspesno ste uneli boju za teritoriju!");
		    va_SendClientMessage(playerid, 0xFF0000FF, "#Pozicije: {FFFFFF}Sada prvo sacuvajte poziciju levog donjeg ugla teritorije.");
		    va_SendClientMessage(playerid, -1, "Koristite {1b71bc}LMB {FFFFFF}da postavite pozicije.");
		}
		case 1:
       	{
       		Dialog_Show(playerid, dialog_tnovac, DIALOG_STYLE_INPUT, "{1b71bc}Novac Teritorije", "{FFFFFF}Unesite kolicinu novca za teritoriju (na svakih 30 min):\nNpr: {1b71bc}200", "Odaberi", "Izlaz");
		}
		case 2:
       	{
       		Dialog_Show(playerid, dialog_tdroga, DIALOG_STYLE_INPUT, "{1b71bc}Droga Teritorije", "{FFFFFF}Unesite kolicinu droge za teritoriju (na svakih 30 min):\nNpr: {1b71bc}200", "Odaberi", "Izlaz");
		}
		case 3:
       	{
       		Dialog_Show(playerid, dialog_tmats, DIALOG_STYLE_INPUT, "{1b71bc}Mats Teritorije", "{FFFFFF}Unesite kolicinu matsa za teritoriju (na svakih 30 min):\nNpr: {1b71bc}200", "Odaberi", "Izlaz");
		}
		case 4:
		{
		 	Dialog_Show(playerid, dialog_tpickup, DIALOG_STYLE_INPUT, "{1b71bc}Teritorija Pickup:", "{FFFFFF}Unesite ID Teritorije kojoj zelite premesiti Pickup:", "Premesti", "Izlaz");
		}
		case 5:
       	{
       		Dialog_Show(playerid, dialog_tobrisi, DIALOG_STYLE_INPUT, "{1b71bc}Obrisi Teritoriju:", "{FFFFFF}Unesite ID Teritorije kojoj zelite obrisati:", "Obrisi", "Izlaz");
		}
	}
	return 1;
}

Dialog:dialog_tnovac(playerid, response, listitem, inputtext[])
{
	if(!response) return va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odustali ste od kreiranje teritorije.");
	
	new kolicina;
	
	if(sscanf(inputtext, "i", kolicina)) 
		return Dialog_Show(playerid, dialog_tnovac, DIALOG_STYLE_INPUT, "{1b71bc}Novac Teritorije", "{FFFFFF}Unesite kolicinu novca za teritoriju (na svakih 30 min):\nNpr: {1b71bc}200", "Odaberi", "Izlaz");
		    	
	if(IsPlayerInAnyVehicle(playerid)) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti van vozila!");
	            
	new t_id = KodTeritorije(playerid);
	if(t_id == -1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras biti kod pickupa teritorije kojoj zelite promeniti kolicinu kokaina!");
	            
	TeritorijeInfo[t_id][t_Novac] = kolicina;
	mysql_tqueryEx(SQL, "UPDATE `zones` SET `Novac` = '%d' WHERE `SQLID` = '%d'", TeritorijeInfo[t_id][t_Novac], TeritorijeInfo[t_id][SQLID]);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odredili ste %d$ teritoriji ID: %d.", TeritorijeInfo[t_id][t_Novac], t_id);
	return 1;
}

Dialog:dialog_tdroga(playerid, response, listitem, inputtext[])
{
	if(!response) return va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odustali ste od kreiranje teritorije.");
	
	new kolicina;
	
	if(sscanf(inputtext, "i", kolicina)) 
		return Dialog_Show(playerid, dialog_tdroga, DIALOG_STYLE_INPUT, "{1b71bc}Droga Teritorije", "{FFFFFF}Unesite kolicinu droge za teritoriju (na svakih 30 min):\nNpr: {1b71bc}200", "Odaberi", "Izlaz");
		    	
	if(IsPlayerInAnyVehicle(playerid)) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti van vozila!");
	            
	new t_id = KodTeritorije(playerid);
	if(t_id == -1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras biti kod pickupa teritorije kojoj zelite promeniti kolicinu kokaina!");
	            
	TeritorijeInfo[t_id][t_Droga] = kolicina;
	mysql_tqueryEx(SQL, "UPDATE `zones` SET `Droga` = '%d' WHERE `SQLID` = '%d'", TeritorijeInfo[t_id][t_Droga], TeritorijeInfo[t_id][SQLID]);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odredili ste %dg droge teritoriji ID: %d.", TeritorijeInfo[t_id][t_Droga], t_id);
	return 1;
}

Dialog:dialog_tmats(playerid, response, listitem, inputtext[])
{
	if(!response) return va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odustali ste od kreiranje teritorije.");
	
	new kolicina;
	
	if(sscanf(inputtext, "i", kolicina)) 
		return Dialog_Show(playerid, dialog_tmats, DIALOG_STYLE_INPUT, "{1b71bc}Mats Teritorije", "{FFFFFF}Unesite kolicinu matsa za teritoriju (na svakih 30 min):\nNpr: {1b71bc}200", "Odaberi", "Izlaz");
		    	
	if(IsPlayerInAnyVehicle(playerid)) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Morate biti van vozila!");
	            
	new t_id = KodTeritorije(playerid);
	if(t_id == -1) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Moras biti kod pickupa teritorije kojoj zelite promeniti kolicinu kokaina!");
	            
	TeritorijeInfo[t_id][t_Mats] = kolicina;
	mysql_tqueryEx(SQL, "UPDATE `zones` SET `Mats` = '%d' WHERE `SQLID` = '%d'", TeritorijeInfo[t_id][t_Mats], TeritorijeInfo[t_id][SQLID]);
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odredili ste %d materijala teritoriji ID: %d.", TeritorijeInfo[t_id][t_Mats], t_id);
	return 1;
}

Dialog:dialog_tpickup(playerid, response, listitem, inputtext[])
{
	if(!response) return va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odustali ste od kreiranje teritorije.");
	
	new Float:Pos[3], t_id;
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	
	if(sscanf(inputtext,"i", t_id)) 
		return Dialog_Show(playerid, dialog_tpickup, DIALOG_STYLE_INPUT, "{1b71bc}Teritorija Pickup:", "{FFFFFF}Unesite ID Teritorije kojoj zelite premesiti Pickup:", "Premesti", "Izlaz");
		        
	if(TeritorijeInfo[t_id][SQLID] < 1) 
		return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}ID te teritorije ne postoji!");
		
	TeritorijeInfo[t_id][t_PickupPos][0] = Pos[0];
	TeritorijeInfo[t_id][t_PickupPos][1] = Pos[1];
	TeritorijeInfo[t_id][t_PickupPos][2] = Pos[2];
	Update_Teritoriju(t_id);
	mysql_tqueryEx(SQL, "UPDATE `zones` SET `PickupPos_1` = '%f', `PickupPos_2` = '%f', `PickupPos_3` = '%f' WHERE `SQLID` = '%d'", 
		TeritorijeInfo[t_id][t_PickupPos][0], TeritorijeInfo[t_id][t_PickupPos][1], TeritorijeInfo[t_id][t_PickupPos][2], TeritorijeInfo[t_id][SQLID]);
	
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Odredili ste pozicije pickupa teritoriji ID: %d.", t_id);
	return 1;
}

Dialog:dialog_server(playerid, response, listitem, inputtext[])
{
	if(!response) return 1;

	new str[156];

	switch(listitem)
	{
	    case 0:
	    {
	        if(ServerInfo[sRegistracija] == 1)
	        {
	            ServerInfo[sRegistracija] = 0;
	            mysql_tqueryEx(SQL, "UPDATE `server` SET `Registracija` = '%d' WHERE `SQLID` = '1'", ServerInfo[sRegistracija]);
	            va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Iskljucili ste registraciju na serveru.");

	            format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Vlasnik %s je iskljucio registraciju na serveru!", ReturnPlayerName(playerid));
				AdminMessage(-1, str);

				Dialog_Show(playerid, dialog_server, DIALOG_STYLE_TABLIST, "{1b71bc}Server Podesavanja", "{1b71bc}> {FFFFFF}Registracija\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Kupovina Vozila\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Pitanja\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Reporta\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Dupli Respekti\t%s\n\
																							  {1b71bc}> {FFFFFF}Oglas\t%s", "Odaberi", "Izlaz",
																							  ServerInfo[sRegistracija] == 1 ? "{00FF00}Ukljucena" : "{FF0000}Iskljucena",
																							  ServerInfo[sKupovinaVozila] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sPitanja] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sReport] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen",
																							  ServerInfo[sDupliRespekti] == 1 ? "{00FF00}Ukljuceni" : "{FF0000}Iskljuceni",
																							  ServerInfo[sOglas] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen");
			}
			else
			{
                ServerInfo[sRegistracija] = 1;
	            mysql_tqueryEx(SQL, "UPDATE `server` SET `Registracija` = '%d' WHERE `SQLID` = '1'", ServerInfo[sRegistracija]);
	            va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ukljucili ste registraciju na serveru.");

	            format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Vlasnik %s je ukljucio registraciju na serveru!", ReturnPlayerName(playerid));
				AdminMessage(-1, str);

				Dialog_Show(playerid, dialog_server, DIALOG_STYLE_TABLIST, "{1b71bc}Server Podesavanja", "{1b71bc}> {FFFFFF}Registracija\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Kupovina Vozila\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Pitanja\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Reporta\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Dupli Respekti\t%s\n\
																							  {1b71bc}> {FFFFFF}Oglas\t%s", "Odaberi", "Izlaz",
																							  ServerInfo[sRegistracija] == 1 ? "{00FF00}Ukljucena" : "{FF0000}Iskljucena",
																							  ServerInfo[sKupovinaVozila] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sPitanja] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sReport] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen",
																							  ServerInfo[sDupliRespekti] == 1 ? "{00FF00}Ukljuceni" : "{FF0000}Iskljuceni",
																							  ServerInfo[sOglas] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen");
			}
		}
		case 1:
		{
		    if(ServerInfo[sKupovinaVozila] == 1)
	        {
	            ServerInfo[sKupovinaVozila] = 0;
	            mysql_tqueryEx(SQL, "UPDATE `server` SET `KupovinaVozila` = '%d' WHERE `SQLID` = '1'", ServerInfo[sKupovinaVozila]);
	            va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Iskljucili ste kupovinu vozila na serveru.");

	            format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Vlasnik %s je iskljucio kupovinu vozila na serveru!", ReturnPlayerName(playerid));
				AdminMessage(-1, str);

				Dialog_Show(playerid, dialog_server, DIALOG_STYLE_TABLIST, "{1b71bc}Server Podesavanja", "{1b71bc}> {FFFFFF}Registracija\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Kupovina Vozila\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Pitanja\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Reporta\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Dupli Respekti\t%s\n\
																							  {1b71bc}> {FFFFFF}Oglas\t%s", "Odaberi", "Izlaz",
																							  ServerInfo[sRegistracija] == 1 ? "{00FF00}Ukljucena" : "{FF0000}Iskljucena",
																							  ServerInfo[sKupovinaVozila] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sPitanja] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sReport] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen",
																							  ServerInfo[sDupliRespekti] == 1 ? "{00FF00}Ukljuceni" : "{FF0000}Iskljuceni",
																							  ServerInfo[sOglas] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen");
			}
			else
			{
                ServerInfo[sKupovinaVozila] = 1;
	            mysql_tqueryEx(SQL, "UPDATE `server` SET `KupovinaVozila` = '%d' WHERE `SQLID` = '1'", ServerInfo[sKupovinaVozila]);
	            va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ukljucili ste registraciju na serveru.");

	            format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Vlasnik %s je ukljucio kuupovinu vozila na serveru!", ReturnPlayerName(playerid));
				AdminMessage(-1, str);

				Dialog_Show(playerid, dialog_server, DIALOG_STYLE_TABLIST, "{1b71bc}Server Podesavanja", "{1b71bc}> {FFFFFF}Registracija\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Kupovina Vozila\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Pitanja\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Reporta\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Dupli Respekti\t%s\n\
																							  {1b71bc}> {FFFFFF}Oglas\t%s", "Odaberi", "Izlaz",
																							  ServerInfo[sRegistracija] == 1 ? "{00FF00}Ukljucena" : "{FF0000}Iskljucena",
																							  ServerInfo[sKupovinaVozila] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sPitanja] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sReport] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen",
																							  ServerInfo[sDupliRespekti] == 1 ? "{00FF00}Ukljuceni" : "{FF0000}Iskljuceni",
																							  ServerInfo[sOglas] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen");
			}
		}
		case 2:
		{
		    if(ServerInfo[sPitanja] == 1)
	        {
	            ServerInfo[sPitanja] = 0;
	            mysql_tqueryEx(SQL, "UPDATE `server` SET `Pitanja` = '%d' WHERE `SQLID` = '1'", ServerInfo[sPitanja]);
	            va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Iskljucili ste pitanja na serveru.");

	            format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Vlasnik %s je iskljucio pitanja na serveru!", ReturnPlayerName(playerid));
				AdminMessage(-1, str);

				Dialog_Show(playerid, dialog_server, DIALOG_STYLE_TABLIST, "{1b71bc}Server Podesavanja", "{1b71bc}> {FFFFFF}Registracija\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Kupovina Vozila\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Pitanja\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Reporta\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Dupli Respekti\t%s\n\
																							  {1b71bc}> {FFFFFF}Oglas\t%s", "Odaberi", "Izlaz",
																							  ServerInfo[sRegistracija] == 1 ? "{00FF00}Ukljucena" : "{FF0000}Iskljucena",
																							  ServerInfo[sKupovinaVozila] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sPitanja] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sReport] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen",
																							  ServerInfo[sDupliRespekti] == 1 ? "{00FF00}Ukljuceni" : "{FF0000}Iskljuceni",
																							  ServerInfo[sOglas] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen");
			}
			else
			{
                ServerInfo[sPitanja] = 1;
	            mysql_tqueryEx(SQL, "UPDATE `server` SET `Pitanja` = '%d' WHERE `SQLID` = '1'", ServerInfo[sPitanja]);
	            va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ukljucili ste pitanja na serveru.");

	            format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Vlasnik %s je ukljucio pitanja na serveru!", ReturnPlayerName(playerid));
				AdminMessage(-1, str);

				Dialog_Show(playerid, dialog_server, DIALOG_STYLE_TABLIST, "{1b71bc}Server Podesavanja", "{1b71bc}> {FFFFFF}Registracija\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Kupovina Vozila\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Pitanja\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Reporta\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Dupli Respekti\t%s\n\
																							  {1b71bc}> {FFFFFF}Oglas\t%s", "Odaberi", "Izlaz",
																							  ServerInfo[sRegistracija] == 1 ? "{00FF00}Ukljucena" : "{FF0000}Iskljucena",
																							  ServerInfo[sKupovinaVozila] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sPitanja] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sReport] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen",
																							  ServerInfo[sDupliRespekti] == 1 ? "{00FF00}Ukljuceni" : "{FF0000}Iskljuceni",
																							  ServerInfo[sOglas] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen");
			}
		}
		case 3:
		{
		    if(ServerInfo[sReport] == 1)
	        {
	            ServerInfo[sReport] = 0;
	            mysql_tqueryEx(SQL, "UPDATE `server` SET `Report` = '%d' WHERE `SQLID` = '1'", ServerInfo[sReport]);
	            va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Iskljucili ste pitanja na serveru.");

	            format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Vlasnik %s je iskljucio report na serveru!", ReturnPlayerName(playerid));
				AdminMessage(-1, str);

				Dialog_Show(playerid, dialog_server, DIALOG_STYLE_TABLIST, "{1b71bc}Server Podesavanja", "{1b71bc}> {FFFFFF}Registracija\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Kupovina Vozila\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Pitanja\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Reporta\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Dupli Respekti\t%s\n\
																							  {1b71bc}> {FFFFFF}Oglas\t%s", "Odaberi", "Izlaz",
																							  ServerInfo[sRegistracija] == 1 ? "{00FF00}Ukljucena" : "{FF0000}Iskljucena",
																							  ServerInfo[sKupovinaVozila] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sPitanja] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sReport] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen",
																							  ServerInfo[sDupliRespekti] == 1 ? "{00FF00}Ukljuceni" : "{FF0000}Iskljuceni",
																							  ServerInfo[sOglas] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen");
			}
			else
			{
                ServerInfo[sReport] = 1;
	            mysql_tqueryEx(SQL, "UPDATE `server` SET `Report` = '%d' WHERE `SQLID` = '1'", ServerInfo[sReport]);
	            va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ukljucili ste report na serveru.");

	            format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Vlasnik %s je ukljucio report na serveru!", ReturnPlayerName(playerid));
				AdminMessage(-1, str);

				Dialog_Show(playerid, dialog_server, DIALOG_STYLE_TABLIST, "{1b71bc}Server Podesavanja", "{1b71bc}> {FFFFFF}Registracija\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Kupovina Vozila\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Pitanja\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Reporta\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Dupli Respekti\t%s\n\
																							  {1b71bc}> {FFFFFF}Oglas\t%s", "Odaberi", "Izlaz",
																							  ServerInfo[sRegistracija] == 1 ? "{00FF00}Ukljucena" : "{FF0000}Iskljucena",
																							  ServerInfo[sKupovinaVozila] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sPitanja] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sReport] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen",
																							  ServerInfo[sDupliRespekti] == 1 ? "{00FF00}Ukljuceni" : "{FF0000}Iskljuceni",
																							  ServerInfo[sOglas] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen");
			}
		}
		case 4:
		{
		    if(ServerInfo[sDupliRespekti] == 1)
	        {
	            ServerInfo[sDupliRespekti] = 0;
	            mysql_tqueryEx(SQL, "UPDATE `server` SET `DupliRespekti` = '%d' WHERE `SQLID` = '1'", ServerInfo[sDupliRespekti]);
	            va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Iskljucili ste duple respekte na serveru.");

	            format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Vlasnik %s je iskljucio duple respekte na serveru!", ReturnPlayerName(playerid));
				AdminMessage(-1, str);
				
				SendRconCommand("name VIBE | Dobrodosli | www.vibe-ogc.samp.info");

				Dialog_Show(playerid, dialog_server, DIALOG_STYLE_TABLIST, "{1b71bc}Server Podesavanja", "{1b71bc}> {FFFFFF}Registracija\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Kupovina Vozila\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Pitanja\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Reporta\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Dupli Respekti\t%s\n\
																							  {1b71bc}> {FFFFFF}Oglas\t%s", "Odaberi", "Izlaz",
																							  ServerInfo[sRegistracija] == 1 ? "{00FF00}Ukljucena" : "{FF0000}Iskljucena",
																							  ServerInfo[sKupovinaVozila] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sPitanja] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sReport] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen",
																							  ServerInfo[sDupliRespekti] == 1 ? "{00FF00}Ukljuceni" : "{FF0000}Iskljuceni",
																							  ServerInfo[sOglas] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen");
			}
			else
			{
                ServerInfo[sDupliRespekti] = 1;
	            mysql_tqueryEx(SQL, "UPDATE `server` SET `DupliRespekti` = '%d' WHERE `SQLID` = '1'", ServerInfo[sDupliRespekti]);
	            va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ukljucili ste duple respekte na serveru.");

	            format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Vlasnik %s je ukljucio duple respekte na serveru!", ReturnPlayerName(playerid));
				AdminMessage(-1, str);
				
				SendRconCommand("name VIBE | Dupli Respekti 2x | www.vibe-ogc.samp.info");

				Dialog_Show(playerid, dialog_server, DIALOG_STYLE_TABLIST, "{1b71bc}Server Podesavanja", "{1b71bc}> {FFFFFF}Registracija\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Kupovina Vozila\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Pitanja\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Reporta\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Dupli Respekti\t%s\n\
																							  {1b71bc}> {FFFFFF}Oglas\t%s", "Odaberi", "Izlaz",
																							  ServerInfo[sRegistracija] == 1 ? "{00FF00}Ukljucena" : "{FF0000}Iskljucena",
																							  ServerInfo[sKupovinaVozila] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sPitanja] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sReport] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen",
																							  ServerInfo[sDupliRespekti] == 1 ? "{00FF00}Ukljuceni" : "{FF0000}Iskljuceni",
																							  ServerInfo[sOglas] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen");
			}
		}
		case 5:
		{
		    if(ServerInfo[sOglas] == 1)
	        {
	            ServerInfo[sOglas] = 0;
	            mysql_tqueryEx(SQL, "UPDATE `server` SET `Oglas` = '%d' WHERE `SQLID` = '1'", ServerInfo[sOglas]);
	            va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Iskljucili ste oglase na serveru.");

	            format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Vlasnik %s je iskljucio oglase na serveru!", ReturnPlayerName(playerid));
				AdminMessage(-1, str);

				Dialog_Show(playerid, dialog_server, DIALOG_STYLE_TABLIST, "{1b71bc}Server Podesavanja", "{1b71bc}> {FFFFFF}Registracija\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Kupovina Vozila\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Pitanja\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Reporta\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Dupli Respekti\t%s\n\
																							  {1b71bc}> {FFFFFF}Oglas\t%s", "Odaberi", "Izlaz",
																							  ServerInfo[sRegistracija] == 1 ? "{00FF00}Ukljucena" : "{FF0000}Iskljucena",
																							  ServerInfo[sKupovinaVozila] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sPitanja] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sReport] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen",
																							  ServerInfo[sDupliRespekti] == 1 ? "{00FF00}Ukljuceni" : "{FF0000}Iskljuceni",
																							  ServerInfo[sOglas] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen");
			}
			else
			{
                ServerInfo[sOglas] = 1;
	            mysql_tqueryEx(SQL, "UPDATE `server` SET `Oglas` = '%d' WHERE `SQLID` = '1'", ServerInfo[sOglas]);
	            va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Ukljucili ste oglase na serveru.");

	            format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Vlasnik %s je ukljucio oglase na serveru!", ReturnPlayerName(playerid));
				AdminMessage(-1, str);

				Dialog_Show(playerid, dialog_server, DIALOG_STYLE_TABLIST, "{1b71bc}Server Podesavanja", "{1b71bc}> {FFFFFF}Registracija\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Kupovina Vozila\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Pitanja\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Slanje Reporta\t%s\n\
                                                                                              {1b71bc}> {FFFFFF}Dupli Respekti\t%s\n\
																							  {1b71bc}> {FFFFFF}Oglas\t%s", "Odaberi", "Izlaz",
																							  ServerInfo[sRegistracija] == 1 ? "{00FF00}Ukljucena" : "{FF0000}Iskljucena",
																							  ServerInfo[sKupovinaVozila] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sPitanja] == 1 ? "{00FF00}Ukljuceno" : "{FF0000}Iskljuceno",
																							  ServerInfo[sReport] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen",
																							  ServerInfo[sDupliRespekti] == 1 ? "{00FF00}Ukljuceni" : "{FF0000}Iskljuceni",
																							  ServerInfo[sOglas] == 1 ? "{00FF00}Ukljucen" : "{FF0000}Iskljucen");
			}
		}
	}
	return 1;
}

// - > Forwards & Publics
forward SQL_PlayerCheck(const playerid);
public SQL_PlayerCheck(const playerid)
{
	static rows;
	cache_get_row_count(rows);
	if(rows)
	{
	    cache_get_value_name_int(0, "SQLID", PI[playerid][SQLID]);
	    cache_get_value_name(0, "Password", PI[playerid][Password], 64);
	    cache_get_value_name(0, "Email", PI[playerid][Email], 50);
		cache_get_value_name_int(0, "Skin", PI[playerid][Skin]);
		cache_get_value_name_int(0, "Admin", PI[playerid][Admin]);
		cache_get_value_name_int(0, "Level", PI[playerid][Level]);
		cache_get_value_name_int(0, "Respekti", PI[playerid][Respekti]);
		cache_get_value_name_int(0, "SatiIgre", PI[playerid][SatiIgre]);
        cache_get_value_name_int(0, "Novac", PI[playerid][Novac]);
        cache_get_value_name_int(0, "Pol", PI[playerid][Pol]);
        cache_get_value_name_int(0, "Drzava", PI[playerid][Drzava]);
        cache_get_value_name_int(0, "Godine", PI[playerid][Godine]);
        cache_get_value_name_int(0, "NovacBanka", PI[playerid][NovacBanka]);
        cache_get_value_name_int(0, "Zlato", PI[playerid][Zlato]);
        cache_get_value_name_int(0, "Banovan", PI[playerid][Banovan]);
        cache_get_value_name(0, "BRazlog", PI[playerid][BRazlog], 40);
        cache_get_value_name_int(0, "Kartica", PI[playerid][Kartica]);
        cache_get_value_name_int(0, "KarticaPin", PI[playerid][KarticaPin]);
        cache_get_value_name_int(0, "Warn", PI[playerid][Warn]);
        cache_get_value_name_int(0, "ADozvola", PI[playerid][ADozvola]);
		cache_get_value_name_int(0, "KamionDozvola", PI[playerid][KamionDozvola]);
		cache_get_value_name_int(0, "MotorDozvola", PI[playerid][MotorDozvola]);
		cache_get_value_name_int(0, "AvionDozvola", PI[playerid][AvionDozvola]);
		cache_get_value_name_int(0, "BrodDozvola", PI[playerid][BrodDozvola]);
		cache_get_value_name_int(0, "Kuca", PI[playerid][Kuca]);
		cache_get_value_name_int(0, "RentKuca", PI[playerid][Rent]);
		cache_get_value_name_int(0, "Spawn", PI[playerid][Spawn]);
		cache_get_value_name_int(0, "Droga", PI[playerid][Droga]);
		cache_get_value_name_int(0, "Mats", PI[playerid][Mats]);
		cache_get_value_name_int(0, "Hrana", PI[playerid][Hrana]);
		cache_get_value_name_int(0, "Stan", PI[playerid][Stan]);
		cache_get_value_name_int(0, "IznosKredita", PI[playerid][IznosKredita]);
		cache_get_value_name_int(0, "IznosRate", PI[playerid][IznosRate]);
		cache_get_value_name_int(0, "PreostalozaOtplatu", PI[playerid][PreostaloZaOtplatu]);
		cache_get_value_name_int(0, "Vip", PI[playerid][Vip]);
		cache_get_value_name_int(0, "Mutiran", PI[playerid][Mutiran]);
        cache_get_value_name_int(0, "Firma", PI[playerid][Firma]);
        cache_get_value_name_int(0, "BorbeniStil", PI[playerid][BorbeniStil]);
        cache_get_value_name_int(0, "Mobilni", PI[playerid][Mobilni]);
        cache_get_value_name_int(0, "Imenik", PI[playerid][Imenik]);
        cache_get_value_name_int(0, "MobKredit", PI[playerid][MobKredit]);
        cache_get_value_name_int(0, "Cigare", PI[playerid][Cigare]);
        cache_get_value_name_int(0, "Upaljac", PI[playerid][Upaljac]);
        cache_get_value_name_int(0, "Kanap", PI[playerid][Kanap]);
        cache_get_value_name_int(0, "Naocare", PI[playerid][Naocare]);
        cache_get_value_name_int(0, "Sat", PI[playerid][Sat]);
        cache_get_value_name_int(0, "Vozilo1", PI[playerid][Vozilo1]);
        cache_get_value_name_int(0, "Vozilo2", PI[playerid][Vozilo2]);
        cache_get_value_name_int(0, "Vozilo3", PI[playerid][Vozilo3]);
        cache_get_value_name_int(0, "Produkti", PI[playerid][Produkti]);
        cache_get_value_name_int(0, "Lider", PI[playerid][Lider]);
        cache_get_value_name_int(0, "Clan", PI[playerid][Clan]);
        cache_get_value_name_int(0, "Rank", PI[playerid][Rank]);
        cache_get_value_name(0, "RankIme", PI[playerid][RankIme], 15);
        cache_get_value_name_int(0, "OrgKazna", PI[playerid][OrgKazna]);
        cache_get_value_name(0, "LastLogin", PI[playerid][LastLogin], 30);
        cache_get_value_name_int(0, "Zatvor", PI[playerid][Zatvor]);
        cache_get_value_name_int(0, "OruzijeDozvola", PI[playerid][OruzijeDozvola]);
        cache_get_value_name_int(0, "ZatvorVreme", PI[playerid][ZatvorVreme]);
        cache_get_value_name_int(0, "Posao", PI[playerid][Posao]);
        cache_get_value_name_int(0, "TDCol", PI[playerid][TDBoja]);
        cache_get_value_name_int(0, "MTeam", PI[playerid][MTeam]);
        cache_get_value_name_int(0, "LottoBroj", PI[playerid][LottoBroj]);
        cache_get_value_name_int(0, "LottoNovac", PI[playerid][LottoNovac]);
        cache_get_value_name_int(0, "PosadioBDroge", PI[playerid][PosadioBDroge]);
        cache_get_value_name_int(0, "Seme", PI[playerid][Seme]);
        cache_get_value_name_int(0, "NeoDroga", PI[playerid][NeoDroga]);
        cache_get_value_name_int(0, "DrogaUzeoPuta", PI[playerid][DrogaUzeoPuta]);
        cache_get_value_name_int(0, "DrogaOvisan", PI[playerid][DrogaOvisan]);
		cache_get_value_name_int(0, "ZVreme", PI[playerid][ZVreme]);
		cache_get_value_name_int(0, "Akcenat", PI[playerid][Akcenat]);
        
        new q[256];
	    mysql_format(SQL, q, sizeof(q), "SELECT * FROM `quests` WHERE `Ime` = '%s'", ReturnPlayerName(playerid));
	    mysql_tquery(SQL, q, "OnQuestsLoad", "i", playerid);

		if(PI[playerid][Banovan] == 1)
		{
		    Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Banovan Status", "{1b71bc}%s {FFFFFF}vi ste banovani sa {1b71bc}Vibe Roleplay {FFFFFF}servera.\n\
																				 {FFFFFF}Razlog bana: %s\n\
																				 {FFFFFF}Ukoliko mislite da je greska prijavite na forumu {1b71bc}(www.vibe-ogc.samp.info).", "OK", "",
																				 ReturnPlayerName(playerid), PI[playerid][BRazlog]);
			PlayerTimer[playerid] = SetTimerEx("KonektKick", 1000, false, "d", playerid);
			HidePlayerDialog(playerid);
		}
		else
		{
		    ClearChat(playerid, 16);
		    PlayerTextDrawShow(playerid, LoginTD[playerid][0]);
			PlayerTextDrawShow(playerid, LoginTD[playerid][1]);
			PlayerTextDrawShow(playerid, LoginTD[playerid][2]);
			PlayerTextDrawShow(playerid, LoginTD[playerid][3]);
			PlayerTextDrawShow(playerid, LoginTD[playerid][4]);
		    InterpolateCameraPos(playerid,2299.325439,-2159.766113,42.211368,2584.985839,-2327.650146,46.299079,15000);
    		InterpolateCameraLookAt(playerid,2304.060546,-2161.342529,41.906867,2580.122314,-2326.588378,45.831016,15000);
    		PlayAudioStreamForPlayer(playerid, "http://www.coolradio.rs/download/playlist.pls");
			Dialog_Show(playerid, dialog_login, DIALOG_STYLE_PASSWORD, "{1b71bc}Login", "\n{FFFFFF}Dobrodosli nazad {1b71bc}%s {FFFFFF}na {1b71bc}Vibe Roleplay\n\
																					 {FFFFFF}Vas korisnicki racun {3acc51}je registrovan {FFFFFF}u bazi podataka.\n\
																					 {FFFFFF}Ukoliko pogresite lozinku {FF0000}4 puta {FFFFFF}bicete kickovani.\n\
																					 {FFFFFF}Imate {FF0000}30 {FFFFFF}sekundi da se ulogujete na nas server.\n\n\
																					 {FFFFFF}Ugodnu igru zeli vam {1b71bc}Vibe Roleplay Staff Tim", "Login", "Izlaz", ReturnPlayerName(playerid));

			LoginTimer[playerid] = SetTimerEx("KickLogin", 30000, false, "d", playerid);
		}
	}
	else
	{
	    if(ServerInfo[sRegistracija] == 0)
	        return va_SendClientMessage(playerid, 0xFF0000FF, "#Registracija: {FFFFFF}Registracija je trenutno onemogucena za vise informacija - www.vibe-ogc.samp.info!"), PlayerTimer[playerid] = SetTimerEx("KonektKick", 1000, false, "d", playerid);

		switch(RolePlayIme(playerid, _, _, false))
		{
		    case 1: Register(playerid);
			case 2: { va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vase ime nema niti jednu povlaku!"); Ulogovan[playerid] = 0; PlayerTimer[playerid] = SetTimerEx("KonektKick", 1000, false, "d", playerid); return 1; }
			case 3: { va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vase ime ne smije imati vise od 1 povlake!"); Ulogovan[playerid] = 0; PlayerTimer[playerid] = SetTimerEx("KonektKick", 1000, false, "d", playerid); return 1; }
			case 4: { va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vase ime ne smije imati zabranjene znakove!"); Ulogovan[playerid] = 0; PlayerTimer[playerid] = SetTimerEx("KonektKick", 1000, false, "d", playerid); return 1; }
			case 5: { va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Prvo slovo imena ili prezimena nije veliko slovo!"); Ulogovan[playerid] = 0; PlayerTimer[playerid] = SetTimerEx("KonektKick", 1000, false, "d", playerid); return 1; }
			case 6: { va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Slova poslije prvog slova imena i prezimena moraju biti mala!"); Ulogovan[playerid] = 0; PlayerTimer[playerid] = SetTimerEx("KonektKick", 1000, false, "d", playerid); return 1; }
			case 7: { va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Povlaka ne smije biti prvo slovo vašeg imena! Koristi povlaku za odvajanje Imena od Prezimena!"); Ulogovan[playerid] = 0; PlayerTimer[playerid] = SetTimerEx("KonektKick", 1000, false, "d", playerid); return 1; }
			case 8: { va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vase ime ima manje od 2 slova!"); Ulogovan[playerid] = 0; PlayerTimer[playerid] = SetTimerEx("KonektKick", 1000, false, "d", playerid); return 1; }
			case 9: { va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vase prezime ima manje od 3 slova!"); PlayerTimer[playerid] = SetTimerEx("KonektKick", 1000, false, "d", playerid); return 1; }
		}
	}
	return 1;
}

forward OnPasswordHash(playerid);
public OnPasswordHash(playerid) 
{
    bcrypt_get_hash(PI[playerid][Password]);
    printf("hash : %s", PI[playerid][Password]);
}

forward OnPasswordVerify(playerid, bool:success);
public OnPasswordVerify(playerid, bool:success)
{
	if(success)
 	{
 	    PlayerLogged(playerid);
 	    CorrectPassword[playerid] = true;
	}
	else
	{
	    IncorrectPassword[playerid] ++; CorrectPassword[playerid] = true;
	    va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Upisali ste pogresnu lozinku (%d/4)!", IncorrectPassword[playerid]);
	    Dialog_Show(playerid, dialog_login, DIALOG_STYLE_PASSWORD, "{1b71bc}Login", "\n{FFFFFF}Dobrodosli nazad {1b71bc}%s {FFFFFF}na {1b71bc}Vibe Roleplay\n\
																			 {FFFFFF}Vas korisnicki racun {3acc51}je registrovan {FFFFFF}u bazi podataka.\n\
																			 {FFFFFF}Ukoliko pogresite lozinku {FF0000}4 puta {FFFFFF}bicete kickovani.\n\
																			 {FFFFFF}Imate {FF0000}30 {FFFFFF}sekundi da se ulogujete na nas server.\n\n\
																			 {FFFFFF}Ugodnu igru zeli vam {1b71bc}Vibe Roleplay Staff Tim", "Login", "Izlaz", ReturnPlayerName(playerid));
		if(IncorrectPassword[playerid] >= 4)
		{
		    va_SendClientMessage(playerid, 0xFF0000FF, "#Kick: {FFFFFF}Pogresili ste lozinku 4 puta kickovani ste!", IncorrectPassword[playerid]);
		    PlayerTimer[playerid] = SetTimerEx("KonektKick", 1000, false, "d", playerid);
		}
	}
}

forward OnQuestsLoad(playerid);
public OnQuestsLoad(playerid)
{
    new rows;
    cache_get_row_count(rows);
    if(!rows) mysql_tqueryEx(SQL, "INSERT INTO `quests` (Ime) VALUES('%s')", ReturnPlayerName(playerid));
    else
    {
        for(new i = 0; i < MAX_ZADATAKA; i++)
        {
            new columnname[15];
            format(columnname, sizeof(columnname),"quest_done%d",i);
            cache_get_value_name_int(0,columnname,QuestInfo[playerid][quest_done][i]);
        }
    }
    return 1;
}

forward CheckQuestDone2(playerid, broj);
public CheckQuestDone2(playerid, broj)
{
    new rows;
    cache_get_row_count(rows);
    if(!rows) mysql_tqueryEx(SQL, "INSERT INTO `quests` (Ime) VALUES('%s')", ReturnPlayerName(playerid));
    mysql_tqueryEx(SQL, "UPDATE `quests` SET `quest_done%d` = '1' WHERE `Ime` = '%s' LIMIT 1", broj-1, ReturnPlayerName(playerid));
    switch(broj)
    {
        case 1:
        {
            if(!QuestInfo[playerid][quest_done][0])
            {
                QuestInfo[playerid][quest_done][0] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+2.000$", 7000, 0);
                GivePlayerMoney(playerid, 2000);
                PI[playerid][Novac] += 2000;
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
            }
        }
        case 2:
        {
            if(!QuestInfo[playerid][quest_done][1])
            {
                QuestInfo[playerid][quest_done][1] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+1 respect", 7000, 0);

                new iskustvo = 0;
                iskustvo = (PI[playerid][Level] * 2) + 2;
                PI[playerid][Respekti]++;
                if(PI[playerid][Respekti] >= iskustvo)
                {
                    PI[playerid][Level]++;
                    SetPlayerScore(playerid, PI[playerid][Level]);
                    PI[playerid][Respekti] = 0;
                    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo, postali ste LEVEL %d!", PI[playerid][Level]);
                }
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Level` = '%d', `Respekti` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Level], PI[playerid][Respekti], PI[playerid][SQLID]);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
            }
        }
        case 3:
        {
            if(!QuestInfo[playerid][quest_done][2])
            {
                QuestInfo[playerid][quest_done][2] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+1.500$", 7000, 0);
                GivePlayerMoney(playerid, 1500);
                PI[playerid][Novac] += 1500;
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
            }
        }
        case 4:
        {
            if(!QuestInfo[playerid][quest_done][3])
            {
                QuestInfo[playerid][quest_done][3] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+1 level", 7000, 0);
                PI[playerid][Level] ++;
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Level` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Level], PI[playerid][SQLID]);
            }
        }
        case 5:
        {
            if(!QuestInfo[playerid][quest_done][4])
            {
                QuestInfo[playerid][quest_done][4] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+1g zlata", 7000, 0);
                PI[playerid][Zlato] += 1;
                UpdateZlato(playerid);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Zlato` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
            }
        }
        case 6:
        {
            if(!QuestInfo[playerid][quest_done][5])
            {
                QuestInfo[playerid][quest_done][5] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+1.000$", 7000, 0);
                GivePlayerMoney(playerid, 1000);
                PI[playerid][Novac] += 1000;
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
            }
        }
        case 7:
        {
            if(!QuestInfo[playerid][quest_done][6])
            {
                QuestInfo[playerid][quest_done][6] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+2 respekta", 7000, 0);
                new iskustvo = 0;
                iskustvo = (PI[playerid][Level] * 2) + 2;
                PI[playerid][Respekti]+= 2;
                if(PI[playerid][Respekti] >= iskustvo)
                {
                    PI[playerid][Level]++;
                    SetPlayerScore(playerid, PI[playerid][Level]);
                    PI[playerid][Respekti] = 0;
                    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo, postali ste LEVEL %d!", PI[playerid][Level]);
                }
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Level` = '%d', `Respekti` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Level], PI[playerid][Respekti], PI[playerid][SQLID]);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
            }
        }
        case 8:
        {
            if(!QuestInfo[playerid][quest_done][7])
            {
                QuestInfo[playerid][quest_done][7] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+4g zlata", 7000, 0);
                PI[playerid][Zlato] += 4;
                UpdateZlato(playerid);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Zlato` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Zlato], PI[playerid][SQLID]);
            }
        }
        case 9:
        {
            if(!QuestInfo[playerid][quest_done][8])
            {
                QuestInfo[playerid][quest_done][8] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+1.200$", 7000, 0);
                GivePlayerMoney(playerid, 1200);
                PI[playerid][Novac] += 1200;
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
            }
        }
        case 10:
        {
            if(!QuestInfo[playerid][quest_done][9])
            {
                QuestInfo[playerid][quest_done][9] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+6g zlata", 7000, 0);
                PI[playerid][Zlato] += 6;
                UpdateZlato(playerid);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Zlato` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Zlato], PI[playerid][SQLID]);
            }
        }
        case 11:
        {
            if(!QuestInfo[playerid][quest_done][10])
            {
                QuestInfo[playerid][quest_done][10] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+1 respekt", 7000, 0);
                new iskustvo = 0;
                iskustvo = (PI[playerid][Level] * 2) + 2;
                PI[playerid][Respekti]++;
                if(PI[playerid][Respekti] >= iskustvo)
                {
                    PI[playerid][Level]++;
                    SetPlayerScore(playerid, PI[playerid][Level]);
                    PI[playerid][Respekti] = 0;
                    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo, postali ste LEVEL %d!", PI[playerid][Level]);
                }
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Level` = '%d', `Respekti` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Level], PI[playerid][Respekti], PI[playerid][SQLID]);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
            }
        }
        case 12:
        {
            if(!QuestInfo[playerid][quest_done][11])
            {
                QuestInfo[playerid][quest_done][11] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+1.600$", 7000, 0);
                GivePlayerMoney(playerid, 1600);
                PI[playerid][Novac] += 1600;
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
            }
        }
        case 13:
        {
            if(!QuestInfo[playerid][quest_done][12])
            {
                QuestInfo[playerid][quest_done][12] = true;
                new iskustvo = 0;
                iskustvo = (PI[playerid][Level] * 2) + 2;
                PI[playerid][Respekti] += 3;
                if(PI[playerid][Respekti] >= iskustvo)
                {
                    PI[playerid][Level]++;
                    SetPlayerScore(playerid, PI[playerid][Level]);
                    PI[playerid][Respekti] = 0;
                    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo, postali ste LEVEL %d!", PI[playerid][Level]);
                }
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+3 respekta", 7000, 0);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Level` = '%d', `Respekti` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Level], PI[playerid][Respekti], PI[playerid][SQLID]);
            }
        }
        case 14:
        {
            if(!QuestInfo[playerid][quest_done][13])
            {
                QuestInfo[playerid][quest_done][13] = true;
                new iskustvo = 0;
                iskustvo = (PI[playerid][Level] * 2) + 2;
                PI[playerid][Respekti] += 2;
                if(PI[playerid][Respekti] >= iskustvo)
                {
                    PI[playerid][Level]++;
                    SetPlayerScore(playerid, PI[playerid][Level]);
                    PI[playerid][Respekti] = 0;
                    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo, postali ste LEVEL %d!", PI[playerid][Level]);
                }
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+2 respekta", 7000, 0);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Level` = '%d', `Respekti` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Level], PI[playerid][Respekti], PI[playerid][SQLID]);
            }
        }
        case 15:
        {
            if(!QuestInfo[playerid][quest_done][14])
            {
                QuestInfo[playerid][quest_done][14] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+1 level", 7000, 0);
                PI[playerid][Level] ++;
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Level` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Level], PI[playerid][SQLID]);
            }
        }
        case 16:
        {
            if(!QuestInfo[playerid][quest_done][15])
            {
                QuestInfo[playerid][quest_done][15] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+1.400$", 7000, 0);
                GivePlayerMoney(playerid, 1400);
                PI[playerid][Novac] += 1400;
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
            }
        }
        case 17:
        {
            if(!QuestInfo[playerid][quest_done][16])
            {
                QuestInfo[playerid][quest_done][16] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+30.000$", 7000, 0);
                GivePlayerMoney(playerid, 30000);
                PI[playerid][Novac] += 30000;
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
            }
        }
        case 18:
        {
            if(!QuestInfo[playerid][quest_done][17])
            {
                QuestInfo[playerid][quest_done][17] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+50.000$", 7000, 0);
                GivePlayerMoney(playerid, 50000);
                PI[playerid][Novac] += 50000;
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
            }
        }
        case 19:
        {
            if(!QuestInfo[playerid][quest_done][18])
            {
                QuestInfo[playerid][quest_done][18] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+100.000$", 7000, 0);
                GivePlayerMoney(playerid, 100000);
                PI[playerid][Novac] += 100000;
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
            }
        }
        case 20:
        {
            if(!QuestInfo[playerid][quest_done][19])
            {
                QuestInfo[playerid][quest_done][19] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+2g zlata", 7000, 0);
                PI[playerid][Zlato] += 2;
                UpdateZlato(playerid);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Zlato` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
            }
        }
        case 21:
        {
            if(!QuestInfo[playerid][quest_done][20])
            {
                QuestInfo[playerid][quest_done][20] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+3.000$", 7000, 0);
                GivePlayerMoney(playerid, 3000);
                PI[playerid][Novac] += 3000;
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
            }
        }
        case 22:
        {
            if(!QuestInfo[playerid][quest_done][21])
            {
                QuestInfo[playerid][quest_done][21] = true;
                new iskustvo = 0;
                iskustvo = (PI[playerid][Level] * 2) + 2;
                PI[playerid][Respekti] += 1;
                if(PI[playerid][Respekti] >= iskustvo)
                {
                    PI[playerid][Level]++;
                    SetPlayerScore(playerid, PI[playerid][Level]);
                    PI[playerid][Respekti] = 0;
                    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo, postali ste LEVEL %d!", PI[playerid][Level]);
                }
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+1 respekt", 7000, 0);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Level` = '%d', `Respekti` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Level], PI[playerid][Respekti], PI[playerid][SQLID]);
            }
        }
        case 23:
        {
            if(!QuestInfo[playerid][quest_done][22])
            {
                QuestInfo[playerid][quest_done][22] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+2.200$", 7000, 0);
                GivePlayerMoney(playerid, 2200);
                PI[playerid][Novac] += 2200;
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
            }
        }
        case 24:
        {
            if(!QuestInfo[playerid][quest_done][23])
            {
                QuestInfo[playerid][quest_done][23] = true;
                GameTextForPlayer(playerid, "~y~Zadatak zavrsen~n~~w~+1g zlata", 7000, 0);
                PI[playerid][Zlato] += 1;
                UpdateZlato(playerid);
                PlayerPlaySound(playerid, 1183, 0.0, 0.0, 10.0);
                SetTimerEx("IskljciSound", 5000, false, "d", playerid);
                mysql_tqueryEx(SQL, "UPDATE `users` SET `Zlato` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Zlato], PI[playerid][SQLID]);
            }
        }
	}
	return 1;
}

forward IskljciSound(playerid);
public IskljciSound(playerid)
{
    PlayerPlaySound(playerid, 1184, 0.0, 0.0, 0.0);
    return 1;
}

forward KreirajRadarTD(playerid);
public KreirajRadarTD(playerid)
{
	Radar_PTD[playerid] = PlayerText:INVALID_TEXT_DRAW;
	Radar_PTD[playerid] = CreatePlayerTextDraw(playerid,680.000000, 0.000000, "_");
	PlayerTextDrawBackgroundColor(playerid,Radar_PTD[playerid], 255);
	PlayerTextDrawFont(playerid,Radar_PTD[playerid], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid,Radar_PTD[playerid], 0.500000, 53.099998);
	PlayerTextDrawColor(playerid,Radar_PTD[playerid], -1);
	PlayerTextDrawSetOutline(playerid,Radar_PTD[playerid], 0);
	PlayerTextDrawSetProportional(playerid,Radar_PTD[playerid], 1);
	PlayerTextDrawSetShadow(playerid,Radar_PTD[playerid], 1);
	PlayerTextDrawUseBox(playerid,Radar_PTD[playerid], 1);
	PlayerTextDrawBoxColor(playerid,Radar_PTD[playerid], -176);
	PlayerTextDrawTextSize(playerid,Radar_PTD[playerid], -13.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid,Radar_PTD[playerid], 0);

	PlayerTextDrawShow(playerid, Radar_PTD[playerid]);

	Ima_Radar_TD[playerid] = 1;
	KillTimer(Radar_Timer[playerid]);
	Radar_Timer[playerid] = SetTimerEx("BlicRadarTD1", 200, false, "i", playerid);
	return 1;
}

forward BlicRadarTD1(playerid);
public BlicRadarTD1(playerid)
{
	if(Ima_Radar_TD[playerid] == 1)
	{
	    KillTimer(Radar_Timer[playerid]);
	    PlayerTextDrawHide(playerid, Radar_PTD[playerid]);
    	Radar_Timer[playerid] = SetTimerEx("BlicRadarTD2", 300, false, "i", playerid);
    }
	return 1;
}

forward BlicRadarTD2(playerid);
public BlicRadarTD2(playerid)
{
	if(Ima_Radar_TD[playerid] == 1)
	{
	    KillTimer(Radar_Timer[playerid]);
	    PlayerTextDrawHide(playerid, Radar_PTD[playerid]);
	    PlayerTextDrawShow(playerid, Radar_PTD[playerid]);
    	Radar_Timer[playerid] = SetTimerEx("UnistiRadarTD", 200, false, "i", playerid);
    }
	return 1;
}

forward UnistiRadarTD(playerid);
public UnistiRadarTD(playerid)
{
    Ima_Radar_TD[playerid] = 0;
    KillTimer(Radar_Timer[playerid]);
	if(Radar_PTD[playerid] != PlayerText:INVALID_TEXT_DRAW)
	{
    	PlayerTextDrawDestroy(playerid, Radar_PTD[playerid]);
    	Radar_PTD[playerid] = PlayerText:INVALID_TEXT_DRAW;
    }
    return 1;
}

forward PlayerRegistered(const playerid);
public PlayerRegistered(const playerid)
{
	PI[playerid][SQLID] = cache_insert_id();
	SetPlayerSkin(playerid, PI[playerid][Skin]);
	ClearChat(playerid, 30);
	PI[playerid][Level] = 1;
	SetPlayerScore(playerid, PI[playerid][Level]);
	PI[playerid][Novac] = 20000;
 	GivePlayerMoney(playerid, PI[playerid][Novac]);
 	PI[playerid][Vozilo1] = -1;
 	PI[playerid][Vozilo2] = -1;
 	PI[playerid][Vozilo3] = -1;
 	PI[playerid][TDBoja] = 997448959;
	Ulogovan[playerid] = 1;
	TogglePlayerSpectating(playerid, false);
	TogglePlayerControllable(playerid, true);
	UnistiTDs(playerid);
	KreirajTDs(playerid);
	va_SendClientMessage(playerid, 0x1b71bcFF, "VIBE: {FFFFFF}Dobrodosli %s u Los Santos", ReturnPlayerName(playerid));
	SendClientMessage(playerid, 0x1b71bcFF, "> {FFFFFF}Ukoliko nemate prevoz iznajmite rent ili pozovite taksi /call 444.");
	SendClientMessage(playerid, 0x1b71bcFF, "> {FFFFFF}Ukoliko vam je potrebna pomoc obratite se Staff Timu /askq ili report.");
	new str[256];
	format(str, sizeof(str), "{1b71bc}#Novi Igrac: {FFFFFF}Igrac %s (ID: %d), se upravo registrovao na server.", ReturnPlayerName(playerid), playerid);
	AdminMessage(-1, str);
	SpawnIgraca(playerid);
	SpawnPlayer(playerid);
	new godina, mesec, dan, sat, minut, str2[30];
	gettime(sat, minut);
	getdate(godina, mesec, dan);
	format(str2, sizeof(str2), "%02d/%02d/%02d - %02d:%02d", dan, mesec, godina, sat, minut);
	strmid(PI[playerid][LastLogin], str2, 0, strlen(str2), 30);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `isonline` = '1', `LastLogin` = '%s' WHERE `SQLID` = '%d'", PI[playerid][LastLogin], PI[playerid][SQLID]);
	return 1;
}

forward LottoIzvlacenje(broj);
public LottoIzvlacenje(broj) 
{
	if(broj == 1) 
	{
		SetTimerEx("LottoIzvlacenje", 3000, false, "d", 2);
	}
	else if(broj == 2) 
	{
		new IzvucenBroj = randomExx(1, 100 );
		new OsvojioNagradu = (40000+random(50000));
		new ImaNagrade = 0, Dobitnik;
		va_SendClientMessageToAll(0x1b71bcFF, "LUTRIJA: {FFFFFF}Izvlacenje kombinacija zavrseno izvuceni broj je: {1b71bc}%d.", IzvucenBroj);

		foreach(new i : Player) 
		{
	       	if(PI[i][LottoBroj] == IzvucenBroj) 
	       	{
	           	PI[i][LottoNovac] += OsvojioNagradu;
				mysql_tqueryEx(SQL, "UPDATE `users` SET `LottoNovac` = '%d' WHERE `SQLID` = '%d'", PI[i][LottoNovac], PI[i][SQLID]);
	           	ImaNagrade = 1;
	           	Dobitnik = i;
	       	}
	       	if(ImaNagrade == 1) 
	       	{
			    va_SendClientMessageToAll(0x1b71bcFF, "POBEDNIK: {FFFFFF}%s je dobitnik ovog izvlacenja nagrada iznosi : {1b71bc}%d$.", ReturnPlayerName(Dobitnik), OsvojioNagradu);
			}
			PI[i][LottoBroj] = 0;
			mysql_tqueryEx(SQL, "UPDATE `users` SET `LottoBroj` = '%d' WHERE `SQLID` = '%d'", PI[i][LottoBroj], PI[i][SQLID]);		
		}
		if(ImaNagrade == 0) 
		{
		    va_SendClientMessageToAll(0x1b71bcFF, "LUTRIJA: {FFFFFF}Nazalost nema dobitnika.");
		}
	}
	return 1;
}

forward StartMatematika();
public StartMatematika()
{
	if(!matka)
	{
		switch(random(7))
		{
		    case 0:
			{
				dobitak = (ranbroj[0]=random(1000)+1) + (ranbroj[1]=random(840)+1);
				va_SendClientMessageToAll(0x5fe91cFF, "[MATEMATIKA]: {FFFFFF}Novi zadatak iz matematike: {5fe91c}%d{FFFFFF} + {5fe91c}%d{FFFFFF} = ?", ranbroj[0], ranbroj[1]);
				matka = true;
			}

			case 1:
			{
				do
			    {
			    	dobitak = (ranbroj[0]=random(500)+1) - (ranbroj[1]=random(500)+1);
			    }
			    while(ranbroj[0] < ranbroj[1]);
				va_SendClientMessageToAll(0x5fe91cFF, "[MATEMATIKA]: {FFFFFF}Novi zadatak iz matematike: {5fe91c}%d{FFFFFF} - {5fe91c}%d{FFFFFF} = ?", ranbroj[0], ranbroj[1]);
				matka = true;
			}

			case 2:
			{
				dobitak = (ranbroj[0]=random(100)+1) * (ranbroj[1]=random(80)+1);
				va_SendClientMessageToAll(0x5fe91cFF, "[MATEMATIKA]: {FFFFFF}Novi zadatak iz matematike: {5fe91c}%d{FFFFFF} * {5fe91c}%d{FFFFFF} = ?", ranbroj[0], ranbroj[1]);
				matka = true;
			}

			case 3:
			{
				do
			    {
			    	dobitak = (ranbroj[0]=random(1000)+1) / (ranbroj[1]=random(600)+1);
			    }
			    while(ranbroj[0] % ranbroj[1]);
			    va_SendClientMessageToAll(0x5fe91cFF, "[MATEMATIKA]: {FFFFFF}Novi zadatak iz matematike: {5fe91c}%d{FFFFFF} / {5fe91c}%d{FFFFFF} = ?", ranbroj[0], ranbroj[1]);
			    matka = true;
			}

			case 4:
			{
  				dobitak = (ranbroj[0]=random(10)+1) * ranbroj[0];
			    va_SendClientMessageToAll(0x5fe91cFF, "[MATEMATIKA]: {FFFFFF}Novi zadatak iz matematike: Kvadrat od {5fe91c}%d{FFFFFF} = ?", ranbroj[0]);
			    matka = true;
			}

			case 5:
			{
  				dobitak = (ranbroj[0]=random(10)+1) * ranbroj[0] * ranbroj[0];
			    va_SendClientMessageToAll(0x5fe91cFF, "[MATEMATIKA]: {FFFFFF}Novi zadatak iz matematike: kub na treci {5fe91c}%d{FFFFFF} = ?", ranbroj[0]);
			    matka = true;
			}

			case 6:
			{
			    new rand = random(sizeof(Korijeni));
 				dobitak = Korijeni[rand][1];
			    va_SendClientMessageToAll(0x5fe91cFF, "[MATEMATIKA]: {FFFFFF}Novi zadatak iz matematike: Koren iz {5fe91c}%d{FFFFFF} = ?", Korijeni[rand][0]);
			    matka = true;
			}
		}
	}
	else
	{
	    matka = false;
		va_SendClientMessageToAll(0x5fe91cFF, "[MATEMATIKA]: {FFFFFF}Niko nije resio test iz matematike. UCITE MATEMATIKU! {5fe91c}(rezultat: {FFFFFF}%d{5fe91c})", dobitak);
	}
	return 1;
}

forward CheckPlayerUnBan(playerid, const imeigraca[]);
public CheckPlayerUnBan(playerid, const imeigraca[])
{
    new rows;
    cache_get_row_count(rows);
	if(!rows)
	{
        va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije banovan!");
    }
    else
	{
	    new user_id;
		cache_get_value_name_int(0, "SQLID", user_id);

		new q[100];
		mysql_format(SQL, q, sizeof(q), "UPDATE `users` SET `Banovan` = '0', `BRazlog` = 'Prazno' WHERE `SQLID` = '%d'", user_id);
		mysql_tquery(SQL, q);

		new str[200];
		format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je unbanovao igraca %s", ReturnPlayerName(playerid), imeigraca);
		AdminMessage(-1, str);
		
		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Unbanovali ste igraca %s.", imeigraca);
    }
	return 1;
}

forward CheckPlayerLeader(playerid, const imeigraca[]);
public CheckPlayerLeader(playerid, const imeigraca[])
{
    new rows;
    cache_get_row_count(rows);
	if(!rows)
	{
        va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac nije lider!");
    }
    else
	{
	    new user_id;
		cache_get_value_name_int(0, "SQLID", user_id);

		mysql_tqueryEx(SQL, "UPDATE `users` SET `Skin` = '240', `Lider` = '0', `Clan` = '0', `Rank` = '0' WHERE `SQLID` = '%d'", user_id);

		new str[256];
		format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je skinuo lidera igracu %s (OFFLINE}!", ReturnPlayerName(playerid), imeigraca);
		AdminMessage(-1, str);

		va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Skinuli ste lidera igracu %s (OFFLINE)!", imeigraca);
    }
	return 1;
}

forward CheckPlayerDelete(playerid, const acc[]);
public CheckPlayerDelete(playerid, const acc[])
{
    new rows;
    cache_get_row_count(rows);
	if(!rows)
	{
        va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj igrac ne postoji u bazi podataka!");
    }
    else
	{
		mysql_tqueryEx(SQL, "DELETE FROM `quests` WHERE `Ime` = '%s'", acc);
	    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Obrisali ste nalog igracu %s.", acc);
	    new str[200];
		format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je obrisao nalog igracu %s", ReturnPlayerName(playerid), acc);
		AdminMessage(-1, str);
    }
    return 1;
}

forward RekordTimer();
public RekordTimer()
{
	new string1[10];
	format(string1, 10, "%d", NumberOfConnectedPlayers());
	TextDrawSetString(InGameTD[10], string1);
	new string[10];
	format(string, sizeof(string), "%d",ServerInfo[sRekord]);
	TextDrawSetString(InGameTD[20], string);
	if(NumberOfConnectedPlayers( ) > ServerInfo[sRekord])
	{
		format(string, sizeof(string), "%d",ServerInfo[sRekord]);
		TextDrawSetString(InGameTD[20], string);
	}
	return 1;
}

forward Respawn();
public Respawn()
{
	new bool:PraznoVozilo[MAX_VEHICLES];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerInAnyVehicle(i)) { PraznoVozilo[GetPlayerVehicleID(i)] = true; }
	}
	for(new vozilo = 1; vozilo < MAX_VEHICLES; vozilo++)
	{
		if(!PraznoVozilo[vozilo]) SetVehicleToRespawn(vozilo);
	}
	RespawnVozila = 0; 
	va_SendClientMessageToAll(0xFF0000FF, "#RESPAWN: {FFFFFF}Respawn vozila zavrsen!");
	return 1;
}

forward ZalediOdledi(playerid);
public ZalediOdledi(playerid)
{
    if(Ulogovan[playerid] == 0) return KillTimer(PlayerTimer[playerid]);
    if(StavljeneLisice[playerid] == 0) { TogglePlayerControllable(playerid, 1); }
	if(StavljeneLisice[playerid] == 1) { TogglePlayerControllable(playerid, 0); }
   	KillTimer(PlayerTimer[playerid]);
   	TogglePlayerControllable(playerid, 1);
    return 1;
}

forward ZauzimanjeTeritorije(playerid);
public ZauzimanjeTeritorije(playerid)
{
	new string[250];
	if(IsPlayerInDynamicArea(playerid, TeritorijeInfo[Zauzimanje_ID[playerid]][t_RectAngle])) //IGRAC U TERITORIJI
	{
 		if(Zauzimanje_Time[playerid] > 0)
		{
	        format(string, sizeof(string), "~w~ZAUZIMATE TERITORIJU~n~ ~w~JOS ~r~%s", KonvertujVreme(Zauzimanje_Time[playerid]));
	        GameTextForPlayer(playerid, string, 1000, 4);
	        Zauzimanje_Time[playerid] --;
	    }
	    else if(Zauzimanje_Time[playerid] == 0)
		{
	        GangZoneStopFlashForAll(TeritorijeInfo[Zauzimanje_ID[playerid]][t_ID]);
	        GangZoneHideForAll(TeritorijeInfo[Zauzimanje_ID[playerid]][t_ID]);
	        Zauzimanje_Time[playerid] = 0;
	        KillTimer(Zauzimanje_Timer[playerid]);
			OrgPoruka(PI[playerid][Clan], 0x1fdea7FF, "#TERITORIJA: {FFFFFF}Vasa organizacija je uspjela zauzeti novu teritoriju!");
	        if(TeritorijeInfo[Zauzimanje_ID[playerid]][t_Org_ID] != -1)
			{
				format(string, sizeof(string), "#TERITORIJA: {FFFFFF}Clan Vase organizacije %s je zauzeo novu teritoriju koja je bila u posjedu Vase konkurencije!", ReturnPlayerName(playerid));
		    	OrgPoruka(PI[playerid][Clan], 0x1fdea7FF, string);

				format(string, sizeof(string), "#TERITORIJA: {FFFFFF}Protivnicka banda/mafija '%s' je uspjela zauzeti jednu od Vasih teritorija!", OrgInfo[PI[playerid][Clan]][oIme]);
		    	OrgPoruka(TeritorijeInfo[Zauzimanje_ID[playerid]][t_Org_ID], 0x1fdea7FF, string);
			}
			else if(TeritorijeInfo[Zauzimanje_ID[playerid]][t_Org_ID] == -1)
			{
				format(string, sizeof(string), "#TERITORIJA: {FFFFFF}Clan Vase organizacije %s je zauzeo novu teritoriju koja je bila slobodna!", ReturnPlayerName(playerid));
		    	OrgPoruka(PI[playerid][Clan], 0x1fdea7FF, string);
			}
			TeritorijeInfo[Zauzimanje_ID[playerid]][t_Org_ID] = PI[playerid][Clan];
			TeritorijeInfo[Zauzimanje_ID[playerid]][t_Zauzeta] = 1;
			new t_string[25], d_string[20], boja[15];
			new dan, mjesec, godina; getdate(godina, mjesec, dan);
			if(PI[playerid][Clan] == 3) boja = "068728"; //GSF
			else if(PI[playerid][Clan] == 4) boja = "6D54A9"; //BALLAS
			else if(PI[playerid][Clan] == 5) boja = "DABB3E"; //MS13
			else if(PI[playerid][Clan] == 6) boja = "FF0000"; //BDT
			else if(PI[playerid][Clan] == 7) boja = "656463"; //LCN
			format(t_string, sizeof(t_string), "%s", boja);
			format(d_string, sizeof(d_string), "%02d.%02d.%02d", dan, mjesec, godina);
            strmid(TeritorijeInfo[Zauzimanje_ID[playerid]][t_Boja], t_string, 0, strlen(t_string), 255);
            strmid(TeritorijeInfo[Zauzimanje_ID[playerid]][t_Datum], d_string, 0, strlen(d_string), 255);
            if(PI[playerid][Clan] == 3) { GangZoneShowForAll(TeritorijeInfo[Zauzimanje_ID[playerid]][t_ID], 0x068728AA); } //GSF
			else if(PI[playerid][Clan] == 4) { GangZoneShowForAll(TeritorijeInfo[Zauzimanje_ID[playerid]][t_ID], 0x6D54A9AA); } //BALLAS
			else if(PI[playerid][Clan] == 5) { GangZoneShowForAll(TeritorijeInfo[Zauzimanje_ID[playerid]][t_ID], 0xDABB3EAA); } //MS13
			else if(PI[playerid][Clan] == 6) { GangZoneShowForAll(TeritorijeInfo[Zauzimanje_ID[playerid]][t_ID], 0xFF000000); } //BDT
			else if(PI[playerid][Clan] == 7) { GangZoneShowForAll(TeritorijeInfo[Zauzimanje_ID[playerid]][t_ID], 0x656463AA); } //LCN
            else
            {
				format(t_string, sizeof(t_string), "0x%sAA", TeritorijeInfo[Zauzimanje_ID[playerid]][t_Boja]);
            	GangZoneShowForAll(TeritorijeInfo[Zauzimanje_ID[playerid]][t_ID], HexToInt(t_string));
			}
			Update_Teritoriju(Zauzimanje_ID[playerid]);
			TeritorijeInfo[Zauzimanje_ID[playerid]][t_Time] = 30;
			
			mysql_tqueryEx(SQL, "UPDATE `zones` SET `Zauzeta` = '%d', `Org_ID` = '%d', `Time` = '%d', `Datum` = '%s', `Boja` = '%d'  WHERE `SQLID` = '%d'", 
				TeritorijeInfo[Zauzimanje_ID[playerid]][t_Zauzeta], TeritorijeInfo[Zauzimanje_ID[playerid]][t_Org_ID], TeritorijeInfo[Zauzimanje_ID[playerid]][t_Time], 
				TeritorijeInfo[Zauzimanje_ID[playerid]][t_Datum], TeritorijeInfo[Zauzimanje_ID[playerid]][t_Boja], TeritorijeInfo[Zauzimanje_ID[playerid]][SQLID]);
            
			Zauzimanje_ID[playerid] = -1;
	        if(Zauzimanje_CP[playerid] != 0)
	        {
		    	Zauzimanje_CP[playerid] = 0;
		    	DisablePlayerCheckpoint(playerid);
			}
			Trazeni_Level[playerid] += 5;
			PostaviWanted(playerid, "Zauzimanje teritorije", "Nepoznat");
		}
	}
	else
	{
        GameTextForPlayer(playerid, "~w~NAPUSTILI STE~n~ ~r~TERITORIJU!", 1000, 4);
        GangZoneStopFlashForAll(TeritorijeInfo[Zauzimanje_ID[playerid]][t_ID]);
	    Zauzimanje_Time[playerid] = 0;
	    KillTimer(Zauzimanje_Timer[playerid]);
		Trazeni_Level[playerid] += 5;
		PostaviWanted(playerid, "Zauzimanje teritorije", "Nepoznat");
        if(TeritorijeInfo[Zauzimanje_ID[playerid]][t_Org_ID] != -1)
		{
			format(string, sizeof(string), "#TERITORIJA: {FFFFFF}Protivnicka banda/mafija '%s' je prestala zauzimati Vasu teritoriju!", OrgInfo[PI[playerid][Clan]][oIme]);
	    	OrgPoruka(TeritorijeInfo[Zauzimanje_ID[playerid]][t_Org_ID], 0x1fdea7FF, string);
		}
		format(string, sizeof(string), "#TERITORIJA: {FFFFFF}Clan Vase organizacije %s je izasao van teriorije (zauzimanje prekinuto)!", ReturnPlayerName(playerid));
    	OrgPoruka(PI[playerid][Clan], 0x1fdea7FF, string);
        TeritorijeInfo[Zauzimanje_ID[playerid]][t_Time] = 30; //30 min
        mysql_tqueryEx(SQL, "UPDATE `zones` SET `Time` = '%d'  WHERE `SQLID` = '%d'", TeritorijeInfo[Zauzimanje_ID[playerid]][t_Time], TeritorijeInfo[Zauzimanje_ID[playerid]][SQLID]);
        Zauzimanje_ID[playerid] = -1;
        if(Zauzimanje_CP[playerid] != 0)
        {
	    	Zauzimanje_CP[playerid] = 0;
	    	DisablePlayerCheckpoint(playerid);
		}
	}
	return 1;
}

forward Zauzimanje_CP_Ukloni(playerid);
public Zauzimanje_CP_Ukloni(playerid)
{
	if(Zauzimanje_CP[playerid] != 0)
	{
		Zauzimanje_CP[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	return 1;
}

forward DrogaEfekat(playerid);
public DrogaEfekat(playerid)
{
	SetPlayerWeather(playerid, 10); ClearAnimations(playerid); KoristiDrogu[playerid] = 0;
	GameTextForPlayer(playerid,"~w~Efekat droge prosao...", 5000, 3);
  	return 1;
}

forward UkloniPoj(id);
public UkloniPoj(id)
{
	BojaIgraca(id);
	return 1;
}

forward UberTimer(playerid, broj);
public UberTimer(playerid, broj)
{
	switch(broj)
	{
		case 1:
		{
            TogglePlayerControllable(playerid, 1);
		    PosaoUberCP[playerid] = 2;
		    new rand = random(sizeof(uberPutnikHomePos));
		    SetPlayerCheckpoint(playerid, uberPutnikHomePos[rand][0], uberPutnikHomePos[rand][1], uberPutnikHomePos[rand][2], 3.0);
		    DestroyActor(uberActor[playerid]);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Putnik je usao u uber, odvezite ga na odredenu lokaciju.");
		}
		case 2:
		{
  			TogglePlayerControllable(playerid, 1);
		    PosaoUberCP[playerid] = 3;
		    SetPlayerCheckpoint(playerid, 1777.3425, -1890.4097, 13.3874, 3.0);
			va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Putnik je izasao iz ubera, vratite se do baze da pokupite novac.");
		}
	}
	return 1;
}

forward Brojanje();
public Brojanje()
{
	if(!BrojanjeAktivirano)
	{
		KillTimer(BrojanjeTimer);
	}
	else
	{
		new string[32];
		format(string,sizeof(string),"~y~%i",BrojanjeVreme);
		GameTextForAll(string,1000,3);
		BrojanjeVreme--;
		if(BrojanjeVreme == -1)
		{
			BrojanjeAktivirano = 0, GameTextForAll("~g~Kreni!",1000,3);
		}
	}
	return 1;
}

forward UtovarTimer(playerid);
public UtovarTimer(playerid)
{
    GameTextForPlayer(playerid, "~y~nova lokacija postavljena...", 5000, 3);
    TogglePlayerControllable(playerid, 1);
    return 1;
}

forward TazovanTajmer(playerid);
public TazovanTajmer(playerid)
{
	if(IgracTazovan[playerid] == 1)
	{
		IgracTazovan[playerid] = 0;
		TogglePlayerControllable(playerid, 1);
		ClearAnimations(playerid);
	}
	return 1;
}

forward ZatvaranjeBDT();
public ZatvaranjeBDT()
{
	if(bdtkapijaoz != 0) { ZatvoriRK(5); }
	return 1;
}

forward ZatvaranjePDK();
public ZatvaranjePDK()
{
	if(ozpdkapija != 0) { ZatvoriRK(1); }
	return 1;
}

forward ZatvaranjeSAJ();
public ZatvaranjeSAJ()
{
	if(sajkapijaoz != 0) { ZatvoriRK(3); }
	return 1;
}

forward ZatvaranjeP();
public ZatvaranjeP()
{
	if(pijacakapijaoz != 0) { ZatvoriRK(4); }
	return 1;
}

forward ZatvaranjePDR();
public ZatvaranjePDR()
{
	if(ozpdrampa != 0) { ZatvoriRK(2); }
	return 1;
}

forward ZatvaranjePDVrata();
public ZatvaranjePDVrata()
{
	MoveDynamicObject(pdvrata, 4.44489, 1707.83472, -25.65040, 2.0);
	pdvrataoz = 0;
	return 1;
}

forward PljackaBTimer(playerid);
public PljackaBTimer(playerid)
{
	if(playerid == INVALID_PLAYER_ID)
	{
		KillTimer(PBSefTimer[playerid]); PljackaBanku[playerid] = 0; PljackaBankuVrijeme[playerid] = 0;
		va_SendClientMessageToAll(-1, "{FF0000}UDARNE VESTI | {FFFFFF}Pljacka Los Santos Banke je upravo sprecena!");
		vanrednostanje = 0;
		return 1;
	}
    if(!IsPlayerInRangeOfPoint(playerid, 3.0, 1391.4470,1.3144,1000.9153))
    {
		va_SendClientMessageToAll(-1, "{FF0000}UDARNE VESTI | {FFFFFF}Pljacka Los Santos Banke je upravo sprecena!");
        va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Udaljili ste se od sefa, pljacka banke je prekinuta!");
        KillTimer(PBSefTimer[playerid]); PljackaBanku[playerid] = 0; PljackaBankuVrijeme[playerid] = 0; vanrednostanje = 0;
        return 1;
    }
    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1391.4470,1.3144,1000.9153))
    {
		new str[128];
        if(PljackaBankuVrijeme[playerid] > 0)
        {
        	PljackaBankuVrijeme[playerid] --;
			format(str, sizeof(str), "~w~Sacekaj jos~n~~r~%d ~w~sekundi!", PljackaBankuVrijeme[playerid]);
			GameTextForPlayer(playerid, str, 3500, 3);
		}
		else if(PljackaBankuVrijeme[playerid] <= 0)
		{
		    new glavnica = random(10000)+30000;
			new pljackapare = glavnica;
			va_SendClientMessageToAll(-1, "{FF0000}UDARNE VESTI | {FFFFFF}Policija nije uspela da spreci pljackase Banka je uspesno opljackana!");
			va_SendClientMessageToAll(-1, "Pljackasima je upravo raspisana poternica!");
			PI[playerid][Novac] += pljackapare;
			GivePlayerMoney(playerid, pljackapare);
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
			format(str,128,"~w~Opljackao si~n~~g~$%d~w~!",pljackapare);
			GameTextForPlayer(playerid, str, 3500, 3);
			StopLoopingAnim(playerid);
			SetPlayerAttachedObject(playerid, 8, 1550, 1, -0.008714, -0.188819, -0.026564, 159.138153, 86.558647, 0.000000, 1.005565, 0.984468, 1.014210);
            KillTimer(PBSefTimer[playerid]); PljackaBankuVrijeme[playerid] = 0;	PljackaBanku[playerid] = 0; vanrednostanje = 0;
            TogglePlayerControllable(playerid, 1);
		}
    }
	return 1;
}

forward PljackaZTimer(playerid);
public PljackaZTimer(playerid)
{
	if(playerid == INVALID_PLAYER_ID)
	{
		KillTimer(PBSefTimer[playerid]); PljackaZlataru[playerid] = 0; PljackaZlataruVrijeme[playerid] = 0;
		va_SendClientMessageToAll(-1, "{FF0000}UDARNE VESTI | {FFFFFF}Pljacka Los Santos Zlatare je upravo sprecena!");
		vanrednostanje = 0;
		return 1;
	}
    if(!IsPlayerInRangeOfPoint(playerid, 3.0, 1012.1417,2319.8320,-19.7800))
    {
		va_SendClientMessageToAll(-1, "{FF0000}UDARNE VESTI | {FFFFFF}Pljacka Los Santos Zlatare je upravo sprecena!");
        va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Udaljili ste se od sefa, pljacka banke je prekinuta!");
        KillTimer(PBSefTimer[playerid]); PljackaZlataru[playerid] = 0; PljackaZlataruVrijeme[playerid] = 0; vanrednostanje = 0;
        return 1;
    }
    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1012.1417,2319.8320,-19.7800))
    {
		new str[128];
        if(PljackaZlataruVrijeme[playerid] > 0)
        {
        	PljackaZlataruVrijeme[playerid] --;
			format(str, sizeof(str), "~w~Sacekaj jos~n~~r~%d ~w~sekundi!", PljackaZlataruVrijeme[playerid]);
			GameTextForPlayer(playerid, str, 3500, 3);
		}
		else if(PljackaZlataruVrijeme[playerid] <= 0)
		{
		    new glavnica = random(300)+300;
			new pljackapare = glavnica;
			va_SendClientMessageToAll(-1, "{FF0000}UDARNE VESTI | {FFFFFF}Policija nije uspela da spreci pljackase Zlatara je uspesno opljackana!");
			va_SendClientMessageToAll(-1, "Pljackasima je upravo raspisana poternica!");
			PI[playerid][Zlato] += pljackapare;
			UpdateZlato(playerid);
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Zlato` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
			format(str,128,"~w~Opljackao si~n~~g~%dg ~w~zlata~w~!",pljackapare);
			GameTextForPlayer(playerid, str, 3500, 3);
			StopLoopingAnim(playerid);
            KillTimer(PBSefTimer[playerid]); PljackaZlataruVrijeme[playerid] = 0; PljackaZlataru[playerid] = 0; vanrednostanje = 0;
            TogglePlayerControllable(playerid, 1);
		}
    }
	return 1;
}

forward SaveComponent(vehicleid, componentid);
public SaveComponent(vehicleid, componentid)
{
	if(IsASpoiler(componentid)) VoziloInfo[vehicleid][vKomponenta1] = componentid;
	else if(IsANitro(componentid)) VoziloInfo[vehicleid][vKomponenta2] = componentid;
	else if(IsAFrontBumper(componentid)) VoziloInfo[vehicleid][vKomponenta3] = componentid;
	else if(IsARearBumper(componentid)) VoziloInfo[vehicleid][vKomponenta4] = componentid;
	else if(IsAStereo(componentid)) VoziloInfo[vehicleid][vKomponenta5] = componentid;
	else if(IsAExhaust(componentid)) VoziloInfo[vehicleid][vKomponenta6] = componentid;
	else if(IsALamp(componentid)) VoziloInfo[vehicleid][vKomponenta7] = componentid;
   	else if(IsAHydraulic(componentid)) VoziloInfo[vehicleid][vKomponenta8] = componentid;
    else if(IsAVents(componentid)) VoziloInfo[vehicleid][vKomponenta9] = componentid;
    else if(IsAHood(componentid)) VoziloInfo[vehicleid][vKomponenta10] = componentid;
	else if(IsAWheel(componentid)) VoziloInfo[vehicleid][vKomponenta11] = componentid;
	else if(IsARoof(componentid)) VoziloInfo[vehicleid][vKomponenta12] = componentid;
	else if(IsASkirt(componentid)) VoziloInfo[vehicleid][vKomponenta13] = componentid;

	mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Komponenta1` = '%d', `Komponenta2` = '%d', `Komponenta3` = '%d', `Komponenta4` = '%d', `Komponenta5` = '%d', `Komponenta6` = '%d', `Komponenta7` = '%d', `Komponenta8` = '%d', \
		`Komponenta9` = '%d', `Komponenta10` = '%d', `Komponenta11` = '%d', `Komponenta12` = '%d', `Komponenta13` = '%d' WHERE `SQLID` = '%d'",
		VoziloInfo[vehicleid][vKomponenta1], VoziloInfo[vehicleid][vKomponenta2], VoziloInfo[vehicleid][vKomponenta3], VoziloInfo[vehicleid][vKomponenta4], VoziloInfo[vehicleid][vKomponenta5], VoziloInfo[vehicleid][vKomponenta6],
		VoziloInfo[vehicleid][vKomponenta7], VoziloInfo[vehicleid][vKomponenta8], VoziloInfo[vehicleid][vKomponenta9], VoziloInfo[vehicleid][vKomponenta10], VoziloInfo[vehicleid][vKomponenta11], VoziloInfo[vehicleid][vKomponenta12],
		VoziloInfo[vehicleid][vKomponenta13], VoziloInfo[vehicleid][SQLID]);
	return 1;
}

forward CenaRazgovora(playerid);
public CenaRazgovora(playerid)
{
	if(PI[playerid][MobKredit] > 0)
	{
		PI[playerid][MobKredit]--;
		mysql_tqueryEx(SQL, "UPDATE `users` SET `MobKredit` = '%d' WHERE `SQLID` = '%d'", PI[playerid][MobKredit], PI[playerid][SQLID]);
	}
	else
	{
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(playerid, 4);
		SetPlayerSpecialAction(TelefonRazgovor[playerid], SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(TelefonRazgovor[playerid], 4);
		TelefonRazgovor[TelefonRazgovor[playerid]] = -1;
		TelefonRazgovor[playerid] = -1;
		KillTimer(MobilniCenaRazgovora[playerid]);
		return 1;
	}
	return 1;
}

forward CheckOdigraneTikete(playerid);
public CheckOdigraneTikete(playerid)
{
	new count;
 	cache_get_row_count(count);
  	if(count)
   	{
    	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Trenutno se ceka %d tiketa.",count);
    }
    else va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Trenutno se ne ceka ni jedan tiket.");
    return 1;
}

forward CheckTiket1(playerid);
public CheckTiket1(playerid)
{
    new rows;
    cache_get_row_count(rows);
    if(rows) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Vec ste odigrali tiket,ako zelite da ga bacite ukucajte /bacitiket!");
    kojautakmica[playerid] = 0;
    for( new i = 0; i < 15; i++ )
    {
        TiketInfo[playerid][i][ParID] = 0;
    }
    new query[ 256 ];
    format(query, sizeof( query ), "SELECT * FROM `matchs` WHERE Datum >= NOW() AND `Rezultat` = '0' LIMIT 0,15");
    mysql_tquery(SQL, query, "CheckTiket2", "ii", playerid,0);
    //BiltenTD(playerid,true);
    return 1;
}
forward CheckTiket2(playerid,forwhat);
public CheckTiket2(playerid,forwhat)
{
    new rows;
    cache_get_row_count(rows);
    if(!rows)
    {
    if(forwhat == 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Trenutno nema utakmica za igranje!");
    else return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Nema vise stranica!");
    }
    if(forwhat == 0) BiltenTD(playerid,true);
    else if(forwhat == 1) biltenstr[playerid]-=15;
    else if(forwhat == 2) biltenstr[playerid]+=15;
    for(new i = 0; i < 15; i++)
    {
        UtakmicaInfo[playerid][i][ParID] = 0;
        PlayerTextDrawSetString(playerid, biltendatum[playerid][i+1], " ");
        PlayerTextDrawSetString(playerid, biltenklub[playerid][i+1], " ");
        PlayerTextDrawSetString(playerid, biltenid[playerid][i+1], " ");
        PlayerTextDrawSetString(playerid, biltenkvota1[playerid][i+1], " ");
        PlayerTextDrawSetString(playerid, biltenkvotaX[playerid][i+1], " ");
        PlayerTextDrawSetString(playerid, biltenkvota2[playerid][i+1], " ");
        PlayerTextDrawSetString(playerid, biltenkvota3plus[playerid][i+1], " ");
        PlayerTextDrawSetString(playerid, biltenkvota4plus[playerid][i+1], " ");
        PlayerTextDrawSetString(playerid, biltenkvotagg[playerid][i+1], " ");
    }
    for(new i = 0; i < rows; i++)
    {
        new idutakmice,klub1[50],klub2[50],Float:kvota1, Float:kvota2, Float:kvota3, Float:kvota4, Float:kvota5, Float:kvota6, datum[50], rezultat = 0;
        cache_get_value_name_int(i, "SQLID", idutakmice);
        cache_get_value_name(i, "Klub1", klub1,50);
        cache_get_value_name(i, "Klub2", klub2,50);
        cache_get_value_name_float(i, "Kvota1", kvota1);
        cache_get_value_name_float(i, "Kvota2", kvota2);
        cache_get_value_name_float(i, "Kvota3", kvota3);
        cache_get_value_name_float(i, "Kvota3plus", kvota4);
        cache_get_value_name_float(i, "Kvota4plus", kvota5);
        cache_get_value_name_float(i, "KvotaGG", kvota6);
        cache_get_value_name(i, "Datum", datum,50);
        cache_get_value_name_int(i, "Rezultat", rezultat);
        if(rezultat != 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ta utakmica je zavrsena.");
        new klubvsklub[100];
        format(klubvsklub,sizeof(klubvsklub),"%s vs %s",klub1,klub2);

        UtakmicaInfo[playerid][i][ParID] = idutakmice;
        format(UtakmicaInfo[playerid][i][Par],200, "%s",klubvsklub);
        UtakmicaInfo[playerid][i][Kvota][0] = kvota1;
        UtakmicaInfo[playerid][i][Kvota][1] = kvota2;
        UtakmicaInfo[playerid][i][Kvota][2] = kvota3;
        UtakmicaInfo[playerid][i][Kvota][3] = kvota4;
        UtakmicaInfo[playerid][i][Kvota][4] = kvota5;
        UtakmicaInfo[playerid][i][Kvota][5] = kvota6;

        //format( jedanstr, sizeof( jedanstr ), ""server_boja"[%d] {FFFFFF}%s vs %s "server_zelena"Kvote:{FFFFFF}%0.2f %0.2f %0.2f "col_red"Vrijeme:{FFFFFF}%s\n", idutakmice,klub1,klub2,kvota1,kvota2,kvota3,datum);
        //strcat(dialogstring, jedanstr);
        if(i+1 <= 15)
        {
        PlayerTextDrawSetString(playerid, biltendatum[playerid][i+1], datum);
        //new klubvsklub[100];
        //format(klubvsklub,sizeof(klubvsklub),"%s_vs_%s",klub1,klub2);
        strreplace(klubvsklub, ' ', '_');
        PlayerTextDrawSetString(playerid, biltenklub[playerid][i+1], klubvsklub);
        new idutakmicestr[10];
        format(idutakmicestr,sizeof(idutakmicestr),"%d",idutakmice);
        PlayerTextDrawSetString(playerid, biltenid[playerid][i+1], idutakmicestr);
        new kvota1str[5];
        format(kvota1str,sizeof(kvota1str),"%0.2f",kvota1);
        PlayerTextDrawSetString(playerid, biltenkvota1[playerid][i+1], kvota1str);
        new kvotaxstr[5];
        format(kvotaxstr,sizeof(kvotaxstr),"%0.2f",kvota2);
        PlayerTextDrawSetString(playerid, biltenkvotaX[playerid][i+1], kvotaxstr);
        new kvota2str[5];
        format(kvota2str,sizeof(kvota2str),"%0.2f",kvota3);
        PlayerTextDrawSetString(playerid, biltenkvota2[playerid][i+1], kvota2str);
        new kvota3plusstr[5];
        if(kvota4 != 0) format(kvota3plusstr,sizeof(kvota3plusstr),"%0.2f",kvota4);
        else format(kvota3plusstr,sizeof(kvota3plusstr)," ");
        PlayerTextDrawSetString(playerid, biltenkvota3plus[playerid][i+1], kvota3plusstr);
        new kvota4plusstr[5];
        if(kvota5 != 0) format(kvota4plusstr,sizeof(kvota4plusstr),"%0.2f",kvota5);
        else format(kvota4plusstr,sizeof(kvota4plusstr)," ");
        PlayerTextDrawSetString(playerid, biltenkvota4plus[playerid][i+1], kvota4plusstr);
        new kvotaggtr[5];
        if(kvota6 != 0) format(kvotaggtr,sizeof(kvotaggtr),"%0.2f",kvota6);
        else format(kvotaggtr,sizeof(kvotaggtr)," ");
        PlayerTextDrawSetString(playerid, biltenkvotagg[playerid][i+1], kvotaggtr);
        }

    }
    //strcat(dialogstring, "\n\nUnesite ID utakmice i na sta igrate(1 X ili 2).\nPrimjer: 12 X");
    //Dialog_Show(playerid, DIALOG_SASTAVLJATIKET, DIALOG_STYLE_INPUT, "Sastavljanje tiketa",dialogstring,""server_boja"U redu",""col_red"Odustani");
    return 1;
}

forward CheckTiket5(playerid);
public CheckTiket5(playerid)
{
    new dialogstring[5000],jedanstr[200];
    new rows;
    cache_get_row_count(rows);
    if(!rows) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste odigrali tiket!");
    new ulozio = 0,Float:ukupnakvota = 1.0;
    cache_get_value_name_int(0, "Ulozio", ulozio);

    for( new i = 0; i < 15; i++ )
    {
        new par[15],parid[15],parrezultat[15],parkvota[15],parodigrao[15];
        format(par,sizeof(par),"Par%d",i+1);
        format(parid,sizeof(parid),"Par%dID",i+1);
        format(parodigrao,sizeof(parodigrao),"Par%dOdigrao",i+1);
        format(parrezultat,sizeof(parrezultat),"Par%dRezultat",i+1);
        format(parkvota,sizeof(parkvota),"Par%dKvota",i+1);


        cache_get_value_name(0, par, TiketInfo[playerid][i][Par],200);
        cache_get_value_name_int(0, parid, TiketInfo[playerid][i][ParID]);
        cache_get_value_name_int(0, parodigrao, TiketInfo[playerid][i][Odigrao]);
        cache_get_value_name_int(0, parrezultat, TiketInfo[playerid][i][Rezultat]);
        cache_get_value_name_float(0, parkvota, TiketInfo[playerid][i][Kvota]);
        if(TiketInfo[playerid][i][ParID] > 0)
        {
        format( jedanstr, sizeof( jedanstr ), "{1b71bc}[%d] {FFFFFF}%s {04CC29}Odigrana kvota:{FFFFFF}%0.2f {1b71bc}Odigrao:{FFFFFF}%s {FF0000}Rezultat:{FFFFFF}%s\n", TiketInfo[playerid][i][ParID],TiketInfo[playerid][i][Par],TiketInfo[playerid][i][Kvota],GetTicketPlay(TiketInfo[playerid][i][Odigrao]),GetTicketPlay2(TiketInfo[playerid][i][Rezultat],TiketInfo[playerid][i][Odigrao]));
        strcat(dialogstring, jedanstr);
        if(TiketInfo[playerid][i][Rezultat] != -1) ukupnakvota = TiketInfo[playerid][i][Kvota]*ukupnakvota;
        }

    }
    new dobit = floatround(ulozio*ukupnakvota);
    if(dobit < 1 || dobit > 3000000) dobit = 3000000;
    format(jedanstr,sizeof(jedanstr), "\n\nPotencijalni dobitak iznosi %d $.\nUkoliko vam tiket prodje mozete ga isplatiti u kladionici /isplatitiket.",dobit);
    strcat(dialogstring, jedanstr);
    Dialog_Show(playerid, dialog_none, DIALOG_STYLE_MSGBOX, "Tiket",dialogstring,"OK","");
    return 1;
}

forward CheckTiket8(playerid);
public CheckTiket8(playerid)
{
    new rows;
    cache_get_row_count(rows);
    if(!rows) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Trenutno nema nedovrsenih utakmica!");
    new dialogstring[5000],jedanstr[150];
    for(new i = 0; i < rows; i++)
    {
        new idutakmice,klub1[50],klub2[50],Float:kvota1, Float:kvota2, Float:kvota3, datum[50];
        cache_get_value_name_int(i, "SQLID", idutakmice);
        cache_get_value_name(i, "Klub1", klub1,50);
        cache_get_value_name(i, "Klub2", klub2,50);
        cache_get_value_name_float(i, "Kvota1", kvota1);
        cache_get_value_name_float(i, "Kvota2", kvota2);
        cache_get_value_name_float(i, "Kvota3", kvota3);
        cache_get_value_name(i, "Datum", datum,50);
        format(jedanstr, sizeof( jedanstr ), "{1b71bc}[%d] {FFFFFF}%s vs %s Kvote:%0.2f %0.2f %0.2f Vrijeme:%s\n", idutakmice,klub1,klub2,kvota1,kvota2,kvota3,datum);
        strcat(dialogstring, jedanstr);
    }
    strcat(dialogstring, "\n\nUnesite ID utakmice zatim kakav je rezultat(1 X ili 2) zatim broj golova kluba 1 i broj golova kluba 2.\nPrimjer: 12 X 5 10\n{FF0000}Ukoliko je utakmica odgodjena: ID -1 0 0");
    Dialog_Show(playerid, dialog_urezultat, DIALOG_STYLE_INPUT, "{1b71bc}Unosenje rezultata",dialogstring,"U redu","Odustani");
    return 1;
}

forward CheckTiket10(playerid);
public CheckTiket10(playerid)
{
    new rows;
    cache_get_row_count(rows);
    if(!rows) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste odigrali tiket!");
    new ulozio = 0,Float:ukupnakvota = 1.0;
    cache_get_value_name_int(0, "Ulozio", ulozio);

    for( new i = 0; i < 15; i++ )
    {
        new par[15],parid[15],parrezultat[15],parkvota[15],parodigrao[15];
        format(par,sizeof(par),"Par%d",i+1);
        format(parid,sizeof(parid),"Par%dID",i+1);
        format(parodigrao,sizeof(parodigrao),"Par%dOdigrao",i+1);
        format(parrezultat,sizeof(parrezultat),"Par%dRezultat",i+1);
        format(parkvota,sizeof(parkvota),"Par%dKvota",i+1);


        cache_get_value_name(0, par, TiketInfo[playerid][i][Par],200);
        cache_get_value_name_int(0, parid, TiketInfo[playerid][i][ParID]);
        cache_get_value_name_int(0, parodigrao, TiketInfo[playerid][i][Odigrao]);
        cache_get_value_name_int(0, parrezultat, TiketInfo[playerid][i][Rezultat]);
        cache_get_value_name_float(0, parkvota, TiketInfo[playerid][i][Kvota]);
        if(TiketInfo[playerid][i][ParID] > 0)
        {
            if(TiketInfo[playerid][i][Rezultat] != -1)
            {
	            if(TiketInfo[playerid][i][Rezultat] == 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Imate nedovrsenu utakmicu!");
	            else if(TiketInfo[playerid][i][Odigrao] < 4 && TiketInfo[playerid][i][Odigrao] != TiketInfo[playerid][i][Rezultat]) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ovaj tiket nije dobitan, bacite ga (/bacitiket).");//1 X 2
	            else if(TiketInfo[playerid][i][Odigrao] == 4 && TiketInfo[playerid][i][Rezultat] < 3) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ovaj tiket nije dobitan, bacite ga (/bacitiket).");//3+
	            else if(TiketInfo[playerid][i][Odigrao] == 5 && TiketInfo[playerid][i][Rezultat] < 4) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ovaj tiket nije dobitan, bacite ga (/bacitiket).");//4+
	            else if(TiketInfo[playerid][i][Odigrao] == 6 && TiketInfo[playerid][i][Rezultat] == 7) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ovaj tiket nije dobitan, bacite ga (/bacitiket).");//GG&3+
	            ukupnakvota = TiketInfo[playerid][i][Kvota]*ukupnakvota;
            }
        }

    }
	new dobit = floatround(ulozio*ukupnakvota);
    if(dobit < 1 || dobit > 3000000) dobit = 3000000;
    GivePlayerMoney(playerid, dobit);
    PI[playerid][Novac] += dobit;
    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Cestitamo, isplatili ste %d$.", dobit);
    mysql_tqueryEx(SQL, "DELETE FROM `tickets` WHERE `Ime` = '%s'", ReturnPlayerName(playerid));
    mysql_tqueryEx(SQL, "UPDATE `users` SET `Novac` = '%d' WHERE `SQLID` = '%d'", PI[playerid][Novac], PI[playerid][SQLID]);
    return 1;
}

forward CheckTiket3(playerid,idtekme,staigra);
public CheckTiket3(playerid,idtekme,staigra)
{
    new rows;
    cache_get_row_count(rows);
    if(!rows) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj ID utakmice ne postoji ili nije za igranje!");
    for (new i = 0; i < 15; ++i)
    {
        if(TiketInfo[playerid][i][ParID] == idtekme) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete dva puta istu utakmicu igrati!");
    }
    if(kojautakmica[playerid] >= 10) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ne mozete vise od 10 utakmica!");
    new dialogstring[3000],jedanstr[150];
    new idutakmice,klub1[50],klub2[50],Float:kvota1, Float:kvota2, Float:kvota3, datum[50], rezultat = 0;
    cache_get_value_name_int(0, "SQLID", idutakmice);
    cache_get_value_name(0, "Klub1", klub1,50);
    cache_get_value_name(0, "Klub2", klub2,50);
    cache_get_value_name_float(0, "Kvota1", kvota1);
    cache_get_value_name_float(0, "Kvota2", kvota2);
    cache_get_value_name_float(0, "Kvota3", kvota3);
    cache_get_value_name(0, "Datum", datum,50);
    cache_get_value_name_int(0, "Rezultat", rezultat);
    if(rezultat != 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ta utakmica je zavrsena!");

    TiketInfo[playerid][kojautakmica[playerid]][ParID] = idutakmice;
    format(TiketInfo[playerid][kojautakmica[playerid]][Par], 200, "%s vs %s",klub1, klub2);
    TiketInfo[playerid][kojautakmica[playerid]][Odigrao] = staigra;

    if(staigra == 1) TiketInfo[playerid][kojautakmica[playerid]][Kvota] = kvota1;
    if(staigra == 2) TiketInfo[playerid][kojautakmica[playerid]][Kvota] = kvota3;
    if(staigra == 3) TiketInfo[playerid][kojautakmica[playerid]][Kvota] = kvota2;
    for (new i = 0; i < 15; ++i)
    {
        if(TiketInfo[playerid][i][ParID] > 1)
        {
            format(jedanstr, sizeof(jedanstr), "{1b71bc}[%d] {FFFFFF}%s Odigrao:%s Kvota:%.2f\n", TiketInfo[playerid][i][ParID],TiketInfo[playerid][i][Par],GetTicketPlay( TiketInfo[playerid][i][Odigrao] ),TiketInfo[playerid][i][Kvota]);
            strcat(dialogstring, jedanstr);
        }
    }

    Dialog_Show(playerid, dialog_tpreview, DIALOG_STYLE_MSGBOX, "{1b71bc}Sastavljanje tiketa",dialogstring, "{1b71bc}Igraj dalje", "{FF0000}Zavrsi");
    return 1;
}
forward CheckTiket9(playerid,idtekme,rezultat,gol1,gol2);
public CheckTiket9(playerid,idtekme,rezultat,gol1,gol2)
{
    new rows;
    cache_get_row_count(rows);
    if(!rows) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Taj ID utakmice ne postoji!");
    new idutakmice,klub1[50],klub2[50],Float:kvota1, Float:kvota2, Float:kvota3, Float:kvota4, Float:kvota5, Float:kvota6, datum[50],rezultatt = 0;
    cache_get_value_name_int(0, "SQLID", idutakmice);
    cache_get_value_name(0, "Klub1", klub1,50);
    cache_get_value_name(0, "Klub2", klub2,50);
    cache_get_value_name_float(0, "Kvota1", kvota1);
    cache_get_value_name_float(0, "Kvota2", kvota2);
    cache_get_value_name_float(0, "Kvota3", kvota3);
    cache_get_value_name_float(0, "Kvota3plus", kvota4);
    cache_get_value_name_float(0, "Kvota4plus", kvota5);
    cache_get_value_name_float(0, "KvotaGG", kvota6);
    cache_get_value_name(0, "Datum", datum,50);
    cache_get_value_name_int(0, "Rezultat", rezultatt);
    if(rezultatt != 0) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Ta utakmica je vec zavrsena!");
    if(rezultat != -1)
    {
	    va_SendClientMessageToAll(0x1b71bcFF, "[UTAKMICA]: {FFFFFF}Utakmica %s vs %s zavrsena je sa rezultatom %d:%d(%s).",klub1,klub2,gol1,gol2,GetTicketPlay(rezultat));
	    //1 X 2
	    mysql_tqueryEx(SQL, "UPDATE `matchs` SET `Rezultat` = '%d' WHERE `SQLID` = '%d'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par1Rezultat` = '%d' WHERE `Par1ID` = '%d' AND `Par1Odigrao` < '4'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par2Rezultat` = '%d' WHERE `Par2ID` = '%d' AND `Par2Odigrao` < '4'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par3Rezultat` = '%d' WHERE `Par3ID` = '%d' AND `Par3Odigrao` < '4'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par4Rezultat` = '%d' WHERE `Par4ID` = '%d' AND `Par4Odigrao` < '4'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par5Rezultat` = '%d' WHERE `Par5ID` = '%d' AND `Par5Odigrao` < '4'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par6Rezultat` = '%d' WHERE `Par6ID` = '%d' AND `Par6Odigrao` < '4'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par7Rezultat` = '%d' WHERE `Par7ID` = '%d' AND `Par7Odigrao` < '4'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par8Rezultat` = '%d' WHERE `Par8ID` = '%d' AND `Par8Odigrao` < '4'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par9Rezultat` = '%d' WHERE `Par9ID` = '%d' AND `Par9Odigrao` < '4'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par10Rezultat` = '%d' WHERE `Par10ID` = '%d' AND `Par10Odigrao` < '4'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par11Rezultat` = '%d' WHERE `Par11ID` = '%d' AND `Par11Odigrao` < '4'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par12Rezultat` = '%d' WHERE `Par12ID` = '%d' AND `Par12Odigrao` < '4'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par13Rezultat` = '%d' WHERE `Par13ID` = '%d' AND `Par13Odigrao` < '4'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par14Rezultat` = '%d' WHERE `Par14ID` = '%d' AND `Par14Odigrao` < '4'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par15Rezultat` = '%d' WHERE `Par15ID` = '%d' AND `Par15Odigrao` < '4'",rezultat, idtekme);
	    //3+ 4+
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par1Rezultat` = '%d' WHERE `Par1ID` = '%d' AND `Par1Odigrao` > '3' AND `Par1Odigrao` < '6'",gol1+gol2, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par2Rezultat` = '%d' WHERE `Par2ID` = '%d' AND `Par2Odigrao` > '3' AND `Par2Odigrao` < '6'",gol1+gol2, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par3Rezultat` = '%d' WHERE `Par3ID` = '%d' AND `Par3Odigrao` > '3' AND `Par3Odigrao` < '6'",gol1+gol2, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par4Rezultat` = '%d' WHERE `Par4ID` = '%d' AND `Par4Odigrao` > '3' AND `Par4Odigrao` < '6'",gol1+gol2, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par5Rezultat` = '%d' WHERE `Par5ID` = '%d' AND `Par5Odigrao` > '3' AND `Par5Odigrao` < '6'",gol1+gol2, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par6Rezultat` = '%d' WHERE `Par6ID` = '%d' AND `Par6Odigrao` > '3' AND `Par6Odigrao` < '6'",gol1+gol2, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par7Rezultat` = '%d' WHERE `Par7ID` = '%d' AND `Par7Odigrao` > '3' AND `Par7Odigrao` < '6'",gol1+gol2, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par8Rezultat` = '%d' WHERE `Par8ID` = '%d' AND `Par8Odigrao` > '3' AND `Par8Odigrao` < '6'",gol1+gol2, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par9Rezultat` = '%d' WHERE `Par9ID` = '%d' AND `Par9Odigrao` > '3' AND `Par9Odigrao` < '6'",gol1+gol2, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par10Rezultat` = '%d' WHERE `Par10ID` = '%d' AND `Par10Odigrao` > '3' AND `Par10Odigrao` < '6'",gol1+gol2, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par11Rezultat` = '%d' WHERE `Par11ID` = '%d' AND `Par11Odigrao` > '3' AND `Par11Odigrao` < '6'",gol1+gol2, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par12Rezultat` = '%d' WHERE `Par12ID` = '%d' AND `Par12Odigrao` > '3' AND `Par12Odigrao` < '6'",gol1+gol2, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par13Rezultat` = '%d' WHERE `Par13ID` = '%d' AND `Par13Odigrao` > '3' AND `Par13Odigrao` < '6'",gol1+gol2, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par14Rezultat` = '%d' WHERE `Par14ID` = '%d' AND `Par14Odigrao` > '3' AND `Par14Odigrao` < '6'",gol1+gol2, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par15Rezultat` = '%d' WHERE `Par15ID` = '%d' AND `Par15Odigrao` > '3' AND `Par15Odigrao` < '6'",gol1+gol2, idtekme);
	    //GG&3+
	    new ggrezultat = 6;
	    if(gol1 > 0 && gol2 > 0 && (gol1+gol2) >= 3) ggrezultat = 6;//pogodio
	    else ggrezultat = 7;//nije pogodio
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par1Rezultat` = '%d' WHERE `Par1ID` = '%d' AND `Par1Odigrao` = '6'",ggrezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par2Rezultat` = '%d' WHERE `Par2ID` = '%d' AND `Par2Odigrao` = '6'",ggrezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par3Rezultat` = '%d' WHERE `Par3ID` = '%d' AND `Par3Odigrao` = '6'",ggrezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par4Rezultat` = '%d' WHERE `Par4ID` = '%d' AND `Par4Odigrao` = '6'",ggrezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par5Rezultat` = '%d' WHERE `Par5ID` = '%d' AND `Par5Odigrao` = '6'",ggrezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par6Rezultat` = '%d' WHERE `Par6ID` = '%d' AND `Par6Odigrao` = '6'",ggrezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par7Rezultat` = '%d' WHERE `Par7ID` = '%d' AND `Par7Odigrao` = '6'",ggrezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par8Rezultat` = '%d' WHERE `Par8ID` = '%d' AND `Par8Odigrao` = '6'",ggrezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par9Rezultat` = '%d' WHERE `Par9ID` = '%d' AND `Par9Odigrao` = '6'",ggrezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par10Rezultat` = '%d' WHERE `Par10ID` = '%d' AND `Par10Odigrao` = '6'",ggrezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par11Rezultat` = '%d' WHERE `Par11ID` = '%d' AND `Par11Odigrao` = '6'",ggrezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par12Rezultat` = '%d' WHERE `Par12ID` = '%d' AND `Par12Odigrao` = '6'",ggrezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par13Rezultat` = '%d' WHERE `Par13ID` = '%d' AND `Par13Odigrao` = '6'",ggrezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par14Rezultat` = '%d' WHERE `Par14ID` = '%d' AND `Par14Odigrao` = '6'",ggrezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par15Rezultat` = '%d' WHERE `Par15ID` = '%d' AND `Par15Odigrao` = '6'",ggrezultat, idtekme);
    }
    else//odgodjena utakmica
    {
	    va_SendClientMessageToAll(0x1b71bcFF, "[UTAKMICA]: {FFFFFF}Utakmica %s vs %s je odgodjena i nece uticati na tiket.",klub1,klub2);

	    mysql_tqueryEx(SQL, "UPDATE `matchs` SET `Rezultat` = '%d' WHERE `SQLID` = '%d'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par1Rezultat` = '%d' WHERE `Par1ID` = '%d'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par2Rezultat` = '%d' WHERE `Par2ID` = '%d'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par3Rezultat` = '%d' WHERE `Par3ID` = '%d'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par4Rezultat` = '%d' WHERE `Par4ID` = '%d'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par5Rezultat` = '%d' WHERE `Par5ID` = '%d'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par6Rezultat` = '%d' WHERE `Par6ID` = '%d'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par7Rezultat` = '%d' WHERE `Par7ID` = '%d'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par8Rezultat` = '%d' WHERE `Par8ID` = '%d'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par9Rezultat` = '%d' WHERE `Par9ID` = '%d'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par10Rezultat` = '%d' WHERE `Par10ID` = '%d'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par11Rezultat` = '%d' WHERE `Par11ID` = '%d'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par12Rezultat` = '%d' WHERE `Par12ID` = '%d'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par13Rezultat` = '%d' WHERE `Par13ID` = '%d'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par14Rezultat` = '%d' WHERE `Par14ID` = '%d'",rezultat, idtekme);
	    mysql_tqueryEx(SQL, "UPDATE `tickets` SET `Par15Rezultat` = '%d' WHERE `Par15ID` = '%d'",rezultat, idtekme);
    }
    return 1;
}

forward CheckTiket6(playerid);
public CheckTiket6(playerid)
{
    new rows;
    cache_get_row_count(rows);
    if(!rows) return va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Niste odigrali tiket!");
    mysql_tqueryEx(SQL, "DELETE FROM `tickets` WHERE `Ime` = '%s'", ReturnPlayerName(playerid));
    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Bacili ste tiket, sada mozete odigrati novi.");
    return 1;
}

forward PayDay(i);
public PayDay(i)
{
	if(!IsPlayerConnected(i) || Ulogovan[i] == 0) return 1;
	new iskustvo = 0, iznosplate = 0, osnova = 0, struja = 0, voda = 0, smece = 0, grijanje = 0, porez = 0, kucanajam = 0, prihod = 0, rashod = 0;
	new starirespekt = PI[i][Respekti];
	new stariiznos = PI[i][NovacBanka];
	if(PI[i][PreostaloZaOtplatu] < PI[i][IznosRate])
    {
        PI[i][IznosRate] = PI[i][PreostaloZaOtplatu];
	}
    PI[i][PreostaloZaOtplatu] -= PI[i][IznosRate];
    PI[i][NovacBanka] -= PI[i][IznosRate];
    mysql_tqueryEx(SQL, "UPDATE `users` SET `IznosKredita` = '%d', `IznosRate` = '%d', `PreostalozaOtplatu` = '%d' WHERE `SQLID` = '%d'",
		PI[i][IznosKredita], PI[i][IznosRate], PI[i][PreostaloZaOtplatu], PI[i][SQLID]);
    
    if(PI[i][PreostaloZaOtplatu] < 0) PI[i][PreostaloZaOtplatu] = 0;
    if(PI[i][PreostaloZaOtplatu] <= 0) { PI[i][IznosKredita] = 0; PI[i][IznosRate] = 0; }
	if(PI[i][Rent] != -1)
	{
		if(PI[i][NovacBanka] < KucaInfo[PI[i][Rent]][kCenaRenta])
		{
			PI[i][Rent] = -1;
			PI[i][Spawn] = SPAWN_NORMAL;
			va_SendClientMessage(i, 0x1b71bcFF, "#Info: {FFFFFF}Niste imali da platiti kiriju za kucu, iseljeni ste!");
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Rent` = '%d', `Spawn` = '%d' WHERE `SQLID` = '%d'", PI[i][Rent], PI[i][Spawn], PI[i][SQLID]);
		}
		PI[i][NovacBanka] -= KucaInfo[PI[i][Rent]][kCenaRenta];
	}
	if(PI[i][Rent] == -1) kucanajam = 0;
	else if(PI[i][Rent] != -1) kucanajam = KucaInfo[PI[i][Rent]][kCenaRenta];

	if(ServerInfo[sDupliRespekti] == 1) { PI[i][Respekti] += 2; }
	else if(ServerInfo[sDupliRespekti] == 0) { PI[i][Respekti] ++; }
	PI[i][SatiIgre]++;
	if(PI[i][SatiIgre] >= 100) CheckQuestDone(i, 17);
 	if(PI[i][SatiIgre] >= 250) CheckQuestDone(i, 18);
  	if(PI[i][SatiIgre] >= 500) CheckQuestDone(i, 19);
  	if(PI[i][DrogaOvisan] == 1)
	{
	    if(PI[i][DrogaUzeoPuta] > 0)
	    {
	    	PI[i][DrogaUzeoPuta] --;
	    }
	    if(PI[i][DrogaUzeoPuta] == 0)
	    {
	        PI[i][DrogaOvisan] = 0;
	        va_SendClientMessage(i, 0x1b71bcFF, "#Info: {FFFFFF}Posto niste koristili drogu zavisnost je prosla.");
	    }
	}
	mysql_tqueryEx(SQL, "UPDATE `users` SET `Respekti` = '%d', `SatiIgre` = '%d' WHERE `SQLID` = '%d'", PI[i][Respekti], PI[i][SatiIgre], PI[i][SQLID]);
	iskustvo = (PI[i][Level] * 2) + 2;
	if(PI[i][Kuca] != -1) { struja += (10 + random(15)); voda += (10 + random(5)); porez += 10; smece += 8; grijanje += 5; }
	if(PI[i][Stan] != -1) { struja += (3 + random(5)); voda += (5 + random(8)); porez += 10; smece += 4; grijanje += 3; }
	if(PI[i][Firma] != -1) { porez += 100; }
	osnova = 100 + random(150);
	iznosplate = osnova*PI[i][Level];
    if(PI[i][Respekti] < iskustvo)
    {
		Dialog_Show(i, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Plata", "{FFFFFF}Plata stigla na vas bankovni racun\n{FFFFFF}Plata: {1b71bc}%d$\n\n\
																	              {FFFFFF}Kredit Informacije\n{FFFFFF}Iznos Kredita: {1b71bc}%d$\n{FFFFFF}Iznos Rate: {1b71bc}%d$\n\
																				  {FFFFFF}Preostalo za otplatu: {1b71bc}%d$\n\n\
  																				  {FFFFFF}Platili ste\n{FFFFFF}Porez: {1b71bc}%d$\n{FFFFFF}Struja: {1b71bc}%d$\n{FFFFFF}Voda: {1b71bc}%d$\n\
																				  {FFFFFF}Smece: {1b71bc}%d$\n{FFFFFF}Grijanje: {1b71bc}%d$\n{FFFFFF}Iznajmljena kuca: {1b71bc}%d$\n\n\
																				  {FFFFFF}Stari respekti: {1b71bc}%d\n{FFFFFF}Novi respekti: {1b71bc}%d\n\n\
																				  {FFFFFF}Stari iznos: {1b71bc}%d$\n{FFFFFF}Novi iznos: {1b71bc}%d$", "OK", "",
																				  iznosplate, PI[i][IznosKredita], PI[i][IznosRate], PI[i][PreostaloZaOtplatu], porez, struja, voda, smece, grijanje, kucanajam,
																				  starirespekt, PI[i][Respekti], stariiznos, PI[i][NovacBanka]+iznosplate);
	}
	else if(PI[i][Respekti] >= iskustvo)
	{
	    PI[i][Level]++;
	    SetPlayerScore(i, PI[i][Level]);
	    PI[i][Respekti] = 0;
	    mysql_tqueryEx(SQL, "UPDATE `users` SET `Level` = '%d', `Respekti` = '%d' WHERE `SQLID` = '%d'", PI[i][Level], PI[i][Respekti], PI[i][SQLID]);
	    Dialog_Show(i, dialog_none, DIALOG_STYLE_MSGBOX, "{1b71bc}Plata", "{FFFFFF}Plata stigla na vas bankovni racun\n{FFFFFF}Plata: {1b71bc}%d$\n\n\
																	              {FFFFFF}Kredit Informacije\n{FFFFFF}Iznos Kredita: {1b71bc}%d$\n{FFFFFF}Iznos Rate: {1b71bc}%d$\n\
																				  {FFFFFF}Preostalo za otplatu: {1b71bc}%d$\n\n\
  																				  {FFFFFF}Platili ste\n{FFFFFF}Porez: {1b71bc}%d$\n{FFFFFF}Struja: {1b71bc}%d$\n{FFFFFF}Voda: {1b71bc}%d$\n\
																				  {FFFFFF}Smece: {1b71bc}%d$\n{FFFFFF}Grijanje: {1b71bc}%d$\n{FFFFFF}Iznajmljena kuca: {1b71bc}%d$\n\n\
																				  {FFFFFF}Stari respekti: {1b71bc}%d\n{FFFFFF}Novi respekti: {1b71bc}%d\n\n\
																				  {FFFFFF}Stari iznos: {1b71bc}%d$\n{FFFFFF}Novi iznos: {1b71bc}%d$\n\n\
																				  {FFFFFF}Cestitamo presli ste na sledeci nivo - {FF0000}LEVEL UP", "OK", "",
																				  iznosplate, PI[i][IznosKredita], PI[i][IznosRate], PI[i][PreostaloZaOtplatu], porez, struja, voda, smece, grijanje, kucanajam,
																				  starirespekt, PI[i][Respekti], stariiznos, PI[i][NovacBanka]+iznosplate);
	}
	prihod = iznosplate;
	rashod = struja + voda + porez + smece + grijanje;
	PI[i][NovacBanka] += prihod;
	PI[i][NovacBanka] -= rashod;
	UpdateBanka(i);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `NovacBanka` = '%d' WHERE `SQLID` = '%d'", PI[i][NovacBanka], PI[i][SQLID]);
	DobioPay[i] = 1;
	return 1;
}

forward Vuci(igrac, playerid);
public Vuci(igrac, playerid)
{
     new Float:x, Float:y, Float:z;
     GetPlayerPos(igrac, x, y, z);
     SetPlayerPos(playerid, x, y+1, z);
     SetPlayerInterior(playerid, GetPlayerInterior(igrac));
}

forward PDMessage(color, const string[]);
public PDMessage(color, const string[])
{
	foreach(new i: Player)
	{
		if(PI[i][Clan] == 1 || PI[i][Lider] == 1 || PI[i][Clan] == 2 || PI[i][Lider] == 2)
		{
			SendClientMessage(i, color, string);
		}
	}
}

forward AdminMessage(color, const string[]);
public AdminMessage(color, const string[])
{
	foreach(new i: Player)
	{
		if(PI[i][Admin] >= 1)
		{
			SendClientMessage(i, color, string);
		}
	}
}

forward AVipPMessage(color, const string[]);
public AVipPMessage(color, const string[])
{
    foreach(new i: Player)
	{
		if(PI[i][Admin] >= 1 || PI[i][Vip] >= 1)
		{
			SendClientMessage(i, color, string);
		}
	}
}

forward NewbieMessage(color, const string[]);
public NewbieMessage(color, const string[])
{
    foreach(new i: Player)
	{
		if(PI[i][Level] >= 1 || PI[i][Level] <= 4 || PI[i][Admin] >= 1)
		{
			SendClientMessage(i, color, string);
		}
	}
}

forward KickLogin(playerid);
public KickLogin(playerid)
{
	va_SendClientMessage(playerid, 0xFF0000FF, "#Kick: {FFFFFF}Kikovani ste jer niste upisali lozinku za 30 sekundi!");
	KillTimer(LoginTimer[playerid]);
	PlayerTimer[playerid] = SetTimerEx("KonektKick", 1000, false, "d", playerid);
	return 1;
}

forward KonektKick(playerid);
public KonektKick(playerid)
{
	Kick(playerid);
	return 1;
}

forward KonektBan(playerid);
public KonektBan(playerid)
{
	Ban(playerid);
	return 1;
}

forward TimerRent(playerid);
public TimerRent(playerid)
{
	DestroyVehicle(RentVeh[playerid]);
	DestroyDynamic3DTextLabel(RentVehLabel[RentVeh[playerid]]);
	IznajmioVozilo[playerid] = 0;
	RentVeh[playerid] = 0;
	va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Isteklo vam je vreme iznamljivanja vozila.");
	return 1;
}

forward CheckPlayerRename(playerid, id, novoime[]);
public CheckPlayerRename(playerid, id, novoime[])
{
    new rows;
    cache_get_row_count(rows);
	if(rows)
	{
	    va_SendClientMessage(playerid, 0xFF0000FF, "#Greska: {FFFFFF}Novo ime vec postoji u bazi podataka!");
    }
    else
	{
		RenamePlayer(id, novoime);
		va_SendClientMessage(id, 0x1b71bcFF, "#Info: {FFFFFF}Admin %s vam je promenio ime u %s.", ReturnPlayerName(playerid), novoime);

		new playername[MAX_PLAYER_NAME];
        GetPlayerName(id, playername, sizeof(playername));

		new str[128];
		format(str, sizeof(str), "{ddd74e}[AdminInfo]: {FFFFFF}Admin %s je promenio ime igracu %s u %s", ReturnPlayerName(playerid), playername, novoime);
		AdminMessage(-1, str);
    }
    return 1;
}

forward GorivoFriz(playerid);
public GorivoFriz(playerid)
{
	TogglePlayerControllable(playerid, 1);
	GameTextForPlayer(playerid, "~g~Gorivo napunjeno", 5000, 3);
	PuniGorivo[playerid] = false;
	new string[10];
	format(string, sizeof(string), "%dL", Fuel[GetPlayerVehicleID(playerid)]);
	PlayerTextDrawSetString(playerid, BrzinaTD[playerid][10], string);
	CheckQuestDone(playerid, 23);
	return 1;
}

PrivatnoVozilo(veh)
{
    for(new vehid = 1; vehid < MAX_VOZILA; vehid++)
    {
	    if(VoziloInfo[vehid][vID] == veh) return 1;
    }
    return 0;
}

InsertAcc(playerid)
{
    new q[256];
	mysql_format(SQL, q, sizeof(q),
		"INSERT INTO `users` (Ime, Password, Email, Skin, Level, Novac, Pol, Drzava, Godine, NovacBanka, Zlato, Vozilo1, Vozilo2, Vozilo3, TDCol) \
		VALUES('%e', '%e', '%e', '%d', '%d', '%d', '%d', '%d', '%d', '%d', '%d', '%d', '%d', '%d', '%d')",

				ReturnPlayerName(playerid), PI[playerid][Password], PI[playerid][Email], PI[playerid][Skin], PI[playerid][Level],
		        PI[playerid][Novac], PI[playerid][Pol], PI[playerid][Drzava], PI[playerid][Godine],
		        PI[playerid][NovacBanka], PI[playerid][Zlato], PI[playerid][Vozilo1], PI[playerid][Vozilo2], PI[playerid][Vozilo3], PI[playerid][TDBoja]);

	mysql_tquery(SQL, q, "PlayerRegistered", "i", playerid);
	return 1;
}

IsASkirt( componentid ) {
	if( GetVehicleComponentType( componentid ) == CARMODTYPE_SIDESKIRT ) return 1;
	return 0;
}
IsASpoiler( componentid ) {
	if( GetVehicleComponentType( componentid ) == CARMODTYPE_SPOILER ) return 1;
	return 0;
}
IsANitro( componentid ) {
	if( GetVehicleComponentType( componentid ) == CARMODTYPE_NITRO ) return 1;
	return 0;
}
IsAFrontBumper( componentid ) {
    if( GetVehicleComponentType( componentid ) == CARMODTYPE_FRONT_BUMPER ) return 1;
	return 0;
}
IsARearBumper( componentid ) {
    if( GetVehicleComponentType( componentid ) == CARMODTYPE_REAR_BUMPER ) return 1;
	return 0;
}
IsAStereo( componentid ) {
	if( GetVehicleComponentType( componentid ) == CARMODTYPE_STEREO ) return 1;
	return 0;
}
IsAExhaust( componentid ) {
    if( GetVehicleComponentType( componentid ) == CARMODTYPE_EXHAUST ) return 1;
	return 0;
}
IsALamp( componentid ) {
	if( GetVehicleComponentType( componentid ) == CARMODTYPE_LAMPS ) return 1;
	return 0;
}
IsAHydraulic( componentid ) {
	if( GetVehicleComponentType( componentid ) == CARMODTYPE_HYDRAULICS ) return 1;
	return 0;
}
IsAVents( componentid ) {
	if( GetVehicleComponentType( componentid ) == CARMODTYPE_VENT_RIGHT || GetVehicleComponentType( componentid ) == CARMODTYPE_VENT_LEFT ) return 1;
	return 0;
}
IsAHood( componentid ) {
	if( GetVehicleComponentType( componentid ) == CARMODTYPE_HOOD ) return 1;
	return 0;
}
IsAWheel( componentid ) {
	if( GetVehicleComponentType( componentid ) == CARMODTYPE_WHEELS ) return 1;
	return 0;
}
IsARoof( componentid ) {
	if( GetVehicleComponentType( componentid ) == CARMODTYPE_ROOF ) return 1;
	return 0;
}

ModVehicle(vehicleid)
{
	if(vehicleid != -1)
	{
		if(VoziloInfo[vehicleid][vKomponenta1] != 0) {
			AddVehicleComponent(vehicleid,VoziloInfo[vehicleid][vKomponenta1]);
		}
		if(VoziloInfo[vehicleid][vKomponenta2] != 0) {
			AddVehicleComponent(vehicleid,VoziloInfo[vehicleid][vKomponenta2]);
		}
		if(VoziloInfo[vehicleid][vKomponenta3] != 0) {
			AddVehicleComponent(vehicleid,VoziloInfo[vehicleid][vKomponenta3]);
		}
		if(VoziloInfo[vehicleid][vKomponenta4] != 0) {
			AddVehicleComponent(vehicleid,VoziloInfo[vehicleid][vKomponenta4]);
		}
		if(VoziloInfo[vehicleid][vKomponenta5] != 0) {
			AddVehicleComponent(vehicleid,VoziloInfo[vehicleid][vKomponenta5]);
		}
		if(VoziloInfo[vehicleid][vKomponenta6] != 0) {
			AddVehicleComponent(vehicleid,VoziloInfo[vehicleid][vKomponenta6]);
		}
		if(VoziloInfo[vehicleid][vKomponenta7] != 0) {
			AddVehicleComponent(vehicleid,VoziloInfo[vehicleid][vKomponenta7]);
		}
		if(VoziloInfo[vehicleid][vKomponenta8] != 0) {
			AddVehicleComponent(vehicleid,VoziloInfo[vehicleid][vKomponenta8]);
	 	}
		if(VoziloInfo[vehicleid][vKomponenta9] != 0) {
			AddVehicleComponent(vehicleid,VoziloInfo[vehicleid][vKomponenta9]);
		}
		if(VoziloInfo[vehicleid][vKomponenta10] != 0) {
			AddVehicleComponent(vehicleid,VoziloInfo[vehicleid][vKomponenta10]);
		}
		if(VoziloInfo[vehicleid][vKomponenta11] != 0) {
			AddVehicleComponent(vehicleid,VoziloInfo[vehicleid][vKomponenta11]);
		}
		if(VoziloInfo[vehicleid][vKomponenta12] != 0) {
			AddVehicleComponent(vehicleid,VoziloInfo[vehicleid][vKomponenta12]);
		}
		if(VoziloInfo[vehicleid][vKomponenta13] != 0) {
			AddVehicleComponent(vehicleid,VoziloInfo[vehicleid][vKomponenta13]);
		}
		if(VoziloInfo[vehicleid][vPaintJob] >= 0 && VoziloInfo[vehicleid][vPaintJob] < 3) {
			ChangeVehiclePaintjob(vehicleid, VoziloInfo[vehicleid][vPaintJob]);
		}
		ChangeVehicleColours(vehicleid, VoziloInfo[vehicleid][vBoja1], VoziloInfo[vehicleid][vBoja2]);
	}
	return 1;
}

IsComponentidCompatible(modelid, componentid)
{
    if(componentid == 1025 || componentid == 1073 || componentid == 1074 || componentid == 1075 || componentid == 1076 ||
         componentid == 1077 || componentid == 1078 || componentid == 1079 || componentid == 1080 || componentid == 1081 ||
         componentid == 1082 || componentid == 1083 || componentid == 1084 || componentid == 1085 || componentid == 1096 ||
         componentid == 1097 || componentid == 1098 || componentid == 1087 || componentid == 1086)
         return 1;

    switch (modelid)
    {
        case 400: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 401: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 114 || componentid == 1020 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 402: return (componentid == 1009 || componentid == 1009 || componentid == 1010);
        case 404: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 405: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1023 || componentid == 1000);
        case 409: return (componentid == 1009);
        case 410: return (componentid == 1019 || componentid == 1021 || componentid == 1020 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 411: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 412: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 415: return (componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 418: return (componentid == 1020 || componentid == 1021 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016);
        case 419: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 420: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1003);
        case 421: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1016 || componentid == 1000);
        case 422: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007);
        case 426: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003);
        case 429: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 436: return (componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 438: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 439: return (componentid == 1003 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1013);
        case 442: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 445: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 451: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 458: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 466: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 467: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 474: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 475: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 477: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 478: return (componentid == 1005 || componentid == 1004 || componentid == 1012 || componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 479: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 480: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 489: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016 || componentid == 1000);
        case 491: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 492: return (componentid == 1005 || componentid == 1004 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1016 || componentid == 1000);
        case 496: return (componentid == 1006 || componentid == 1017 || componentid == 1007 || componentid == 1011 || componentid == 1019 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1003 || componentid == 1002 || componentid == 1142 || componentid == 1143 || componentid == 1020);
        case 500: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 506: return (componentid == 1009);
        case 507: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 516: return (componentid == 1004 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1015 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 517: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 518: return (componentid == 1005 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 526: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 527: return (componentid == 1021 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1015 || componentid == 1017 || componentid == 1007);
        case 529: return (componentid == 1012 || componentid == 1011 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 533: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 534: return (componentid == 1126 || componentid == 1127 || componentid == 1179 || componentid == 1185 || componentid == 1100 || componentid == 1123 || componentid == 1125 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1180 || componentid == 1178 || componentid == 1101 || componentid == 1122 || componentid == 1124 || componentid == 1106);
        case 535: return (componentid == 1109 || componentid == 1110 || componentid == 1113 || componentid == 1114 || componentid == 1115 || componentid == 1116 || componentid == 1117 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1120 || componentid == 1118 || componentid == 1121 || componentid == 1119);
        case 536: return (componentid == 1104 || componentid == 1105 || componentid == 1182 || componentid == 1181 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1184 || componentid == 1183 || componentid == 1128 || componentid == 1103 || componentid == 1107 || componentid == 1108);
        case 540: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 541: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 542: return (componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1015);
        case 545: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 546: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 547: return (componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1016 || componentid == 1003 || componentid == 1000);
        case 549: return (componentid == 1012 || componentid == 1011 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 550: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003);
        case 551: return (componentid == 1005 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003);
        case 555: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 558: return (componentid == 1092 || componentid == 1089 || componentid == 1166 || componentid == 1165 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1168 || componentid == 1167 || componentid == 1088 || componentid == 1091 || componentid == 1164 || componentid == 1163 || componentid == 1094 || componentid == 1090 || componentid == 1095 || componentid == 1093);
        case 559: return (componentid == 1065 || componentid == 1066 || componentid == 1160 || componentid == 1173 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1159 || componentid == 1161 || componentid == 1162 || componentid == 1158 || componentid == 1067 || componentid == 1068 || componentid == 1071 || componentid == 1069 || componentid == 1072 || componentid == 1070 || componentid == 1009);
        case 560: return (componentid == 1028 || componentid == 1029 || componentid == 1169 || componentid == 1170 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1141 || componentid == 1140 || componentid == 1032 || componentid == 1033 || componentid == 1138 || componentid == 1139 || componentid == 1027 || componentid == 1026 || componentid == 1030 || componentid == 1031);
        case 561: return (componentid == 1064 || componentid == 1059 || componentid == 1155 || componentid == 1157 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1154 || componentid == 1156 || componentid == 1055 || componentid == 1061 || componentid == 1058 || componentid == 1060 || componentid == 1062 || componentid == 1056 || componentid == 1063 || componentid == 1057);
        case 562: return (componentid == 1034 || componentid == 1037 || componentid == 1171 || componentid == 1172 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1149 || componentid == 1148 || componentid == 1038 || componentid == 1035 || componentid == 1147 || componentid == 1146 || componentid == 1040 || componentid == 1036 || componentid == 1041 || componentid == 1039);
        case 565: return (componentid == 1046 || componentid == 1045 || componentid == 1153 || componentid == 1152 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1150 || componentid == 1151 || componentid == 1054 || componentid == 1053 || componentid == 1049 || componentid == 1050 || componentid == 1051 || componentid == 1047 || componentid == 1052 || componentid == 1048);
        case 566: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 567: return (componentid == 1129 || componentid == 1132 || componentid == 1189 || componentid == 1188 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1187 || componentid == 1186 || componentid == 1130 || componentid == 1131 || componentid == 1102 || componentid == 1133);
        case 575: return (componentid == 1044 || componentid == 1043 || componentid == 1174 || componentid == 1175 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1176 || componentid == 1177 || componentid == 1099 || componentid == 1042);
        case 576: return (componentid == 1136 || componentid == 1135 || componentid == 1191 || componentid == 1190 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1192 || componentid == 1193 || componentid == 1137 || componentid == 1134);
        case 579: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 580: return (componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 585: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 587: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 589: return (componentid == 1005 || componentid == 1004 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1024 || componentid == 1013 || componentid == 1006 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 600: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1022 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 602: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 603: return (componentid == 1144 || componentid == 1145 || componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
    }
    return 0;
}

OrgPoruka(orgid, boja, const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(Ulogovan[i] == 1)
	    {
		    if(PI[i][Clan] == orgid || PI[i][Lider] == orgid)
			{
		        SendClientMessage(i, boja, string);
			}
		}
	}
	return 1;
}

KodTeritorije(playerid)
{
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
    for(new id = 1; id < MAX_TERITORIJA; id ++)
	{
		if(Pos[0] <= TeritorijeInfo[id][t_MaxX] && Pos[0] >= TeritorijeInfo[id][t_MinX] && Pos[1] <= TeritorijeInfo[id][t_MaxY] && Pos[1] >= TeritorijeInfo[id][t_MinY])
		{
			return id;
		}
	}
	return -1;
}

SpawnIgraca(playerid)
{
    if(PI[playerid][Zatvor] == 1)
	{
		new rand = random(sizeof(RandomZatvor));
		SetSpawnInfo(playerid, NO_TEAM, PI[playerid][Skin], RandomZatvor[rand][0], RandomZatvor[rand][1], RandomZatvor[rand][2], 180.0, WEAPON_FIST, 0, WEAPON_FIST, 0, WEAPON_FIST, 0);
		return 1;
	}
	else
	{
		if(PI[playerid][Spawn] == SPAWN_KUCA)
		{
		    if(PI[playerid][Kuca] != -1)
		    {
		        new i = PI[playerid][Kuca];
		    	SetPlayerInterior(playerid, KucaInfo[i][kInt]); SetPlayerVirtualWorld(playerid, KucaInfo[i][kVW]);
				SetSpawnInfo(playerid, NO_TEAM, PI[playerid][Skin], KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ], 180.0, WEAPON_FIST, 0, WEAPON_FIST, 0, WEAPON_FIST, 0);
			}
			else
			{
		        PI[playerid][Spawn] = SPAWN_NORMAL;
				new rand = random(sizeof(RandomSpawn));
				SetSpawnInfo(playerid, NO_TEAM, PI[playerid][Skin], RandomSpawn[rand][0], RandomSpawn[rand][1], RandomSpawn[rand][2], RandomSpawn[rand][3], WEAPON_FIST, 0, WEAPON_FIST, 0, WEAPON_FIST, 0);
				SetPlayerInterior(playerid, 0);
			}
		}
		else if(PI[playerid][Spawn] == SPAWN_RENTKUCA)
		{
		    if(PI[playerid][Rent] != -1)
		    {
		        new i = PI[playerid][Rent];
		        SetPlayerInterior(playerid, KucaInfo[i][kInt]); SetPlayerVirtualWorld(playerid, KucaInfo[i][kVW]);
				SetSpawnInfo(playerid, NO_TEAM, PI[playerid][Skin], KucaInfo[i][kIzlazX], KucaInfo[i][kIzlazY], KucaInfo[i][kIzlazZ], 180.0, WEAPON_FIST, 0, WEAPON_FIST, 0, WEAPON_FIST, 0);
			}
			else
			{
		        PI[playerid][Spawn] = SPAWN_NORMAL;
				new rand = random(sizeof(RandomSpawn));
				SetSpawnInfo(playerid, NO_TEAM, PI[playerid][Skin], RandomSpawn[rand][0], RandomSpawn[rand][1], RandomSpawn[rand][2], RandomSpawn[rand][3], WEAPON_FIST, 0, WEAPON_FIST, 0, WEAPON_FIST, 0);
				SetPlayerInterior(playerid, 0);
			}
		}
		else if(PI[playerid][Spawn] == SPAWN_STAN)
		{
		    if(PI[playerid][Stan] != -1)
		    {
		        new i = PI[playerid][Stan];
		    	SetPlayerInterior(playerid, StanInfo[i][sInt]); SetPlayerVirtualWorld(playerid, StanInfo[i][sVW]);
		    	SetSpawnInfo(playerid, NO_TEAM, PI[playerid][Skin], StanInfo[i][sIzlazX], StanInfo[i][sIzlazY], StanInfo[i][sIzlazZ], 180.0, WEAPON_FIST, 0, WEAPON_FIST, 0, WEAPON_FIST, 0);
			}
			else
			{
		        PI[playerid][Spawn] = SPAWN_NORMAL;
				new rand = random(sizeof(RandomSpawn));
				SetSpawnInfo(playerid, NO_TEAM, PI[playerid][Skin], RandomSpawn[rand][0], RandomSpawn[rand][1], RandomSpawn[rand][2], RandomSpawn[rand][3], WEAPON_FIST, 0, WEAPON_FIST, 0, WEAPON_FIST, 0);
				SetPlayerInterior(playerid, 0);
			}
		}
		else if(PI[playerid][Spawn] == SPAWN_ORGANIZACIJA)
		{
		    if(PI[playerid][Lider] != 0 || PI[playerid][Clan] != 0)
	     	{
			    new OrgID = PI[playerid][Clan];
				SetSpawnInfo(playerid, NO_TEAM, PI[playerid][Skin], OrgInfo[OrgID][oPozSpawnX], OrgInfo[OrgID][oPozSpawnY], OrgInfo[OrgID][oPozSpawnZ], 180.0, WEAPON_FIST, 0, WEAPON_FIST, 0, WEAPON_FIST, 0);
				SetPlayerInterior(playerid, OrgInfo[OrgID][oInt]);
				SetPlayerVirtualWorld(playerid, OrgInfo[OrgID][oVw]);
	   		}
		    else
			{
		        PI[playerid][Spawn] = SPAWN_NORMAL;
				new rand = random(sizeof(RandomSpawn));
				SetSpawnInfo(playerid, NO_TEAM, PI[playerid][Skin], RandomSpawn[rand][0], RandomSpawn[rand][1], RandomSpawn[rand][2], RandomSpawn[rand][3], WEAPON_FIST, 0, WEAPON_FIST, 0, WEAPON_FIST, 0);
				SetPlayerInterior(playerid, 0);
			}
		}
		else
		{
		    new rand = random(sizeof(RandomSpawn));
			SetSpawnInfo(playerid, NO_TEAM, PI[playerid][Skin], RandomSpawn[rand][0], RandomSpawn[rand][1], RandomSpawn[rand][2], RandomSpawn[rand][3], WEAPON_FIST, 0, WEAPON_FIST, 0, WEAPON_FIST, 0);
		}
	}
	return 1;
}

Register(playerid)
{
    ClearChat(playerid, 16);
    InterpolateCameraPos(playerid,382.858856,-2267.440185,-7.373182,380.098632,-2015.352783,61.335002,15000);
	InterpolateCameraLookAt(playerid,382.723236,-2262.481933,-8.004306,379.970703,-2018.090576,57.153160,15000);
    Dialog_Show(playerid, dialog_register, DIALOG_STYLE_PASSWORD, "{1b71bc}Registracija", "{FFFFFF}Dobrodosli {1b71bc}%s {FFFFFF}na {1b71bc}Vibe Roleplay\n\
																			 {FFFFFF}Vas korisnicki racun {FF0000}nije registrovan {FFFFFF}u bazi podataka.\n\
																			 {FFFFFF}Molimo vas unesite vasu zeljenu lozinku kako bi pristupili nasem serveru.\n\
																			 {FFFFFF}Lozinka mora sadrzati minimum {F0FFFF}6 {FFFFFF}maksimum {F0FFFF}26 {FFFFFF}karaktera.\n\
																			 {FFFFFF}Vasa lozinka moze sadrzati kombinaciju slova i brojeva {FF0000}(RAZMAK ZABRANJEN).", "Registracija", "Izlaz", ReturnPlayerName(playerid));
	return 1;
}
PlayerLogged(playerid)
{
    GivePlayerMoney(playerid, PI[playerid][Novac]);
	TogglePlayerControllable(playerid, 1);
	ClearChat(playerid, 30);
	Ulogovan[playerid] = 1;
	SetPlayerScore(playerid, PI[playerid][Level]);
	KillTimer(LoginTimer[playerid]);
	PlayerTextDrawDestroy(playerid, LoginTD[playerid][0]);
	PlayerTextDrawDestroy(playerid, LoginTD[playerid][1]);
	PlayerTextDrawDestroy(playerid, LoginTD[playerid][2]);
	PlayerTextDrawDestroy(playerid, LoginTD[playerid][3]);
	PlayerTextDrawDestroy(playerid, LoginTD[playerid][4]);
	StopAudioStreamForPlayer(playerid);
	if(PI[playerid][PosadioBDroge] != 0) 
	{
		if(strcmp(PlantazaInfo[PI[playerid][PosadioBDroge]][PlantazaPosadio], ReturnPlayerName(playerid), true)) 
		{
			PI[playerid][PosadioBDroge] = 0;
            mysql_tqueryEx(SQL, "UPDATE `users` SET `PosadioBDroge` = '%d' WHERE `SQLID` = '%d'", PI[playerid][PosadioBDroge], PI[playerid][SQLID]);
        }
   	}
	KreirajTDs(playerid);
	TogglePlayerSpectating(playerid, false);
	TogglePlayerControllable(playerid, true);
	for(new t_id = 1; t_id < MAX_TERITORIJA; t_id ++)
	{
        new t_string[30];
		format(t_string, sizeof(t_string), "0x%sAA", TeritorijeInfo[t_id][t_Boja]);
		GangZoneShowForPlayer(playerid, TeritorijeInfo[t_id][t_ID], HexToInt(t_string));
	}
	new godina, mesec, dan, sat, minut, str[30];
	gettime(sat, minut);
	getdate(godina, mesec, dan);
	format(str, sizeof(str), "%02d/%02d/%02d - %02d:%02d", dan, mesec, godina, sat, minut);
	strmid(PI[playerid][LastLogin], str, 0, strlen(str), 30);
	mysql_tqueryEx(SQL, "UPDATE `users` SET `isonline` = '1', `LastLogin` = '%s' WHERE `SQLID` = '%d'", PI[playerid][LastLogin], PI[playerid][SQLID]);
	new iskustvo;
	iskustvo = (PI[playerid][Level] * 2) + 2;
	va_SendClientMessage(playerid, -1, "Dobrodosao nazad {1b71bc}%s {FFFFFF}na {1b71bc}Vibe Roleplay.", ReturnPlayerName(playerid));
	va_SendClientMessage(playerid, 0x1b71bcFF, "[INFORMACIJE]: {FFFFFF}Level : %d | Respekti: %d/%d | Sati Igre : %d | Ukupno bogatstvo: %d$", PI[playerid][Level], PI[playerid][Respekti], iskustvo, PI[playerid][SatiIgre], PI[playerid][Novac]+PI[playerid][NovacBanka]);
	SpawnIgraca(playerid); SpawnPlayer(playerid);
	return 1;
}

CheckPassword(const password[])
{
    for(new i = 0; password[i] != EOS; ++i)
    {
        switch(password[i])
        {
            case '0'..'9', 'A'..'Z', 'a'..'z': continue;
            default: return 0;
        }
    }
    return 1;
}

CheckMail(const email[])
{
    for(new i = 0; email[i] != EOS; ++i)
    {
        switch(email[i])
        {
            case '0'..'9', 'A'..'Z', 'a'..'z', '@', '.', '_': continue;
            default: return 0;
        }
    }
    return 1;
}

CheckCountry(cout)
{
    new string[25];
    switch(cout)
    {
        case 8: string = "Ostalo";
		case 7: string = "Albanija";
		case 6: string = "Crna Gora";
        case 5: string = "Bosna i Hercegovina";
        case 4: string = "Slovenija";
        case 3: string = "Hrvatska";
    	case 2: string = "Srbija";
        case 1: string = "Makedonija";
        case 0: string = "Nema";
        default: string = "Nema";
    }
    return string;
}

AttachObjectRemove(playerid)
{
	if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 6)) RemovePlayerAttachedObject(playerid, 6);
	return 1;
}

HexToInt(const string[])
{
  	if (string[ 0 ]==0) return 0;
    new string2[30];
    format(string2, sizeof(string2), string);
    for(new i = 0, j = strlen(string2); i < j; i ++)
    {
        string2[i] = toupper(string2[i]);
    }

 	new i;
  	new cur=1;
  	new res=0;
  	for (i=strlen(string2);i>0;i--) {
  	  	if (string2[i-1]<58) res=res+cur*(string2[i-1]-48); else res=res+cur*(string2[i-1]-65+10);
    	cur=cur*16;
  	}
  	return res;
}

RGB(red, green, blue)
{
    return ((red & 0xFF) << 16) | ((green & 0xFF) << 8) | (blue & 0xFF);
}

ProxMessage(playerid, const message[], Float: range = 10.0)
{
    new Float:playerpos[3], Float:otherpos[3], Float:distance, Float:alpha, color;
    GetPlayerPos(playerid, playerpos[0], playerpos[1], playerpos[2]);

    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(!IsPlayerConnected(i)) continue;

        GetPlayerPos(i, otherpos[0], otherpos[1], otherpos[2]);
        distance = VectorSize(playerpos[0] - otherpos[0], playerpos[1] - otherpos[1], playerpos[2] - otherpos[2]);

        if (distance <= range)
        {
            alpha = (1.0 - (distance / range) < 0.5) ? 0.5 : 1.0 - (distance / range);
			color = RGB(floatround((1.0 - (distance / range))) * 205 + 50, floatround((1.0 - (distance / range))) * 205 + 50, floatround((1.0 - (distance / range))) * 205 + 50);
			color |= (floatround(alpha * 255) << 24);
            SendClientMessage(i, color, message);
        }
    }
    return 1;
}

Map_CreateObject(modelid, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
    return CreateObject(modelid, x, y, z, rx, ry, rz, 600.0);
}

Map_CreateDynamicObject(modelid, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz, worldid = -1, interiorid = -1, playerid = -1, Float:streamdistance = 600.0, Float:drawdistance = 600.0, STREAMER_TAG_AREA:areaid = -1, priority = 0)
{
    return CreateDynamicObject(modelid, x, y, z, rx, ry, rz, worldid, interiorid , playerid , streamdistance, drawdistance, areaid, priority);
}

Load3DLabels()
{
    CreateDynamic3DTextLabel("{FF0000}[ {FFFFFF}BANKA {FF0000}]\n{FFFFFF}Radno vreme: {FF0000}09:00 do 01:00h\n{FFFFFF}Za ulaz koristite tipku {FF0000}[F]", -1, 1456.7057,-1010.1188,26.8438, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FFFFFF}[ {FF0000}H {FFFFFF}] Banka", -1, 1381.6025,-27.8411,1004.4440, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FF0000}[ {FFFFFF}ZLATARA {FF0000}]\n{FFFFFF}Radno vreme: {FF0000}09:00 do 01:00h\n{FFFFFF}Za ulaz koristite tipku {FF0000}[F]", -1, 2022.3917,-1297.5770,23.9948, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FFFFFF}[ {FF0000}H {FFFFFF}] Zlatara", -1, 1026.3081, 2312.2776, -19.7883, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FF0000}[ {FFFFFF}AUTO SKOLA {FF0000}]\n{FFFFFF}Za ulaz koristite tipku {FF0000}[F]", -1, 1992.1652,-1775.3353,13.7579, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FFFFFF}[ {FF0000}H {FFFFFF}] Dozvole", -1, 1376.9954,1461.3077,-7.7367, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FF0000}[ P U M P A ]\n{FFFFFF}Da naspete gorivo kucajte\n{FF0000}/gorivo", -1, 1004.0422,-937.5357,42.3281, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 25.0);
    CreateDynamic3DTextLabel("{FF0000}[ P U M P A ]\n{FFFFFF}Da naspete gorivo kucajte\n{FF0000}/gorivo", -1, 171.6999,-1923.0776,4.4559, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 25.0);
    CreateDynamic3DTextLabel("{FF0000}[ P U M P A ]\n{FFFFFF}Da naspete gorivo kucajte\n{FF0000}/gorivo", -1, -91.2488,-1169.7260,2.4204, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 25.0);
    CreateDynamic3DTextLabel("{FF0000}[ P U M P A ]\n{FFFFFF}Da naspete gorivo kucajte\n{FF0000}/gorivo", -1, 1942.3732,-1772.7740,13.6406, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 25.0);
    CreateDynamic3DTextLabel("{FF0000}[ P U M P A ]\n{FFFFFF}Da naspete gorivo kucajte\n{FF0000}/gorivo", -1, 1382.2139,460.1810,20.3452, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 25.0);
    CreateDynamic3DTextLabel("{FF0000}[ {FFFFFF}OPSTINA {FF0000}]\n{FFFFFF}Za ulaz koristite tipku {FF0000}[F]", -1, 1478.3827,-1818.1713,13.7188, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FFFFFF}[ {FF0000}H {FFFFFF}] Katalog Vozila", -1, 2006.4457,-2002.2997,13.5869, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FFFFFF}[ {FF0000}H {FFFFFF}] PD Duznost", -1, -0.9769,1704.4146,-24.6042, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FFFFFF}[ {FF0000}H {FFFFFF}] PD Oprema", -1, 5.3104,1713.3081,-24.6135, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FF0000}[ OCISTI DOSIJE ]\n{FFFFFF}Da ocistite dosije igracu kucajte\n{FF0000}/ocistidosije", -1, -4.2782,1705.8209,-24.6057, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FFFFFF}[ {FF0000}H {FFFFFF}] PD Lift", -1, -3.8786,1710.0671,-24.6102, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FF0000}[ {FFFFFF}POLICIJA KROV {FF0000}]\n{FFFFFF}Za ulaz koristite tipku {FF0000}[F]", -1, 1571.8448,-1675.6110,28.3955, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FF0000}[ {FFFFFF}POLICIJA GARAZA {FF0000}]\n{FFFFFF}Za ulaz koristite tipku {FF0000}[F]", -1, 1568.6903,-1690.6263,5.8906, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FFFFFF}[ {FF0000}H {FFFFFF}] Oruzije Dozvola {FF0000}(10.000$)", -1, 7.6308,1704.5901,-24.6044, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FFFFFF}[ {FF0000}H {FFFFFF}] Opstina", -1, -2126.2542,-200.4468,-79.0904, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FF0000}[ HAPSENJE ]\n{FFFFFF}Da uhapsite igraca kucajte\n{FF0000}/uhapsi",-1, 1535.3369,-1674.6057,13.3828,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FFFFFF}[ {FF0000}H {FFFFFF}] SAJ Duznost", -1, 1007.6560,2598.6997,-68.7635, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FFFFFF}[ {FF0000}H {FFFFFF}] SAJ Oprema", -1, 1023.9838,2575.8945,-68.7635, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FF0000}[ OCISTI DOSIJE ]\n{FFFFFF}Da ocistite dosije igracu kucajte\n{FF0000}/ocistidosije", -1, 978.5750,2591.0854,-68.7635, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FFFFFF}[ {FF0000}H {FFFFFF}] Oruzije Dozvola {FF0000}(10.000$)", -1, 996.7521,2570.1353,-68.7635, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FF0000}[ HAPSENJE ]\n{FFFFFF}Da uhapsite igraca kucajte\n{FF0000}/uhapsi",-1, 1247.1675,-1654.1355,13.5729,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FF0000}[ SEF BANKE ]\n{FFFFFF}Da opljackate banku kucajte\n{FF0000}/pljackajbanku",-1, 1391.4470,1.3144,1000.9153,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FF0000}[ SEF ZLATARE ]\n{FFFFFF}Da opljackate zlataru kucajte\n{FF0000}/pljackajzlataru",-1, 1012.1417,2319.8320,-19.7800,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{FF0000}[ LUTRIJA ]\n{FFFFFF}Da uplatite lotto listic kucajte\n{FF0000}/lotto\n\n{FFFFFF}Da podigne lotto dobitak kucajte\n{FF0000}/podignidobitak",-1, 1712.2665,-1143.0616,24.1103,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{FF0000}[ {FFFFFF}BOLNICA {FF0000}]\n{FFFFFF}Za ulaz koristite tipku {FF0000}[F]", -1, 1172.2866,-1323.3385,15.4027, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{FFFFFF}[ {FF0000}H {FFFFFF}] Bolnica", -1, 135.6603,44.7494,3381.0281, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
	// - > Sverc Mafija
	CreateDynamic3DTextLabel("{a39e50}[ POKRETANJE SVERCA ]\n{FFFFFF}Da pokrenete sverc kucajte\n{a39e50}/sverc",-1, 1248.1407,-814.8812,84.1477,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0); // BDT
	CreateDynamic3DTextLabel("{a39e50}[ POKRETANJE SVERCA ]\n{FFFFFF}Da pokrenete sverc kucajte\n{a39e50}/sverc",-1, 1211.3569,-2565.4778,5.7955,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0); // LCN
	// - > Oruzaonice Mafija
	CreateDynamic3DTextLabel("{FFFFFF}[ {FF0000}H {FFFFFF}] BDT Oruzaonica",-1, -2897.7754,-1433.3430,-72.8061,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{FFFFFF}[ {FF0000}H {FFFFFF}] LCN Oruzaonica",-1, -289.8588,2675.0105,-89.6851,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
	// - > Diler i Prerada Bande
	CreateDynamic3DTextLabel("{a39e50}[ DILER ]\n{FFFFFF}Da kupite seme droge kucajte\n{a39e50}/kupiseme",-1, 1938.2871,-1983.6605,13.5469,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{a39e50}[ PRERADA DROGE ]\n{FFFFFF}Da preradite drogu kucajte\n{a39e50}/obradidrogu",-1, -444.5218,-1720.6271,9.3911,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
	// - > Posao
	CreateDynamic3DTextLabel("{36AB00}Posao\n{FFFFFF}Kosac Trave\n\n{36AB00}Da uzmete posao kucajte {FFFFFF}\n/posao",-1, 228.0947,-1408.8477,13.4279, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 15.0);
    CreateDynamic3DTextLabel("{36AB00}Uniforma\n{FFFFFF}Kosac Trave\n\n{36AB00}Da koristite opremu kucajte {FFFFFF}\n/uniforma",-1, 226.2475,-1407.5587,13.4177, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel("{36AB00}Kosac Trave\n\n{FFFFFF}Da pokrenete posao kucajte\n{36AB00}/startjob",-1, 227.6355,-1414.6202,13.4069, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel("{FFFFFF}Ovdje se spawnuju vozila posla {FF0000}Kosac Trave\n{FFFFFF}Tako da ovdje nesmete parkirati.",-1, 231.2347,-1419.4567,13.4143,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{36AB00}Posao\n{FFFFFF}Uber\n\n{36AB00}Da uzmete posao kucajte {FFFFFF}\n/posao",-1, 1752.5144,-1894.0979,13.5574, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 15.0);
    CreateDynamic3DTextLabel("{36AB00}Uniforma\n{FFFFFF}Uber\n\n{36AB00}Da koristite opremu kucajte {FFFFFF}\n/uniforma",-1, 1752.8091,-1903.1075,13.5631, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel("{FFFFFF}Ovdje se spawnuju vozila posla {FF0000}Uber\n{FFFFFF}Tako da ovdje nesmete parkirati.",-1, 1781.2354,-1898.3813,13.3902,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{36AB00}Uber\n\n{FFFFFF}Da pokrenete posao kucajte\n{36AB00}/startjob",-1, 1752.8835,-1898.5668,13.5573, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel("{36AB00}Posao\n{FFFFFF}Pilot\n\n{36AB00}Da uzmete posao kucajte {FFFFFF}\n/posao",-1, 1891.9248,-2328.6655,13.5469, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 15.0);
    CreateDynamic3DTextLabel("{36AB00}Uniforma\n{FFFFFF}Pilot\n\n{36AB00}Da koristite opremu kucajte {FFFFFF}\n/uniforma",-1, 1892.0040,-2325.0579,13.5469, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel("{36AB00}Pilot\n\n{FFFFFF}Da pokrenete posao kucajte\n{36AB00}/startjob",-1, 1892.0985,-2332.3525,13.5469, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel("{FFFFFF}Ovdje se spawnuju vozila posla {FF0000}Pilot\n{FFFFFF}Tako da ovdje nesmete parkirati.",-1, 1916.6616,-2313.9795,13.2511,30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 20.0);
    CreateDynamic3DTextLabel("{36AB00}Posao\n{FFFFFF}Masinovodja\n\n{36AB00}Da uzmete posao kucajte {FFFFFF}\n/posao",-1, 1751.1300,-1943.7557,13.5691, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 15.0);
    CreateDynamic3DTextLabel("{36AB00}Uniforma\n{FFFFFF}Masinovodja\n\n{36AB00}Da koristite opremu kucajte {FFFFFF}\n/uniforma",-1, 1742.9618,-1943.5731,13.5698, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
    CreateDynamic3DTextLabel("{36AB00}Masinovodja\n\n{FFFFFF}Da pokrenete posao kucajte\n{36AB00}/startjob",-1, 1734.9536,-1943.5779,13.5698, 30, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	return 1;
}

LoadPickups()
{
    CreateDynamicPickup(19135, 1, 1456.7057,-1010.1188,26.8438); 					//banka ulaz
 	CreateDynamicPickup(19135, 1, 1370.7448,-38.1494,1000.9133); 					//banka izlaz
 	CreateDynamicPickup(19197, 1, 1381.6025,-27.8411,1004.4440-0.9); 				//banka salter
 	CreateDynamicPickup(19135, 1, 2022.3917,-1297.5770,23.9948); 					//zlatara ulaz
 	CreateDynamicPickup(19135, 1, 1026.2103, 2303.5303, -19.7883); 					//zlatara izlaz
 	CreateDynamicPickup(19197, 1, 1026.3081, 2312.2776, -19.7883-0.9); 				//zlatara salter
 	CreateDynamicPickup(19135, 1, 1992.1652,-1775.3353,13.7579); 					//auto skola ulaz
 	CreateDynamicPickup(19135, 1, 1379.2844,1455.0060,-7.7367); 					//auto skola izlaz
 	CreateDynamicPickup(19197, 1, 1376.9954,1461.3077,-7.7367-0.9); 				//auto skola dozvcle
 	CreateDynamicPickup(1650, 1, 1004.0422,-937.5357,42.3281);                      //pumpa 1
 	CreateDynamicPickup(1650, 1, 171.6999,-1923.0776,4.4559);                       //pumpa 2
 	CreateDynamicPickup(1650, 1, -91.2488,-1169.7260,2.4204);                       //pumpa 3
 	CreateDynamicPickup(1650, 1, 1942.3732,-1772.7740,13.6406);                     //pumpa 4
 	CreateDynamicPickup(1650, 1, 1382.2139,460.1810,20.3452);                       //pumpa 5
 	CreateDynamicPickup(19135, 1, 1478.3827,-1818.1713,13.7188); 					//opstina ulaz
 	CreateDynamicPickup(19135, 1, -2128.9692,-175.9183,-79.0954); 					//opstina izlaz
 	CreateDynamicPickup(19197, 1, 2006.4457,-2002.2997,13.5869-0.9); 				//katalog vozila
 	CreateDynamicPickup(19197, 1, -0.9769,1704.4146,-24.6042-0.9);                  //pd duznost
 	CreateDynamicPickup(19197, 1, 5.3104,1713.3081,-24.6135-0.9);                   //pd oprema
 	CreateDynamicPickup(19197, 1, -4.2782,1705.8209,-24.6057-0.9);                  //ocisti dosije pd
 	CreateDynamicPickup(19197, 1, -3.8786,1710.0671,-24.6102-0.9);                  //lift pd
 	CreateDynamicPickup(19135, 1, 1571.8448,-1675.6110,28.3955); 					//pd ulaz krov
 	CreateDynamicPickup(19135, 1, 1568.6903,-1690.6263,5.8906); 					//pd ulaz garaza
 	CreateDynamicPickup(19197, 1, 7.6308,1704.5901,-24.6044-0.9);                   //oruzije dozvola pd
 	CreateDynamicPickup(19197, 1, -2126.2542,-200.4468,-79.0904-0.9);               //opstina salter
 	CreateDynamicPickup(1247, 1, 1535.3369,-1674.6057,13.3828);               		//uhapsi komanda pd
 	CreateDynamicPickup(19197, 1, 1007.6560,2598.6997,-68.7635-0.9);                //saj duznost
 	CreateDynamicPickup(19197, 1, 1023.9838,2575.8945,-68.7635-0.9);                //saj oprema
    CreateDynamicPickup(19197, 1, 978.5750,2591.0854,-68.7635-0.9);                 //ocisti dosije saj
    CreateDynamicPickup(19197, 1, 996.7521,2570.1353,-68.7635-0.9);                 //oruzije dozvola saj
    CreateDynamicPickup(1247, 1, 1247.1675,-1654.1355,13.5729);               		//uhapsi komanda saj
    CreateDynamicPickup(19197, 1, 1391.4470,1.3144,1000.9153-0.9);              	// pljackajbanku
    CreateDynamicPickup(19197, 1, 1012.1417,2319.8320,-19.7800-0.9);                // pljackajzlataru
    CreateDynamicPickup(19197, 1, 1712.2665,-1143.0616,24.1103-0.9);                // /lotto /podignidobitak
    CreateDynamicPickup(19606, 1, 228.0947,-1408.8477,13.4279);      				//posao kosac trave
    CreateDynamicPickup(19904, 1, 226.2475,-1407.5587,13.4177); 					//Kosac Trave Uniforma
    CreateDynamicPickup(1239, 1, 227.6355,-1414.6202,13.4069); 						//Kosac Trave startjob
    CreateDynamicPickup(19606, 1, 1752.5144,-1894.0979,13.5574);      				//posao uber
    CreateDynamicPickup(19904, 1, 1752.8091,-1903.1075,13.5631); 					//uber Uniforma
    CreateDynamicPickup(1239, 1, 1752.8835,-1898.5668,13.5573); 					//uber startjob
    CreateDynamicPickup(19606, 1, 1891.9248,-2328.6655,13.5469);      				//posao pilot
    CreateDynamicPickup(19904, 1, 1892.0040,-2325.0579,13.5469); 					//pilot Uniforma
    CreateDynamicPickup(1239, 1, 1892.0985,-2332.3525,13.5469); 					//pilot startjob
    CreateDynamicPickup(19606, 1, 1751.1300,-1943.7557,13.5691);      				//posao masinovodja
    CreateDynamicPickup(19904, 1, 1742.9618,-1943.5731,13.5698); 					//masinovodja Uniforma
    CreateDynamicPickup(1239, 1, 1734.9536,-1943.5779,13.5698); 					//masinovodja startjob
    CreateDynamicPickup(1239, 1, 1248.1407,-814.8812,84.1477); 						//sverc bdt
    CreateDynamicPickup(1239, 1, 1211.3569,-2565.4778,5.7955); 						//sverc lcn
    CreateDynamicPickup(1241, 1, -444.5218,-1720.6271,9.3911); 						// /obradidrogu
    CreateDynamicPickup(2061, 1, -2897.7754,-1433.3430,-72.8061); 					//oruzaonica bdt
    CreateDynamicPickup(2061, 1, -289.8588,2675.0105,-89.6851); 					//oruzaonica lcn
    CreateDynamicPickup(19135, 1, 1172.2866,-1323.3385,15.4027); 					//bolnica ulaz
 	CreateDynamicPickup(19135, 1, 163.9172,44.5760,3381.0332); 						//bolnica izlaz
 	CreateDynamicPickup(1240, 1, 135.6603,44.7494,3381.0281); 						//bolnica salter
 	return 1;
}

RolePlayIme(playerid, const zanemari[MAX_PLAYER_NAME] = "-1", bool:senzitivno = true, bool:autoRegulacija = true) // by Slay_
{
	#define SL@Y__KLJUC(%0) ("_V([%0])V_")
	new ime[MAX_PLAYER_NAME] = "\0";
	GetPlayerName(playerid, ime, MAX_PLAYER_NAME);
	if(strcmp(ime, zanemari, senzitivno) == 0 || strcmp(ime, SL@Y__KLJUC(playerid), true) == 0) return (1);
	new s = strlen(ime), povlaka[2], i = (0), znakovi = (0), Zabranjeni_Znakovi[19] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '[', ']', '.', ')', '(', '@', '{', '}', '$' }, Brojac_Slova[2];
	povlaka[0] = strfind(ime, "_", true);
    povlaka[1] = strfind(ime, "_", true, povlaka[0]+1);
	if(povlaka[0] == -1) return (2);
	else if(povlaka[1] != -1) return (3);
	else if(ime[0] == '_' || ime[s-1] == '_') return (7);
	else
	{
		do
		{
			while(znakovi < sizeof(Zabranjeni_Znakovi))
			{
				if(ime[i] == Zabranjeni_Znakovi[znakovi]) return (4);
				++ znakovi;
			}
			if(i == 0 || i == povlaka[0]+1)
			{
				if(ime[i] < 'A' || ime[i] > 'Z')
				{
					if(autoRegulacija == false) return (5);
					else if(autoRegulacija != false)
					{
						SetPlayerName(playerid, SL@Y__KLJUC(playerid));
						ime[i] = toupper(ime[i]);
					}
				}
			}
			else if(i != 0 && i != povlaka[0])
			{
				if(ime[i] < 'a' || ime[i] > 'z')
				{
					if(autoRegulacija == false) return (6);
					else if(autoRegulacija != false)
					{
						SetPlayerName(playerid, SL@Y__KLJUC(playerid));
						ime[i] = tolower(ime[i]);
					}
				}
				if(i != 0 && i < povlaka[0]+1) ++ Brojac_Slova[0];
				else if(i != 0 && i > povlaka[0]+1) ++ Brojac_Slova[1];
			}
			++ i;
		}
		while(i < s && ime[i] != EOS);
		if(Brojac_Slova[0] < 1) return (8);
		else if(Brojac_Slova[1] < 2) return (9);
		if(autoRegulacija == true) SetPlayerName(playerid, ime);
	}
	return (1);
}

GetVipRank(rank)
{
	new admin[25];
	switch(rank)
	{
		case 0: admin = "Nema";
		case 1: admin = "Bronze Vip";
		case 2: admin = "Silver Vip";
		case 3: admin = "Gold Vip";
		case 4: admin = "Platinium Vip";
	}
	return admin;
}

OrgIme(id)
{
	new orgname[40];
	if(id == 0) orgname = "Civil";
	else format(orgname, sizeof(orgname), "%s", OrgInfo[id][oIme]);
	return orgname;
}

PosaoIme(id)
{
	new pname[32];
	if(id == 0) pname = "Nezaposlen";
	else if(id == 1) pname = "Kosac Trave";
	else if(id == 2) pname = "Uber";
	else if(id == 3) pname = "Pilot";
	else if(id == 4) pname = "Masinovodja";
	return pname;
}

GetStaffRankName(rank)
{
	new admin[25];
	switch(rank)
	{
		case 1: admin = "Admin Level 1";
		case 2: admin = "Admin Level 2";
		case 3: admin = "Admin Level 3";
		case 4: admin = "Head Admin";
		case 5: admin = "Direktor";
		case 6: admin = "Vlasnik";
	}
	return admin;
}

AkcenatIme(id)
{
    new akcenat[20];
	switch(id)
	{
		case 0: akcenat = "[Nema]";
		case 1: akcenat = "[Engleski]";
		case 2: akcenat = "[Ruski]";
		case 3: akcenat = "[Nemacki]";
		case 4: akcenat = "[Francuski]";
		case 5: akcenat = "[Talijanski]";
		case 6: akcenat = "[Albanski]";
		case 7: akcenat = "[Italijanski]";
		case 8: akcenat = "[Spanski]";
	}
	return akcenat;
}

BojaIgraca(playerid)
{
	if(IsPlayerConnected(playerid))
	{
 		if(Ulogovan[playerid] == 0) SetPlayerColor(playerid, 0xFFFFFF00);
	    else if(Trazeni_Level[playerid] > 0) SetPlayerColor(playerid, 0xf45935FF);
		else if(PolicijaDuznost[playerid] == 1 && PI[playerid][Clan] == 1) SetPlayerColor(playerid, 0x0084e3FF);
		else if(PolicijaDuznost[playerid] == 1 && PI[playerid][Clan] == 2) SetPlayerColor(playerid, 0x8D8DFFFF);
	    else if(AdminDuty[playerid] == 1) SetPlayerColor(playerid, 0xFF0000FF);
		else if(PI[playerid][Vip] > 0) SetPlayerColor(playerid, 0x1fde79FF);
		else SetPlayerColor(playerid, 0xFFFFFF00);
	}
}

UpdateBanka(playerid)
{
	new string[60];
	format(string, sizeof(string), "%d$", PI[playerid][NovacBanka]);
	PlayerTextDrawSetString(playerid, BankaTD[playerid], string);
	return 1;
}

UpdateZlato(playerid)
{
	new string[60];
	format(string, sizeof(string), "%dG", PI[playerid][Zlato]);
	PlayerTextDrawSetString(playerid, ZlatoTD[playerid], string);
	return 1;
}

KreirajRadar(ra_id, bool:vrsta)
{
	if(vrsta == true)
	{
		if(RadarInfo[ra_id][raPostavljen] == 1)
		{
			new string[156];
			format(string, sizeof(string), "{FF0000}[ R A D A R ]\n{FFFFFF}ID: {FF0000}%d\n{FFFFFF}Ogranicenje brzine\n{FF0000}%dkm/h", ra_id, RadarInfo[ra_id][raBrzina]);
			RadarInfo[ra_id][raObjekat] = CreateDynamicObject(RADAR_OBJEKAT, RadarInfo[ra_id][raPozX], RadarInfo[ra_id][raPozY], RadarInfo[ra_id][raPozZ], RadarInfo[ra_id][raRot_X], RadarInfo[ra_id][raRot_Y], RadarInfo[ra_id][raRot_Z], 0, 0,_,_);
			Radar_3D[ra_id] = CreateDynamic3DTextLabel(string, -1, RadarInfo[ra_id][raPozX], RadarInfo[ra_id][raPozY], RadarInfo[ra_id][raPozZ]+4.5, 20.0,_,_,_, 0, 0,_,_);
		}
	}
	else if(vrsta == false)
	{
		new string[156];
		format(string, sizeof(string), "{FF0000}[ R A D A R ]\n{FFFFFF}ID: {FF0000}%d\n{FFFFFF}Ogranicenje brzine\n{FF0000}%dkm/h", ra_id, RadarInfo[ra_id][raBrzina]);
		UpdateDynamic3DTextLabelText(Radar_3D[ra_id], -1, string);
	}
	return 1;
}

RenamePlayer(playerid, name[])
{
	SetPlayerName(playerid, name);
	
	new hash_pass[64];
	strmid(PI[playerid][Password], hash_pass, 0, strlen(hash_pass), 64);
	bcrypt_hash(playerid, "OnPasswordHash", hash_pass, BCRYPT_COST);

	mysql_tqueryEx(SQL, "UPDATE `users` SET `Ime` = '%e', `Password` = '%e' WHERE `SQLID` = '%d'", name, PI[playerid][Password], PI[playerid][SQLID]);
	
	if(PI[playerid][Kuca] != -1)
	{
        strmid(KucaInfo[PI[playerid][Kuca]][kVlasnik], name, 0, strlen(name), 255);
        mysql_tqueryEx(SQL, "UPDATE `houses` SET `Vlasnik` = '%s' WHERE `SQLID` = '%d'", name, PI[playerid][Kuca]);
        KuceLP(PI[playerid][Kuca]);
	}
	if(PI[playerid][Stan] != -1)
	{
        strmid(StanInfo[PI[playerid][Stan]][sVlasnik], name, 0, strlen(name), 255);
        mysql_tqueryEx(SQL, "UPDATE `apartments` SET `Vlasnik` = '%s' WHERE `SQLID` = '%d'", name, PI[playerid][Stan]);
        StanLP(PI[playerid][Stan]);
	}
	if(PI[playerid][Firma] != -1)
	{
        strmid(FirmaInfo[PI[playerid][Firma]][fVlasnik], name, 0, strlen(name), 255);
        mysql_tqueryEx(SQL, "UPDATE `business` SET `Vlasnik` = '%s' WHERE `SQLID` = '%d'", name, PI[playerid][Firma]);
        FirmaLabelIPickup(PI[playerid][Firma]);
	}
    if(PI[playerid][Vozilo1] != -1) 
    {
        strmid(VoziloInfo[PI[playerid][Vozilo1]][vVlasnik], name, 0, strlen(name), 255);
        mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Vlasnik` = '%s' WHERE `SQLID` = '%d'", name, PI[playerid][Vozilo1]);
    }
    if(PI[playerid][Vozilo2] != -1) 
    {
        strmid(VoziloInfo[PI[playerid][Vozilo2]][vVlasnik], name, 0, strlen(name), 255);
        mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Vlasnik` = '%s' WHERE `SQLID` = '%d'", name, PI[playerid][Vozilo2]);
    }
    if(PI[playerid][Vozilo3] != -1) 
    {
        strmid(VoziloInfo[PI[playerid][Vozilo3]][vVlasnik], name, 0, strlen(name), 255);
        mysql_tqueryEx(SQL, "UPDATE `vehicles` SET `Vlasnik` = '%s' WHERE `SQLID` = '%d'", name, PI[playerid][Vozilo3]);
    }
	return 1;
}

BiltenTD(playerid,bool:show)
{
    if(show == true)
    {
    UnistiTDs(playerid);
    biltentd[playerid][0] = CreatePlayerTextDraw(playerid, -71.333320, -65.266677, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][0], 787.000000, 559.000000);//480
    PlayerTextDrawAlignment(playerid, biltentd[playerid][0], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][0], 337059071);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][0], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][0], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][0], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][0], 0);
    /*biltentd[playerid][0] = CreatePlayerTextDraw(playerid, -102.333312, 208.511108, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][0], 820.000000, 559.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][0], 1);
    PlayerTextDrawColor(playerid, biltentd[playerid][0], 337059071);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][0], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][0], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][0], 4);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][0], 0);*/

    biltentd[playerid][1] = CreatePlayerTextDraw(playerid, -66.666648, 59.177764, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][1], 800.000000, 271.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][1], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][1], 457203199);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][1], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][1], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][1], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][1], 0);

    biltentd[playerid][2] = CreatePlayerTextDraw(playerid, -20.666658, 312.951416, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][2], 463.000000, 14.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][2], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][2], 355022079);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][2], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][2], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][2], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][2], 0);

    biltentd[playerid][3] = CreatePlayerTextDraw(playerid, -20.733327, 297.188415, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][3], 463.000000, 14.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][3], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][3], 337059071);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][3], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][3], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][3], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][3], 0);

    biltentd[playerid][4] = CreatePlayerTextDraw(playerid, -20.666662, 281.466247, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][4], 463.000000, 14.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][4], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][4], 355022079);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][4], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][4], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][4], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][4], 0);

    biltentd[playerid][5] = CreatePlayerTextDraw(playerid, -20.766662, 265.663146, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][5], 463.000000, 14.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][5], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][5], 337059071);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][5], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][5], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][5], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][5], 0);

    biltentd[playerid][6] = CreatePlayerTextDraw(playerid, -20.666662, 249.878372, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][6], 463.000000, 14.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][6], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][6], 355022079);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][6], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][6], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][6], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][6], 0);

    biltentd[playerid][7] = CreatePlayerTextDraw(playerid, -20.833332, 234.723190, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][7], 463.000000, 14.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][7], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][7], 337059071);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][7], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][7], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][7], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][7], 0);

    biltentd[playerid][8] = CreatePlayerTextDraw(playerid, -20.799997, 218.656692, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][8], 463.000000, 14.580013);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][8], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][8], 355022079);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][8], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][8], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][8], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][8], 0);

    biltentd[playerid][9] = CreatePlayerTextDraw(playerid, -20.700000, 202.881820, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][9], 463.000000, 14.500011);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][9], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][9], 337059071);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][9], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][9], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][9], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][9], 0);

    biltentd[playerid][10] = CreatePlayerTextDraw(playerid, -20.700000, 187.332946, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][10], 463.000000, 14.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][10], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][10], 355022079);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][10], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][10], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][10], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][10], 0);

    biltentd[playerid][11] = CreatePlayerTextDraw(playerid, -20.933334, 171.484771, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][11], 463.000000, 14.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][11], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][11], 337059071);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][11], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][11], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][11], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][11], 0);

    biltentd[playerid][12] = CreatePlayerTextDraw(playerid, -20.899997, 156.051391, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][12], 463.000000, 14.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][12], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][12], 355022079);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][12], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][12], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][12], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][12], 0);

    biltentd[playerid][13] = CreatePlayerTextDraw(playerid, -20.666664, 139.944030, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][13], 463.000000, 14.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][13], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][13], 337059071);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][13], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][13], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][13], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][13], 0);

    biltentd[playerid][14] = CreatePlayerTextDraw(playerid, -20.866659, 124.155090, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][14], 463.000000, 14.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][14], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][14], 355022079);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][14], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][14], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][14], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][14], 0);

    biltentd[playerid][15] = CreatePlayerTextDraw(playerid, -20.866659, 108.255332, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][15], 463.000000, 14.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][15], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][15], 337059071);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][15], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][15], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][15], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][15], 0);

    biltentd[playerid][16] = CreatePlayerTextDraw(playerid, -20.866659, 91.955581, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][16], 463.000000, 14.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][16], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][16], 355022079);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][16], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][16], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][16], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][16], 0);

    biltentd[playerid][17] = CreatePlayerTextDraw(playerid, 62.000030, 91.203659, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][17], 1.000000, 236.389785);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][17], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][17], 457203199);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][17], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][17], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][17], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][17], 0);

    biltentd[playerid][18] = CreatePlayerTextDraw(playerid, 30.166666, 93.362945, "1GGGG-MM-DD_HH:MM:SS");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][18], 0.116663, 1.193480);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][18], 0.000000, 295.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][18], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][18], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][18], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][18], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][18], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][18], 1);

    biltentd[playerid][19] = CreatePlayerTextDraw(playerid, 30.166666, 108.462715, "2GGGG-MM-DD_HH:MM:SS");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][19], 0.116663, 1.193480);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][19], 0.000000, 295.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][19], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][19], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][19], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][19], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][19], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][19], 1);

    biltentd[playerid][20] = CreatePlayerTextDraw(playerid, 30.166666, 125.162460, "3GGGG-MM-DD_HH:MM:SS");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][20], 0.116663, 1.193480);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][20], 0.000000, 295.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][20], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][20], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][20], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][20], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][20], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][20], 1);

    biltentd[playerid][21] = CreatePlayerTextDraw(playerid, 30.166666, 140.963211, "4GGGG-MM-DD_HH:MM:SS");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][21], 0.116663, 1.193480);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][21], 0.000000, 295.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][21], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][21], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][21], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][21], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][21], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][21], 1);

    biltentd[playerid][22] = CreatePlayerTextDraw(playerid, 30.166666, 156.764175, "5GGGG-MM-DD_HH:MM:SS");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][22], 0.116663, 1.193480);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][22], 0.000000, 295.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][22], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][22], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][22], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][22], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][22], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][22], 1);

    biltentd[playerid][23] = CreatePlayerTextDraw(playerid, 30.166666, 172.365127, "6GGGG-MM-DD_HH:MM:SS");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][23], 0.116663, 1.193480);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][23], 0.000000, 295.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][23], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][23], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][23], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][23], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][23], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][23], 1);

    biltentd[playerid][24] = CreatePlayerTextDraw(playerid, 30.166666, 188.266098, "7GGGG-MM-DD_HH:MM:SS");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][24], 0.116663, 1.193480);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][24], 0.000000, 295.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][24], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][24], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][24], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][24], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][24], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][24], 1);

    biltentd[playerid][25] = CreatePlayerTextDraw(playerid, 30.166666, 204.067062, "8GGGG-MM-DD_HH:MM:SS");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][25], 0.116663, 1.193480);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][25], 0.000000, 295.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][25], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][25], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][25], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][25], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][25], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][25], 1);

    biltentd[playerid][26] = CreatePlayerTextDraw(playerid, 30.166666, 219.768020, "9GGGG-MM-DD_HH:MM:SS");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][26], 0.116663, 1.193480);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][26], 0.000000, 295.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][26], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][26], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][26], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][26], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][26], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][26], 1);

    biltentd[playerid][27] = CreatePlayerTextDraw(playerid, 30.166666, 235.468978, "10GGGG-MM-DD_HH:MM:SS");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][27], 0.116663, 1.193480);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][27], 0.000000, 295.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][27], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][27], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][27], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][27], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][27], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][27], 1);

    biltentd[playerid][28] = CreatePlayerTextDraw(playerid, 30.166666, 250.769912, "11GGGG-MM-DD_HH:MM:SS");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][28], 0.116663, 1.193480);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][28], 0.000000, 295.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][28], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][28], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][28], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][28], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][28], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][28], 1);

    biltentd[playerid][29] = CreatePlayerTextDraw(playerid, 30.166666, 266.670867, "12GGGG-MM-DD_HH:MM:SS");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][29], 0.116663, 1.193480);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][29], 0.000000, 295.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][29], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][29], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][29], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][29], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][29], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][29], 1);

    biltentd[playerid][30] = CreatePlayerTextDraw(playerid, 30.166666, 282.271820, "13GGGG-MM-DD_HH:MM:SS");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][30], 0.116663, 1.193480);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][30], 0.000000, 295.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][30], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][30], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][30], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][30], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][30], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][30], 1);

    biltentd[playerid][31] = CreatePlayerTextDraw(playerid, 30.166666, 298.172790, "14GGGG-MM-DD_HH:MM:SS");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][31], 0.116663, 1.193480);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][31], 0.000000, 295.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][31], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][31], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][31], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][31], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][31], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][31], 1);

    biltentd[playerid][32] = CreatePlayerTextDraw(playerid, 30.166666, 313.873748, "15GGGG-MM-DD_HH:MM:SS");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][32], 0.116663, 1.193480);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][32], 0.000000, 295.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][32], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][32], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][32], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][32], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][32], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][32], 1);

    biltentd[playerid][33] = CreatePlayerTextDraw(playerid, 67.000007, 94.907432, "Barcelona_-_Real_Madrid");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][33], 0.119666, 0.845035);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][33], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][33], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][33], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][33], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][33], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][33], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][33], true);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][33], 195.000000, 10.000000);
   // PlayerTextDrawTextSize(playerid, biltentd[playerid][33], 195.000000, 0.000000);

    biltentd[playerid][34] = CreatePlayerTextDraw(playerid, 67.000007, 110.607192, "Inter_-_Juventus");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][34], 0.119666, 0.845035);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][34], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][34], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][34], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][34], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][34], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][34], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][34], true);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][34], 195.000000, 10.000000);

    biltentd[playerid][35] = CreatePlayerTextDraw(playerid, 67.000007, 126.906944, "Lazio_-_Roma");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][35], 0.119666, 0.845035);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][35], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][35], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][35], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][35], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][35], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][35], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][35], true);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][35], 195.000000, 10.000000);

    biltentd[playerid][36] = CreatePlayerTextDraw(playerid, 67.000007, 142.607818, "Dinamo_Zagreb_-_Hajduk");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][36], 0.119666, 0.845035);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][36], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][36], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][36], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][36], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][36], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][36], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][36], true);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][36], 195.000000, 10.000000);

    biltentd[playerid][37] = CreatePlayerTextDraw(playerid, 67.000007, 158.908813, "TEAM1_-_TEAM2");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][37], 0.119666, 0.845035);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][37], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][37], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][37], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][37], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][37], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][37], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][37], true);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][37], 195.000000, 10.000000);

    biltentd[playerid][38] = CreatePlayerTextDraw(playerid, 67.000007, 174.309753, "TEAM3_-_TEAM4");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][38], 0.119666, 0.845035);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][38], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][38], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][38], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][38], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][38], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][38], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][38], true);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][38], 195.000000, 10.000000);

    biltentd[playerid][39] = CreatePlayerTextDraw(playerid, 67.000007, 190.410736, "TEAM5_-_TEAM6");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][39], 0.119666, 0.845035);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][39], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][39], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][39], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][39], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][39], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][39], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][39], true);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][39], 195.000000, 10.000000);

    biltentd[playerid][40] = CreatePlayerTextDraw(playerid, 67.000007, 206.111694, "TEAM7_-_TEAM8");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][40], 0.119666, 0.845035);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][40], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][40], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][40], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][40], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][40], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][40], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][40], true);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][40], 195.000000, 10.000000);

    biltentd[playerid][41] = CreatePlayerTextDraw(playerid, 67.000007, 221.912658, "TEAM9_-_TEAM10");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][41], 0.119666, 0.845035);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][41], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][41], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][41], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][41], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][41], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][41], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][41], true);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][41], 195.000000, 10.000000);

    biltentd[playerid][42] = CreatePlayerTextDraw(playerid, 67.000007, 237.313598, "TEAM11_-_TEAM12");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][42], 0.119666, 0.845035);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][42], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][42], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][42], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][42], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][42], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][42], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][42], true);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][42], 195.000000, 10.000000);

    biltentd[playerid][43] = CreatePlayerTextDraw(playerid, 67.000007, 252.614532, "TEAM13_-_TEAM14");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][43], 0.119666, 0.845035);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][43], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][43], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][43], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][43], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][43], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][43], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][43], true);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][43], 195.000000, 10.000000);

    biltentd[playerid][44] = CreatePlayerTextDraw(playerid, 67.000007, 268.515502, "TEAM15_-_TEAM16");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][44], 0.119666, 0.845035);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][44], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][44], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][44], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][44], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][44], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][44], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][44], true);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][44], 195.000000, 10.000000);

    biltentd[playerid][45] = CreatePlayerTextDraw(playerid, 67.000007, 284.316467, "TEAM17_-_TEAM18");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][45], 0.119666, 0.845035);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][45], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][45], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][45], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][45], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][45], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][45], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][45], true);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][45], 195.000000, 10.000000);

    biltentd[playerid][46] = CreatePlayerTextDraw(playerid, 67.000007, 300.317443, "TEAM19_-_TEAM20");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][46], 0.119666, 0.845035);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][46], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][46], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][46], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][46], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][46], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][46], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][46], true);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][46], 195.000000, 10.000000);

    biltentd[playerid][47] = CreatePlayerTextDraw(playerid, 67.000007, 315.618377, "TEAM21_-_TEAM22");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][47], 0.119666, 0.845035);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][47], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][47], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][47], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][47], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][47], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][47], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][47], true);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][47], 195.000000, 10.000000);

    biltentd[playerid][48] = CreatePlayerTextDraw(playerid, -3.333302, 76.073898, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][48], 446.000000, 14.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][48], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][48], 337059071);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][48], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][48], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][48], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][48], 0);

    biltentd[playerid][49] = CreatePlayerTextDraw(playerid, 61.900035, 68.448150, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][49], 1.000000, 35.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][49], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][49], 457203199);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][49], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][49], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][49], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][49], 0);

    biltentd[playerid][50] = CreatePlayerTextDraw(playerid, -141.966644, -121.444427, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][50], 1.090000, 28.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][50], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][50], 457203199);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][50], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][50], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][50], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][50], 0);

    biltentd[playerid][51] = CreatePlayerTextDraw(playerid, 197.333251, 68.033348, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][51], 1.000000, 260.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][51], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][51], 457203199);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][51], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][51], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][51], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][51], 0);

    biltentd[playerid][52] = CreatePlayerTextDraw(playerid, 7.799993, 78.540710, "VRIJEME");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][52], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][52], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][52], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][52], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][52], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][52], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][52], 1);

    biltentd[playerid][53] = CreatePlayerTextDraw(playerid, 90.933288, 78.325904, "VIBE_ROLEPLAY");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][53], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][53], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][53], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][53], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][53], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][53], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][53], 1);

    biltentd[playerid][54] = CreatePlayerTextDraw(playerid, 209.666656, 78.340736, "ID");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][54], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][54], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][54], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][54], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][54], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][54], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][54], 1);

    biltentd[playerid][55] = CreatePlayerTextDraw(playerid, 281.833526, 68.448135, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][55], 1.000000, 260.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][55], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][55], 457203199);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][55], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][55], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][55], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][55], 0);

    biltentd[playerid][56] = CreatePlayerTextDraw(playerid, 242.400238, 78.470367, "1");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][56], 0.189998, 0.886295);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][56], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][56], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][56], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][56], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][56], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][56], 1);

    biltentd[playerid][57] = CreatePlayerTextDraw(playerid, 214.200057, 94.188873, "999");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][57], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][57], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][57], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][57], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][57], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][57], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][57], 1);

    biltentd[playerid][58] = CreatePlayerTextDraw(playerid, 214.200057, 110.288627, "999");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][58], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][58], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][58], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][58], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][58], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][58], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][58], 1);

    biltentd[playerid][59] = CreatePlayerTextDraw(playerid, 214.200057, 126.488388, "999");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][59], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][59], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][59], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][59], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][59], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][59], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][59], 1);

    biltentd[playerid][60] = CreatePlayerTextDraw(playerid, 214.200057, 142.089218, "999");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][60], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][60], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][60], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][60], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][60], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][60], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][60], 1);

    biltentd[playerid][61] = CreatePlayerTextDraw(playerid, 214.200057, 158.090194, "999");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][61], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][61], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][61], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][61], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][61], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][61], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][61], 1);

    biltentd[playerid][62] = CreatePlayerTextDraw(playerid, 214.200057, 174.191177, "999");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][62], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][62], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][62], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][62], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][62], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][62], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][62], 1);

    biltentd[playerid][63] = CreatePlayerTextDraw(playerid, 214.200057, 189.792129, "999");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][63], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][63], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][63], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][63], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][63], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][63], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][63], 1);

    biltentd[playerid][64] = CreatePlayerTextDraw(playerid, 214.200057, 205.693099, "999");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][64], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][64], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][64], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][64], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][64], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][64], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][64], 1);

    biltentd[playerid][65] = CreatePlayerTextDraw(playerid, 214.200057, 221.594070, "999");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][65], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][65], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][65], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][65], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][65], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][65], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][65], 1);

    biltentd[playerid][66] = CreatePlayerTextDraw(playerid, 214.200057, 237.295028, "999");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][66], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][66], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][66], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][66], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][66], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][66], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][66], 1);

    biltentd[playerid][67] = CreatePlayerTextDraw(playerid, 214.200057, 267.796875, "999");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][67], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][67], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][67], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][67], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][67], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][67], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][67], 1);

    biltentd[playerid][68] = CreatePlayerTextDraw(playerid, 214.200057, 252.595962, "999");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][68], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][68], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][68], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][68], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][68], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][68], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][68], 1);

    biltentd[playerid][69] = CreatePlayerTextDraw(playerid, 214.200057, 283.997863, "999");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][69], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][69], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][69], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][69], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][69], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][69], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][69], 1);

    biltentd[playerid][70] = CreatePlayerTextDraw(playerid, 214.200057, 299.698822, "999");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][70], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][70], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][70], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][70], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][70], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][70], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][70], 1);

    biltentd[playerid][71] = CreatePlayerTextDraw(playerid, 214.200057, 314.899749, "999");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][71], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][71], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][71], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][71], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][71], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][71], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][71], 1);

    biltentd[playerid][72] = CreatePlayerTextDraw(playerid, 1777.866943, -583.622314, "1");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][72], 0.232997, 0.936294);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][72], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][72], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][72], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][72], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][72], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][72], 1);

    biltentd[playerid][73] = CreatePlayerTextDraw(playerid, 311.135040, 67.618499, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][73], 1.000000, 260.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][73], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][73], 457203199);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][73], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][73], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][73], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][73], 0);

    biltentd[playerid][74] = CreatePlayerTextDraw(playerid, 242.567947, 94.474052, "2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][74], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][74], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][74], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][74], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][74], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][74], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][74], 1);

    biltentd[playerid][75] = CreatePlayerTextDraw(playerid, 242.567947, 110.573806, "2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][75], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][75], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][75], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][75], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][75], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][75], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][75], 1);

    biltentd[playerid][76] = CreatePlayerTextDraw(playerid, 242.567947, 126.873558, "2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][76], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][76], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][76], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][76], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][76], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][76], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][76], 1);

    biltentd[playerid][77] = CreatePlayerTextDraw(playerid, 242.567947, 142.974456, "2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][77], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][77], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][77], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][77], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][77], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][77], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][77], 1);

    biltentd[playerid][78] = CreatePlayerTextDraw(playerid, 242.567947, 158.875427, "2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][78], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][78], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][78], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][78], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][78], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][78], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][78], 1);

    biltentd[playerid][79] = CreatePlayerTextDraw(playerid, 242.567947, 174.476379, "2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][79], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][79], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][79], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][79], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][79], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][79], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][79], 1);

    biltentd[playerid][80] = CreatePlayerTextDraw(playerid, 242.567947, 190.077331, "2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][80], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][80], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][80], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][80], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][80], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][80], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][80], 1);

    biltentd[playerid][81] = CreatePlayerTextDraw(playerid, 242.567947, 206.278320, "2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][81], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][81], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][81], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][81], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][81], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][81], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][81], 1);

    biltentd[playerid][82] = CreatePlayerTextDraw(playerid, 242.567947, 221.779266, "2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][82], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][82], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][82], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][82], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][82], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][82], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][82], 1);

    biltentd[playerid][83] = CreatePlayerTextDraw(playerid, 242.567947, 237.580230, "2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][83], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][83], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][83], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][83], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][83], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][83], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][83], 1);

    biltentd[playerid][84] = CreatePlayerTextDraw(playerid, 242.567947, 253.081176, "2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][84], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][84], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][84], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][84], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][84], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][84], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][84], 1);

    biltentd[playerid][85] = CreatePlayerTextDraw(playerid, 242.567947, 268.382110, "2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][85], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][85], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][85], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][85], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][85], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][85], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][85], 1);

    biltentd[playerid][86] = CreatePlayerTextDraw(playerid, 242.567947, 283.983062, "2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][86], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][86], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][86], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][86], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][86], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][86], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][86], 1);

    biltentd[playerid][87] = CreatePlayerTextDraw(playerid, 242.901275, 299.969238, "2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][87], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][87], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][87], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][87], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][87], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][87], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][87], 1);

    biltentd[playerid][88] = CreatePlayerTextDraw(playerid, 242.567947, 315.785003, "2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][88], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][88], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][88], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][88], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][88], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][88], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][88], 1);

    biltentd[playerid][89] = CreatePlayerTextDraw(playerid, 2256.234619, -759.533996, "X");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][89], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][89], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][89], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][89], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][89], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][89], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][89], 1);

    biltentd[playerid][90] = CreatePlayerTextDraw(playerid, 1372.234497, -421.962829, "X");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][90], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][90], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][90], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][90], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][90], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][90], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][90], 1);

    biltentd[playerid][91] = CreatePlayerTextDraw(playerid, 229.566619, 70.107414, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][91], 1.000000, 260.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][91], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][91], 457203199);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][91], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][91], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][91], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][91], 0);

    biltentd[playerid][92] = CreatePlayerTextDraw(playerid, 255.233322, 69.692581, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][92], 1.000000, 260.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][92], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][92], 457203199);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][92], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][92], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][92], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][92], 0);

    biltentd[playerid][93] = CreatePlayerTextDraw(playerid, 268.701843, 78.470367, "X");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][93], 0.189998, 0.886295);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][93], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][93], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][93], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][93], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][93], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][93], 1);

    biltentd[playerid][94] = CreatePlayerTextDraw(playerid, 268.869537, 94.474052, "3.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][94], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][94], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][94], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][94], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][94], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][94], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][94], 1);

    biltentd[playerid][95] = CreatePlayerTextDraw(playerid, 268.869537, 110.873802, "3.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][95], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][95], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][95], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][95], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][95], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][95], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][95], 1);

    biltentd[playerid][96] = CreatePlayerTextDraw(playerid, 268.869537, 126.973556, "3.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][96], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][96], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][96], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][96], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][96], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][96], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][96], 1);

    biltentd[playerid][97] = CreatePlayerTextDraw(playerid, 268.869537, 142.974456, "3.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][97], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][97], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][97], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][97], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][97], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][97], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][97], 1);

    biltentd[playerid][98] = CreatePlayerTextDraw(playerid, 268.869537, 159.075439, "3.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][98], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][98], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][98], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][98], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][98], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][98], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][98], 1);

    biltentd[playerid][99] = CreatePlayerTextDraw(playerid, 268.869537, 174.676391, "3.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][99], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][99], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][99], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][99], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][99], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][99], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][99], 1);

    biltentd[playerid][100] = CreatePlayerTextDraw(playerid, 268.869537, 190.077331, "3.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][100], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][100], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][100], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][100], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][100], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][100], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][100], 1);

    biltentd[playerid][101] = CreatePlayerTextDraw(playerid, 268.869537, 206.278320, "3.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][101], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][101], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][101], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][101], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][101], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][101], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][101], 1);

    biltentd[playerid][102] = CreatePlayerTextDraw(playerid, 268.869537, 221.979278, "3.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][102], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][102], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][102], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][102], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][102], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][102], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][102], 1);

    biltentd[playerid][103] = CreatePlayerTextDraw(playerid, 268.869537, 237.380218, "3.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][103], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][103], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][103], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][103], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][103], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][103], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][103], 1);

    biltentd[playerid][104] = CreatePlayerTextDraw(playerid, 268.869537, 253.081176, "3.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][104], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][104], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][104], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][104], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][104], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][104], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][104], 1);

    biltentd[playerid][105] = CreatePlayerTextDraw(playerid, 268.869537, 268.482116, "3.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][105], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][105], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][105], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][105], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][105], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][105], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][105], 1);

    biltentd[playerid][106] = CreatePlayerTextDraw(playerid, 268.869537, 284.383087, "3.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][106], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][106], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][106], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][106], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][106], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][106], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][106], 1);

    biltentd[playerid][107] = CreatePlayerTextDraw(playerid, 268.869537, 300.084045, "3.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][107], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][107], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][107], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][107], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][107], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][107], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][107], 1);

    biltentd[playerid][108] = CreatePlayerTextDraw(playerid, 268.869537, 315.484985, "3.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][108], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][108], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][108], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][108], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][108], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][108], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][108], 1);

    biltentd[playerid][109] = CreatePlayerTextDraw(playerid, 296.903564, 78.470367, "2");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][109], 0.189998, 0.886295);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][109], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][109], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][109], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][109], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][109], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][109], 1);

    biltentd[playerid][110] = CreatePlayerTextDraw(playerid, 296.671234, 94.474052, "1.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][110], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][110], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][110], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][110], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][110], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][110], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][110], 1);

    biltentd[playerid][111] = CreatePlayerTextDraw(playerid, 296.671234, 110.773803, "1.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][111], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][111], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][111], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][111], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][111], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][111], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][111], 1);

    biltentd[playerid][112] = CreatePlayerTextDraw(playerid, 296.671234, 127.473556, "1.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][112], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][112], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][112], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][112], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][112], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][112], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][112], 1);

    biltentd[playerid][113] = CreatePlayerTextDraw(playerid, 296.671234, 142.974456, "1.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][113], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][113], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][113], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][113], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][113], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][113], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][113], 1);

    biltentd[playerid][114] = CreatePlayerTextDraw(playerid, 296.671234, 158.775421, "1.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][114], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][114], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][114], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][114], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][114], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][114], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][114], 1);

    biltentd[playerid][115] = CreatePlayerTextDraw(playerid, 296.671234, 174.476379, "1.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][115], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][115], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][115], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][115], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][115], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][115], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][115], 1);

    biltentd[playerid][116] = CreatePlayerTextDraw(playerid, 296.671234, 190.277343, "1.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][116], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][116], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][116], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][116], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][116], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][116], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][116], 1);

    biltentd[playerid][117] = CreatePlayerTextDraw(playerid, 296.671234, 206.378326, "1.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][117], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][117], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][117], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][117], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][117], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][117], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][117], 1);

    biltentd[playerid][118] = CreatePlayerTextDraw(playerid, 296.671234, 221.879272, "1.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][118], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][118], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][118], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][118], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][118], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][118], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][118], 1);

    biltentd[playerid][119] = CreatePlayerTextDraw(playerid, 296.671234, 237.580230, "1.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][119], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][119], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][119], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][119], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][119], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][119], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][119], 1);

    biltentd[playerid][120] = CreatePlayerTextDraw(playerid, 296.671234, 252.781158, "1.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][120], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][120], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][120], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][120], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][120], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][120], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][120], 1);

    biltentd[playerid][121] = CreatePlayerTextDraw(playerid, 296.671234, 268.482116, "1.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][121], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][121], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][121], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][121], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][121], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][121], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][121], 1);

    biltentd[playerid][122] = CreatePlayerTextDraw(playerid, 296.671234, 284.783111, "1.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][122], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][122], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][122], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][122], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][122], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][122], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][122], 1);

    biltentd[playerid][123] = CreatePlayerTextDraw(playerid, 296.671234, 300.484069, "1.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][123], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][123], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][123], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][123], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][123], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][123], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][123], 1);

    biltentd[playerid][124] = CreatePlayerTextDraw(playerid, 296.671234, 315.785003, "1.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][124], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][124], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][124], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][124], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][124], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][124], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][124], 1);

    biltentd[playerid][125] = CreatePlayerTextDraw(playerid, 327.305419, 78.470367, "3+");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][125], 0.189998, 0.886295);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][125], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][125], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][125], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][125], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][125], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][125], 1);

    biltentd[playerid][126] = CreatePlayerTextDraw(playerid, 326.873077, 94.474052, "1.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][126], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][126], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][126], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][126], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][126], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][126], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][126], 1);

    biltentd[playerid][127] = CreatePlayerTextDraw(playerid, 326.873077, 110.873802, "1.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][127], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][127], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][127], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][127], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][127], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][127], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][127], 1);

    biltentd[playerid][128] = CreatePlayerTextDraw(playerid, 326.873077, 126.873558, "1.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][128], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][128], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][128], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][128], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][128], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][128], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][128], 1);

    biltentd[playerid][129] = CreatePlayerTextDraw(playerid, 326.873077, 142.374420, "1.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][129], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][129], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][129], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][129], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][129], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][129], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][129], 1);

    biltentd[playerid][130] = CreatePlayerTextDraw(playerid, 326.873077, 158.975433, "1.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][130], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][130], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][130], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][130], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][130], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][130], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][130], 1);

    biltentd[playerid][131] = CreatePlayerTextDraw(playerid, 326.873077, 174.476379, "1.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][131], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][131], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][131], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][131], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][131], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][131], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][131], 1);

    biltentd[playerid][132] = CreatePlayerTextDraw(playerid, 326.873077, 190.277343, "1.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][132], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][132], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][132], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][132], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][132], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][132], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][132], 1);

    biltentd[playerid][133] = CreatePlayerTextDraw(playerid, 326.873077, 206.078308, "1.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][133], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][133], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][133], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][133], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][133], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][133], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][133], 1);

    biltentd[playerid][134] = CreatePlayerTextDraw(playerid, 326.873077, 221.979278, "1.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][134], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][134], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][134], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][134], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][134], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][134], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][134], 1);

    biltentd[playerid][135] = CreatePlayerTextDraw(playerid, 326.873077, 237.680236, "1.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][135], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][135], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][135], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][135], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][135], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][135], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][135], 1);

    biltentd[playerid][136] = CreatePlayerTextDraw(playerid, 326.873077, 252.881164, "1.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][136], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][136], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][136], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][136], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][136], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][136], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][136], 1);

    biltentd[playerid][137] = CreatePlayerTextDraw(playerid, 326.873077, 268.482116, "1.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][137], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][137], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][137], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][137], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][137], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][137], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][137], 1);

    biltentd[playerid][138] = CreatePlayerTextDraw(playerid, 326.873077, 284.283081, "1.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][138], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][138], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][138], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][138], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][138], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][138], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][138], 1);

    biltentd[playerid][139] = CreatePlayerTextDraw(playerid, 326.873077, 300.184051, "1.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][139], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][139], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][139], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][139], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][139], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][139], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][139], 1);

    biltentd[playerid][140] = CreatePlayerTextDraw(playerid, 326.873077, 315.785003, "1.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][140], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][140], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][140], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][140], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][140], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][140], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][140], 1);

    biltentd[playerid][141] = CreatePlayerTextDraw(playerid, 357.107238, 78.470367, "4+");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][141], 0.189998, 0.886295);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][141], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][141], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][141], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][141], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][141], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][141], 1);

    biltentd[playerid][142] = CreatePlayerTextDraw(playerid, 339.633789, 69.070442, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][142], 1.000000, 260.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][142], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][142], 457203199);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][142], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][142], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][142], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][142], 0);

    biltentd[playerid][143] = CreatePlayerTextDraw(playerid, 356.774902, 94.474052, "4.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][143], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][143], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][143], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][143], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][143], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][143], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][143], 1);

    biltentd[playerid][144] = CreatePlayerTextDraw(playerid, 356.774902, 110.773803, "4.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][144], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][144], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][144], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][144], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][144], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][144], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][144], 1);

    biltentd[playerid][145] = CreatePlayerTextDraw(playerid, 356.774902, 127.073554, "4.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][145], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][145], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][145], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][145], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][145], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][145], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][145], 1);

    biltentd[playerid][146] = CreatePlayerTextDraw(playerid, 356.774902, 142.574432, "4.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][146], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][146], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][146], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][146], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][146], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][146], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][146], 1);

    biltentd[playerid][147] = CreatePlayerTextDraw(playerid, 356.774902, 158.875427, "4.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][147], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][147], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][147], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][147], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][147], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][147], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][147], 1);

    biltentd[playerid][148] = CreatePlayerTextDraw(playerid, 356.774902, 174.476379, "4.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][148], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][148], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][148], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][148], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][148], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][148], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][148], 1);

    biltentd[playerid][149] = CreatePlayerTextDraw(playerid, 356.774902, 190.177337, "4.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][149], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][149], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][149], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][149], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][149], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][149], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][149], 1);

    biltentd[playerid][150] = CreatePlayerTextDraw(playerid, 356.774902, 206.278320, "4.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][150], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][150], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][150], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][150], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][150], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][150], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][150], 1);

    biltentd[playerid][151] = CreatePlayerTextDraw(playerid, 356.774902, 221.979278, "4.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][151], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][151], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][151], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][151], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][151], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][151], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][151], 1);

    biltentd[playerid][152] = CreatePlayerTextDraw(playerid, 356.774902, 237.680236, "4.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][152], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][152], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][152], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][152], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][152], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][152], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][152], 1);

    biltentd[playerid][153] = CreatePlayerTextDraw(playerid, 356.774902, 252.781158, "4.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][153], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][153], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][153], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][153], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][153], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][153], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][153], 1);

    biltentd[playerid][154] = CreatePlayerTextDraw(playerid, 356.774902, 268.782135, "4.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][154], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][154], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][154], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][154], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][154], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][154], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][154], 1);

    biltentd[playerid][155] = CreatePlayerTextDraw(playerid, 356.774902, 284.783111, "4.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][155], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][155], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][155], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][155], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][155], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][155], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][155], 1);

    biltentd[playerid][156] = CreatePlayerTextDraw(playerid, 356.774902, 300.084045, "4.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][156], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][156], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][156], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][156], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][156], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][156], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][156], 1);

    biltentd[playerid][157] = CreatePlayerTextDraw(playerid, 356.774902, 315.684997, "4.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][157], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][157], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][157], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][157], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][157], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][157], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][157], 1);

    biltentd[playerid][158] = CreatePlayerTextDraw(playerid, 371.167053, 67.825996, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][158], 1.000000, 260.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][158], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][158], 457203199);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][158], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][158], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][158], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][158], 0);

    biltentd[playerid][159] = CreatePlayerTextDraw(playerid, 407.710327, 78.470367, "GG&3+");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][159], 0.189998, 0.886295);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][159], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][159], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][159], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][159], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][159], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][159], 1);

    biltentd[playerid][160] = CreatePlayerTextDraw(playerid, 407.578002, 94.474052, "1.25");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][160], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][160], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][160], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][160], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][160], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][160], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][160], 1);

    biltentd[playerid][161] = CreatePlayerTextDraw(playerid, 407.578002, 111.073799, "1.25");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][161], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][161], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][161], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][161], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][161], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][161], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][161], 1);

    biltentd[playerid][162] = CreatePlayerTextDraw(playerid, 407.578002, 127.273551, "1.25");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][162], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][162], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][162], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][162], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][162], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][162], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][162], 1);

    biltentd[playerid][163] = CreatePlayerTextDraw(playerid, 407.578002, 142.874450, "1.25");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][163], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][163], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][163], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][163], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][163], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][163], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][163], 1);

    biltentd[playerid][164] = CreatePlayerTextDraw(playerid, 407.578002, 158.975433, "1.25");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][164], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][164], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][164], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][164], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][164], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][164], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][164], 1);

    biltentd[playerid][165] = CreatePlayerTextDraw(playerid, 407.578002, 174.376373, "1.25");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][165], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][165], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][165], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][165], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][165], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][165], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][165], 1);

    biltentd[playerid][166] = CreatePlayerTextDraw(playerid, 407.244659, 190.377349, "1.25");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][166], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][166], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][166], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][166], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][166], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][166], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][166], 1);

    biltentd[playerid][167] = CreatePlayerTextDraw(playerid, 407.244659, 206.378326, "1.25");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][167], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][167], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][167], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][167], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][167], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][167], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][167], 1);

    biltentd[playerid][168] = CreatePlayerTextDraw(playerid, 407.244659, 222.079284, "1.25");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][168], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][168], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][168], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][168], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][168], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][168], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][168], 1);

    biltentd[playerid][169] = CreatePlayerTextDraw(playerid, 407.244659, 237.580230, "1.25");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][169], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][169], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][169], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][169], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][169], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][169], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][169], 1);

    biltentd[playerid][170] = CreatePlayerTextDraw(playerid, 407.244659, 252.881164, "1.25");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][170], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][170], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][170], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][170], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][170], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][170], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][170], 1);

    biltentd[playerid][171] = CreatePlayerTextDraw(playerid, 407.244659, 268.382110, "1.25");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][171], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][171], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][171], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][171], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][171], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][171], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][171], 1);

    biltentd[playerid][172] = CreatePlayerTextDraw(playerid, 407.244659, 284.583099, "1.25");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][172], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][172], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][172], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][172], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][172], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][172], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][172], 1);

    biltentd[playerid][173] = CreatePlayerTextDraw(playerid, 407.244659, 300.184051, "1.25");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][173], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][173], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][173], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][173], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][173], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][173], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][173], 1);

    biltentd[playerid][174] = CreatePlayerTextDraw(playerid, 407.244659, 315.985015, "1.25");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][174], 0.192331, 0.828444);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][174], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][174], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][174], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][174], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][174], TEXT_DRAW_FONT_3);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][174], 1);

    biltentd[playerid][175] = CreatePlayerTextDraw(playerid, 452.167358, 91.895812, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][175], 184.000000, 234.840087);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][175], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][175], 337059071);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][175], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][175], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][175], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][175], 0);

    biltentd[playerid][176] = CreatePlayerTextDraw(playerid, 452.001281, 75.888420, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][176], 184.059967, 15.190027);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][176], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][176], 355022079);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][176], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][176], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][176], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][176], 0);

    biltentd[playerid][177] = CreatePlayerTextDraw(playerid, 552.200073, 78.570365, "vasi_tiketi");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][177], 0.292665, 1.073184);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][177], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][177], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][177], 1);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][177], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][177], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][177], 1);

    biltentd[playerid][178] = CreatePlayerTextDraw(playerid, 459.533416, 101.751983, "(51)_Barcelona_-_Real_Madrid_(K1_1)_-_2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][178], 0.138998, 0.969479);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][178], 632.000000, 5.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][178], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][178], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][178], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][178], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][178], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][178], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][178], true);

    biltentd[playerid][179] = CreatePlayerTextDraw(playerid, 459.533416, 115.651771, "(51)_Barcelona_-_Real_Madrid_(K1_1)_-_2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][179], 0.138998, 0.969479);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][179], 632.000000, 5.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][179], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][179], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][179], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][179], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][179], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][179], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][179], true);

    biltentd[playerid][180] = CreatePlayerTextDraw(playerid, 459.533416, 129.151657, "(51)_Barcelona_-_Real_Madrid_(K1_1)_-_2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][180], 0.138998, 0.969479);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][180], 632.000000, 5.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][180], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][180], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][180], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][180], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][180], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][180], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][180], true);

    biltentd[playerid][181] = CreatePlayerTextDraw(playerid, 459.533416, 142.652481, "(51)_Barcelona_-_Real_Madrid_(K1_1)_-_2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][181], 0.138998, 0.969479);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][181], 632.000000, 5.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][181], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][181], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][181], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][181], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][181], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][181], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][181], true);

    biltentd[playerid][182] = CreatePlayerTextDraw(playerid, 459.533416, 155.953292, "(51)_Barcelona_-_Real_Madrid_(K1_1)_-_2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][182], 0.138998, 0.969479);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][182], 632.000000, 5.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][182], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][182], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][182], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][182], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][182], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][182], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][182], true);

    biltentd[playerid][183] = CreatePlayerTextDraw(playerid, 459.533416, 169.054092, "(51)_Barcelona_-_Real_Madrid_(K1_1)_-_2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][183], 0.138998, 0.969479);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][183], 632.000000, 5.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][183], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][183], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][183], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][183], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][183], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][183], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][183], true);

    biltentd[playerid][184] = CreatePlayerTextDraw(playerid, 459.533416, 182.454910, "(51)_Barcelona_-_Real_Madrid_(K1_1)_-_2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][184], 0.138998, 0.969479);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][184], 632.000000, 5.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][184], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][184], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][184], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][184], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][184], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][184], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][184], true);

    biltentd[playerid][185] = CreatePlayerTextDraw(playerid, 459.533416, 195.555709, "(51)_Barcelona_-_Real_Madrid_(K1_1)_-_2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][185], 0.138998, 0.969479);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][185], 632.000000, 5.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][185], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][185], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][185], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][185], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][185], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][185], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][185], true);

    biltentd[playerid][186] = CreatePlayerTextDraw(playerid, 459.533416, 209.056533, "(51)_Barcelona_-_Real_Madrid_(K1_1)_-_2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][186], 0.138998, 0.969479);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][186], 632.000000, 5.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][186], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][186], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][186], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][186], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][186], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][186], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][186], true);

    biltentd[playerid][187] = CreatePlayerTextDraw(playerid, 459.533416, 222.557357, "(51)_Barcelona_-_Real_Madrid_(K1_1)_-_2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][187], 0.138998, 0.969479);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][187], 632.000000, 5.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][187], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][187], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][187], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][187], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][187], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][187], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][187], true);

    biltentd[playerid][188] = CreatePlayerTextDraw(playerid, 459.533416, 235.858169, "(51)_Barcelona_-_Real_Madrid_(K1_1)_-_2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][188], 0.138998, 0.969479);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][188], 632.000000, 5.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][188], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][188], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][188], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][188], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][188], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][188], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][188], true);

    biltentd[playerid][189] = CreatePlayerTextDraw(playerid, 459.533416, 248.858963, "(51)_Barcelona_-_Real_Madrid_(K1_1)_-_2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][189], 0.138998, 0.969479);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][189], 632.000000, 5.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][189], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][189], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][189], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][189], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][189], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][189], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][189], true);

    biltentd[playerid][190] = CreatePlayerTextDraw(playerid, 459.500091, 261.515319, "(51)_Barcelona_-_Real_Madrid_(K1_1)_-_2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][190], 0.138998, 0.969479);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][190], 632.000000, 5.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][190], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][190], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][190], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][190], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][190], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][190], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][190], true);

    biltentd[playerid][191] = CreatePlayerTextDraw(playerid, 459.533447, 274.390014, "(51)_Barcelona_-_Real_Madrid_(K1_1)_-_2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][191], 0.138998, 0.969479);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][191], 632.000000, 5.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][191], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][191], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][191], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][191], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][191], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][191], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][191], true);

    biltentd[playerid][192] = CreatePlayerTextDraw(playerid, 459.533416, 287.561309, "(51)_Barcelona_-_Real_Madrid_(K1_1)_-_2.50");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][192], 0.138998, 0.969479);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][192], 632.000000, 5.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][192], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][192], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][192], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][192], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][192], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][192], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][192], true);

    biltentd[playerid][193] = CreatePlayerTextDraw(playerid, 510.533416, 299.390075, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][193], 70.000000, 19.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][193], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][193], 355022079);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][193], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][193], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][193], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][193], 0);

    biltentd[playerid][194] = CreatePlayerTextDraw(playerid, 521.505920, 304.690246, "UPLATI_TIKET");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][194], 0.181997, 0.923851);
    PlayerTextDrawTextSize(playerid, biltentd[playerid][194], 571.200439, 15.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][194], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][194], -1);
    PlayerTextDrawUseBox(playerid, biltentd[playerid][194], 0);
    PlayerTextDrawBoxColor(playerid, biltentd[playerid][194], 255);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][194], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][194], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][194], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][194], 1);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][194], true);

    biltentd[playerid][195] = CreatePlayerTextDraw(playerid, 545.833679, 318.282592, "Ukupna_kvota:_1.00");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][195], 0.132666, 0.683259);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][195], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][195], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][195], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][195], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][195], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][195], 1);

    biltentd[playerid][196] = CreatePlayerTextDraw(playerid, 198.100234, 64.759048, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][196], 31.479988, 11.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][196], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][196], 337059071);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][196], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][196], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][196], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][196], 0);

    biltentd[playerid][197] = CreatePlayerTextDraw(playerid, 230.567382, 64.873870, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][197], 80.580123, 10.710016);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][197], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][197], 337059071);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][197], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][197], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][197], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][197], 0);

    biltentd[playerid][198] = CreatePlayerTextDraw(playerid, 230.567382, 64.873870, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][198], 80.580123, 10.710016);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][198], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][198], 337059071);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][198], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][198], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][198], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][198], 0);

    biltentd[playerid][199] = CreatePlayerTextDraw(playerid, 312.000701, 64.873870, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][199], 59.119812, 11.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][199], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][199], 337059071);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][199], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][199], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][199], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][199], 0);

    biltentd[playerid][200] = CreatePlayerTextDraw(playerid, 372.100982, 64.803512, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][200], 70.350288, 11.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][200], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][200], 337059071);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][200], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][200], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][200], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][200], 0);

    biltentd[playerid][201] = CreatePlayerTextDraw(playerid, -8.332319, 64.144226, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][201], 70.350288, 11.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][201], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][201], 337059071);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][201], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][201], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][201], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][201], 0);

    biltentd[playerid][202] = CreatePlayerTextDraw(playerid, 28.966629, 65.311080, "KOMPLETNA_PONUDA");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][202], 0.128000, 0.886518);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][202], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][202], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][202], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][202], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][202], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][202], 1);

    biltentd[playerid][203] = CreatePlayerTextDraw(playerid, 214.699981, 65.711067, "BROJ");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][203], 0.128000, 0.886518);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][203], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][203], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][203], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][203], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][203], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][203], 1);

    biltentd[playerid][204] = CreatePlayerTextDraw(playerid, 268.999938, 65.296257, "Konacan_ishod");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][204], 0.128000, 0.886518);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][204], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][204], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][204], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][204], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][204], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][204], 1);

    biltentd[playerid][205] = CreatePlayerTextDraw(playerid, 342.166564, 66.540687, "ukupno_golova");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][205], 0.128000, 0.886518);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][205], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][205], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][205], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][205], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][205], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][205], 1);

    biltentd[playerid][206] = CreatePlayerTextDraw(playerid, 405.699951, 65.711051, "oba_daju_gol");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][206], 0.128000, 0.886518);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][206], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][206], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][206], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][206], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][206], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][206], 1);

    biltentd[playerid][207] = CreatePlayerTextDraw(playerid, 309.366577, 358.570373, "Kako_biste_odigrali_tiket_potrebni_je_kliknuti_na_ime_tima");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][207], 0.164664, 1.052443);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][207], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][207], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][207], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][207], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][207], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][207], 1);

    biltentd[playerid][208] = CreatePlayerTextDraw(playerid, 309.366577, 388.872222, "Da_uplatite_tiket_koji_ste_sastavili_potrebno_je_da_kliknete_(uplati_tiket)");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][208], 0.164664, 1.052443);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][208], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][208], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][208], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][208], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][208], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][208], 1);

    biltentd[playerid][209] = CreatePlayerTextDraw(playerid, 272.000000, 16.018526, "MOZZART_BET");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][209], 0.356000, 1.944296);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][209], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][209], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][209], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][209], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][209], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][209], 1);

    biltentd[playerid][210] = CreatePlayerTextDraw(playerid, 309.366577, 373.071258, "ukoliko_zelite_da_obrisete_par_sa_tiketa_kliknite_na_tim_sa_desne_strane_(vasi_tiketi)");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][210], 0.160997, 1.059257);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][210], TEXT_DRAW_ALIGN_CENTER);
    PlayerTextDrawColor(playerid, biltentd[playerid][210], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][210], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][210], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][210], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][210], 1);

    /*biltentd[playerid][211] = CreatePlayerTextDraw(playerid, 299.766754, 32.796295, "Sports_bet");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][211], 0.187997, 1.031702);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][211], 1);
    PlayerTextDrawColor(playerid, biltentd[playerid][211], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][211], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][211], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][211], 2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][211], 1);*/

    biltentd[playerid][211] = CreatePlayerTextDraw(playerid, 450.366821, 389.681732, "ld_chat:badchat");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][211], 9.000000, 8.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][211], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][211], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][211], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][211], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][211], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][211], 0);

    /*biltentd[playerid][212] = CreatePlayerTextDraw(playerid, 9.999995, 28.637037, "RACUN:_5000$");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][212], 0.276665, 1.035851);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][212], 1);
    PlayerTextDrawColor(playerid, biltentd[playerid][212], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][212], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][212], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][212], 2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][212], 1);*/
    biltentd[playerid][212] = CreatePlayerTextDraw(playerid, 470.866699, 373.918762, "ld_chat:badchat");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][212], 9.000000, 8.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][212], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][212], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][212], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][212], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][212], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][212], 0);

    biltentd[playerid][213] = CreatePlayerTextDraw(playerid, 2.666686, 333.785278, "ld_beat:left");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][213], 10.000000, 10.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][213], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][213], -1061109505);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][213], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][213], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][213], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][213], 0);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][213], true);

    biltentd[playerid][214] = CreatePlayerTextDraw(playerid, 429.600036, 336.159362, "ld_beat:right");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][214], 10.000000, 10.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][214], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][214], -1061109505);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][214], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][214], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][214], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][214], 0);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][214], true);

    biltentd[playerid][215] = CreatePlayerTextDraw(playerid, 417.533355, 359.329864, "ld_chat:badchat");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][215], 9.000000, 8.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][215], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][215], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][215], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][215], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][215], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][215], 0);

    /*biltentd[playerid][216] = CreatePlayerTextDraw(playerid, 470.866699, 373.918762, "ld_chat:badchat");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][216], 9.000000, 8.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][216], 1);
    PlayerTextDrawColor(playerid, biltentd[playerid][216], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][216], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][216], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][216], 4);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][216], 0);*/

    biltentd[playerid][216] = CreatePlayerTextDraw(playerid, 9.999995, 28.637037, "RACUN:_5000$");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][216], 0.276665, 1.035851);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][216], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][216], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][216], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][216], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][216], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][216], 1);

    /*biltentd[playerid][217] = CreatePlayerTextDraw(playerid, 450.366821, 389.681732, "ld_chat:badchat");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][217], 9.000000, 8.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][217], 1);
    PlayerTextDrawColor(playerid, biltentd[playerid][217], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][217], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][217], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][217], 4);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][217], 0);*/

    biltentd[playerid][217] = CreatePlayerTextDraw(playerid, 299.766754, 32.796295, "Sports_bet");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][217], 0.187997, 1.031702);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][217], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][217], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][217], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][217], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][217], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][217], 1);

    biltentd[playerid][218] = CreatePlayerTextDraw(playerid, 624.000061, 14.377784, ".");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][218], 13.000000, 8.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][218], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][218], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][218], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][218], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][218], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][218], 0);

    biltentd[playerid][219] = CreatePlayerTextDraw(playerid, -27.666717, -89.125915, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][219], 672.000000, 149.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][219], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][219], 405695231);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][219], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][219], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][219], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][219], 0);

    biltentd[playerid][220] = CreatePlayerTextDraw(playerid, 272.000000, 16.018526, "MOZZART_BET");
    PlayerTextDrawLetterSize(playerid, biltentd[playerid][220], 0.356000, 1.944296);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][220], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][220], -5963521);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][220], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][220], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][220], TEXT_DRAW_FONT_2);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][220], 1);

    /*biltentd[playerid][221] = CreatePlayerTextDraw(playerid, 613.333374, 9.814824, "ld_chat:thumbdn");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][221], 13.000000, 8.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][221], 1);
    PlayerTextDrawColor(playerid, biltentd[playerid][221], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][221], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][221], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][221], 4);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][221], 0);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][221], true);*/

    biltentd[playerid][221] = CreatePlayerTextDraw(playerid, 608.666748, 12.303715, "ld_chat:thumbdn");
    PlayerTextDrawTextSize(playerid, biltentd[playerid][221], 19.000000, 10.000000);
    PlayerTextDrawAlignment(playerid, biltentd[playerid][221], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, biltentd[playerid][221], -1);
    PlayerTextDrawSetShadow(playerid, biltentd[playerid][221], 0);
    PlayerTextDrawBackgroundColor(playerid, biltentd[playerid][221], 255);
    PlayerTextDrawFont(playerid, biltentd[playerid][221], TEXT_DRAW_FONT_SPRITE_DRAW);
    PlayerTextDrawSetProportional(playerid, biltentd[playerid][221], 0);
    PlayerTextDrawSetSelectable(playerid, biltentd[playerid][221], true);

    for (new i; i < 222; i++)
    {
        PlayerTextDrawShow(playerid,biltentd[playerid][i]);
    }

    /*PlayerTextDrawShow(playerid, biltentd[playerid][213]);
    PlayerTextDrawShow(playerid, biltentd[playerid][214]);*/

    for(new i = 0; i < 15; i++)
    {
        PlayerTextDrawSetString(playerid, biltendatum[playerid][i+1], " ");
        PlayerTextDrawSetString(playerid, biltenklub[playerid][i+1], " ");
        PlayerTextDrawSetString(playerid, biltenid[playerid][i+1], " ");
        PlayerTextDrawSetString(playerid, biltenkvota1[playerid][i+1], " ");
        PlayerTextDrawSetString(playerid, biltenkvotaX[playerid][i+1], " ");
        PlayerTextDrawSetString(playerid, biltenkvota2[playerid][i+1], " ");
        PlayerTextDrawSetString(playerid, biltenkvota3plus[playerid][i+1], " ");
        PlayerTextDrawSetString(playerid, biltenkvota4plus[playerid][i+1], " ");
        PlayerTextDrawSetString(playerid, biltenkvotagg[playerid][i+1], " ");
        PlayerTextDrawSetString(playerid, biltentiket[playerid][i+1], "//");
    }

    SelectTextDraw(playerid, 0x30bad9FF);
    sastavljatiket[playerid] = true;
    }

    else
    {
		/*PlayerTextDrawHide(playerid, biltentd[playerid][213]);
        PlayerTextDrawHide(playerid, biltentd[playerid][214]);*/

        for(new i = 0; i < 222; i++)
        {
            PlayerTextDrawHide(playerid, biltentd[playerid][i]);
            PlayerTextDrawDestroy(playerid, biltentd[playerid][i]);
            biltentd[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
        }
		KreirajTDs(playerid);
        CancelSelectTextDraw(playerid);
        sastavljatiket[playerid] = false;
    }
    return 1;
}

strreplace(string[], find, replace)
{
    for(new i = 0; string[i]; i++)
    {
        if(string[i] == find)
        {
            string[i] = replace;
        }
    }
}

VoziloJeAvion(id)
{
	if(id == 592 || id == 577 || id == 511 || id == 512 || id == 593 || id == 520 || id == 553 || id == 476 || id == 519 || id == 460 || id == 513) return 1;
	else if(id == 548 || id == 425 || id == 417 || id == 487 || id == 488 || id == 497 || id == 563 || id == 447 || id == 469) return 1;
	else return 0;
}

VoziloJeBrod(id)
{
  	if(id == 472 || id == 473 || id == 493 || id == 484 || id == 430 || id == 454 || id == 453 || id == 452 || id == 446) return 1;
  	return 0;
}

VoziloJeMotor(id)
{
	if(id == 462 || id == 448 || id == 581 || id == 522 || id == 461 || id == 521 || id == 523 || id == 463 || id == 468 || id == 471) return 1;
	return 0;
}

VoziloJeBicikla(id)
{
	if(id == 481 || id == 509 || id == 510) return 1;
	return 0;
}

VoziloJeKamion(id)
{
	if(id == 499 || id == 498 || id == 609 || id == 524 || id == 578 || id == 455 || id == 403 || id == 414 || id == 443 || id == 514 || id == 515 || id == 408 || id == 431 || id == 437 || id == 538) return 1;
	return 0;
}

VoziloJeAuto(id)
{
    if(id == 400 || id == 401 || id == 402 || id == 404 || id == 405 || id == 409 || id == 410 || id == 401 || id == 411 || id == 412 || id == 413 || id == 414 || id == 415 || id == 416 || id == 418 || id == 419 || id == 420 || id == 421) return 1;
    else if(id == 422 || id == 423 || id == 424 || id == 426 || id == 428 || id == 429 || id == 434 || id == 436 || id == 438 || id == 439 || id == 440 || id == 442 || id == 444 || id == 445 || id == 451 || id == 457) return 1;
    else if(id == 458 || id == 459 || id == 466 || id == 467 || id == 470 || id == 474 || id == 475 || id == 477 || id == 478 || id == 479 || id == 480 || id == 482 || id == 483 || id == 485 || id == 489 || id == 490) return 1;
    else if(id == 491 || id == 492 || id == 494 || id == 495 || id == 496 || id == 500 || id == 502 || id == 503 || id == 504 || id == 505 || id == 506 || id == 507 || id == 508 || id == 516 || id == 517 || id == 518) return 1;
    else if(id == 525 || id == 526 || id == 527 || id == 528 || id == 529 || id == 530 || id == 531 || id == 533 || id == 534 || id == 535 || id == 536 || id == 539 || id == 540 || id == 541 || id == 542 || id == 543) return 1;
    else if(id == 545 || id == 546 || id == 547 || id == 549 || id == 550 || id == 551 || id == 552 || id == 554 || id == 555 || id == 556 || id == 557 || id == 558 || id == 559 || id == 560 || id == 561 || id == 562) return 1;
	else if(id == 565 || id == 566 || id == 567 || id == 568 || id == 571 || id == 572 || id == 573 || id == 574 || id == 575 || id == 576 || id == 578 || id == 579 || id == 580 || id == 582 || id == 583 || id == 585) return 1;
	else if(id == 587 || id == 588 || id == 589 || id == 596 || id == 597 || id == 598 || id == 599 || id == 600 || id == 601 || id == 602 || id == 603 || id == 604 || id == 605) return 1;
	return 0;
}

GetSpeed(playerid)
{
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid))
    GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
    else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
    ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 178.8617875;
    return floatround(ST[3]);
}

mysql_tqueryEx(MySQL:handle, const fmat[],  va_args<>)
{
    new str[1500];
    va_format(str, sizeof (str), fmat, va_start<2>);
    return mysql_tquery( handle, str, "", "");
}

Ucitavanje_Objekata(playerid)
{
	TogglePlayerControllable(playerid, 0);
	PlayerTimer[playerid] = SetTimerEx("ZalediOdledi", 2*1000, false, "i", playerid);
	SetCameraBehindPlayer(playerid);
	return 1;
}

KreirajTDs(playerid)
{
    for(new i = 0; i < 52; i++)
	{
	    InGameTD[i] = Text:INVALID_TEXT_DRAW;
	}
	
	new boja = PI[playerid][TDBoja];

	SetHealthBarColor(playerid, boja);
	
	InGameTD[0] = TextDrawCreate(30.000000, 430.992584, "LD_SPAC:white");
	TextDrawLetterSize(InGameTD[0], 0.000000, 0.000000);
	TextDrawTextSize(InGameTD[0], 574.000000, 17.007415);
	TextDrawAlignment(InGameTD[0], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[0], 255);
	TextDrawSetShadow(InGameTD[0], 0);
	TextDrawSetOutline(InGameTD[0], 0);
	TextDrawFont(InGameTD[0], TEXT_DRAW_FONT_SPRITE_DRAW);

	InGameTD[1] = TextDrawCreate(15.333374, 426.429809, "/");
	TextDrawLetterSize(InGameTD[1], 1.145332, 2.325928);
	TextDrawAlignment(InGameTD[1], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[1], 255);
	TextDrawSetShadow(InGameTD[1], 0);
	TextDrawSetOutline(InGameTD[1], 1);
	TextDrawBackgroundColor(InGameTD[1], 51);
	TextDrawFont(InGameTD[1], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[1], 1);

	InGameTD[2] = TextDrawCreate(31.666669, 432.237060, "LD_SPAC:white");
	TextDrawLetterSize(InGameTD[2], 0.000000, 0.000000);
	TextDrawTextSize(InGameTD[2], -7.666667, 15.762939);
	TextDrawAlignment(InGameTD[2], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[2], 255);
	TextDrawSetShadow(InGameTD[2], 0);
	TextDrawSetOutline(InGameTD[2], 0);
	TextDrawFont(InGameTD[2], TEXT_DRAW_FONT_SPRITE_DRAW);

	InGameTD[3] = TextDrawCreate(39.666667, 437.629638, "LD_SPAC:white");
	TextDrawLetterSize(InGameTD[3], 0.000000, 0.000000);
	TextDrawTextSize(InGameTD[3], -18.333333, 9.125915);
	TextDrawAlignment(InGameTD[3], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[3], 255);
	TextDrawSetShadow(InGameTD[3], 0);
	TextDrawSetOutline(InGameTD[3], 0);
	TextDrawFont(InGameTD[3], TEXT_DRAW_FONT_SPRITE_DRAW);

	InGameTD[4] = TextDrawCreate(25.333332, 443.437042, "LD_SPAC:white");
	TextDrawLetterSize(InGameTD[4], 0.000000, 0.000000);
	TextDrawTextSize(InGameTD[4], -2.999998, 4.562957);
	TextDrawAlignment(InGameTD[4], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[4], 255);
	TextDrawSetShadow(InGameTD[4], 0);
	TextDrawSetOutline(InGameTD[4], 0);
	TextDrawFont(InGameTD[4], TEXT_DRAW_FONT_SPRITE_DRAW);

	InGameTD[5] = TextDrawCreate(598.333374, 427.014862, "\\");
	TextDrawLetterSize(InGameTD[5], 1.145332, 2.325928);
	TextDrawAlignment(InGameTD[5], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[5], 255);
	TextDrawSetShadow(InGameTD[5], 0);
	TextDrawSetOutline(InGameTD[5], 1);
	TextDrawBackgroundColor(InGameTD[5], 51);
	TextDrawFont(InGameTD[5], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[5], 1);

	InGameTD[6] = TextDrawCreate(602.000000, 436.800018, "LD_SPAC:white");
	TextDrawLetterSize(InGameTD[6], 0.000000, 0.000000);
	TextDrawTextSize(InGameTD[6], 5.666687, 11.199981);
	TextDrawAlignment(InGameTD[6], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[6], 255);
	TextDrawSetShadow(InGameTD[6], 0);
	TextDrawSetOutline(InGameTD[6], 0);
	TextDrawFont(InGameTD[6], TEXT_DRAW_FONT_SPRITE_DRAW);

	InGameTD[7] = TextDrawCreate(20.999958, 432.651794, "/");
	TextDrawLetterSize(InGameTD[7], 0.656666, 1.392592);
	TextDrawAlignment(InGameTD[7], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[7], boja);
	TextDrawSetShadow(InGameTD[7], 0);
	TextDrawSetOutline(InGameTD[7], 1);
	TextDrawBackgroundColor(InGameTD[7], 51);
	TextDrawFont(InGameTD[7], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[7], 1);

	InGameTD[8] = TextDrawCreate(26.666624, 432.822113, "/");
	TextDrawLetterSize(InGameTD[8], 0.656666, 1.392592);
	TextDrawAlignment(InGameTD[8], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[8], -1);
	TextDrawSetShadow(InGameTD[8], 0);
	TextDrawSetOutline(InGameTD[8], 1);
	TextDrawBackgroundColor(InGameTD[8], 51);
	TextDrawFont(InGameTD[8], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[8], 1);

	InGameTD[9] = TextDrawCreate(54.000019, 437.214874, "online");
	TextDrawLetterSize(InGameTD[9], 0.124000, 0.616888);
	TextDrawAlignment(InGameTD[9], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[9], -2139062017);
	TextDrawSetShadow(InGameTD[9], 0);
	TextDrawSetOutline(InGameTD[9], 1);
	TextDrawBackgroundColor(InGameTD[9], 51);
	TextDrawFont(InGameTD[9], TEXT_DRAW_FONT_2);
	TextDrawSetProportional(InGameTD[9], 1);

	InGameTD[10] = TextDrawCreate(76.999984, 436.385253, "100");
	TextDrawLetterSize(InGameTD[10], 0.175333, 0.720592);
	TextDrawAlignment(InGameTD[10], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[10], -1);
	TextDrawSetShadow(InGameTD[10], 0);
	TextDrawSetOutline(InGameTD[10], 1);
	TextDrawBackgroundColor(InGameTD[10], 51);
	TextDrawFont(InGameTD[10], TEXT_DRAW_FONT_3);
	TextDrawSetProportional(InGameTD[10], 1);

	InGameTD[11] = TextDrawCreate(94.999984, 433.481567, "particle:lamp_shad_64");
	TextDrawLetterSize(InGameTD[11], 0.000000, 0.000000);
	TextDrawTextSize(InGameTD[11], 21.000007, 14.933343);
	TextDrawAlignment(InGameTD[11], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[11], boja);
	TextDrawSetShadow(InGameTD[11], 0);
	TextDrawSetOutline(InGameTD[11], 0);
	TextDrawFont(InGameTD[11], TEXT_DRAW_FONT_SPRITE_DRAW);

	InGameTD[12] = TextDrawCreate(102.333320, 424.770355, ".");
	TextDrawLetterSize(InGameTD[12], 0.511666, 2.603852);
	TextDrawAlignment(InGameTD[12], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[12], boja);
	TextDrawSetShadow(InGameTD[12], 0);
	TextDrawSetOutline(InGameTD[12], 1);
	TextDrawBackgroundColor(InGameTD[12], 51);
	TextDrawFont(InGameTD[12], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[12], 1);

	InGameTD[13] = TextDrawCreate(102.999969, 426.185150, ".");
	TextDrawLetterSize(InGameTD[13], 0.399000, 1.749333);
	TextDrawAlignment(InGameTD[13], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[13], boja);
	TextDrawUseBox(InGameTD[13], true);
	TextDrawBoxColor(InGameTD[13], 0);
	TextDrawSetShadow(InGameTD[13], 0);
	TextDrawSetOutline(InGameTD[13], 1);
	TextDrawBackgroundColor(InGameTD[13], 51);
	TextDrawFont(InGameTD[13], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[13], 1);

	InGameTD[14] = TextDrawCreate(103.666679, 429.748229, ".");
	TextDrawLetterSize(InGameTD[14], 0.251666, 1.210074);
	TextDrawAlignment(InGameTD[14], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[14], 255);
	TextDrawSetShadow(InGameTD[14], 0);
	TextDrawSetOutline(InGameTD[14], 1);
	TextDrawBackgroundColor(InGameTD[14], 51);
	TextDrawFont(InGameTD[14], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[14], 1);

	InGameTD[15] = TextDrawCreate(103.333351, 433.651977, ".");
	TextDrawLetterSize(InGameTD[15], 0.322333, 1.317925);
	TextDrawAlignment(InGameTD[15], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[15], 255);
	TextDrawSetShadow(InGameTD[15], 0);
	TextDrawSetOutline(InGameTD[15], 1);
	TextDrawBackgroundColor(InGameTD[15], 51);
	TextDrawFont(InGameTD[15], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[15], 1);

	InGameTD[16] = TextDrawCreate(107.666641, 431.162963, ".");
	TextDrawLetterSize(InGameTD[16], 0.363666, 1.691259);
	TextDrawAlignment(InGameTD[16], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[16], boja);
	TextDrawSetShadow(InGameTD[16], 0);
	TextDrawSetOutline(InGameTD[16], 1);
	TextDrawBackgroundColor(InGameTD[16], 51);
	TextDrawFont(InGameTD[16], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[16], 1);

	InGameTD[17] = TextDrawCreate(107.999938, 431.748229, ".");
	TextDrawLetterSize(InGameTD[17], 0.271666, 1.181036);
	TextDrawAlignment(InGameTD[17], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[17], boja);
	TextDrawUseBox(InGameTD[17], true);
	TextDrawBoxColor(InGameTD[17], 0);
	TextDrawSetShadow(InGameTD[17], 0);
	TextDrawSetOutline(InGameTD[17], 1);
	TextDrawBackgroundColor(InGameTD[17], 51);
	TextDrawFont(InGameTD[17], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[17], 1);

	InGameTD[18] = TextDrawCreate(108.333358, 435.896423, ".");
	TextDrawLetterSize(InGameTD[18], 0.222000, 1.060740);
	TextDrawAlignment(InGameTD[18], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[18], 255);
	TextDrawSetShadow(InGameTD[18], 0);
	TextDrawSetOutline(InGameTD[18], 1);
	TextDrawBackgroundColor(InGameTD[18], 51);
	TextDrawFont(InGameTD[18], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[18], 1);

	InGameTD[19] = TextDrawCreate(108.333351, 432.748291, ".");
	TextDrawLetterSize(InGameTD[19], 0.207666, 1.027555);
	TextDrawAlignment(InGameTD[19], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[19], 255);
	TextDrawSetShadow(InGameTD[19], 0);
	TextDrawSetOutline(InGameTD[19], 1);
	TextDrawBackgroundColor(InGameTD[19], 51);
	TextDrawFont(InGameTD[19], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[19], 1);
    
	InGameTD[20] = TextDrawCreate(121.333328, 436.970428, "100");
	TextDrawLetterSize(InGameTD[20], 0.175333, 0.720592);
	TextDrawAlignment(InGameTD[20], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[20], -1);
	TextDrawSetShadow(InGameTD[20], 0);
	TextDrawSetOutline(InGameTD[20], 1);
	TextDrawBackgroundColor(InGameTD[20], 51);
	TextDrawFont(InGameTD[20], TEXT_DRAW_FONT_3);
	TextDrawSetProportional(InGameTD[20], 1);

	InGameTD[21] = TextDrawCreate(97.999961, 431.333343, ".");
	TextDrawLetterSize(InGameTD[21], 0.363666, 1.691259);
	TextDrawAlignment(InGameTD[21], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[21], boja);
	TextDrawSetShadow(InGameTD[21], 0);
	TextDrawSetOutline(InGameTD[21], 1);
	TextDrawBackgroundColor(InGameTD[21], 51);
	TextDrawFont(InGameTD[21], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[21], 1);

	InGameTD[22] = TextDrawCreate(98.666595, 431.088928, ".");
	TextDrawLetterSize(InGameTD[22], 0.271666, 1.181036);
	TextDrawAlignment(InGameTD[22], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[22], boja);
	TextDrawUseBox(InGameTD[22], true);
	TextDrawBoxColor(InGameTD[22], 0);
	TextDrawSetShadow(InGameTD[22], 0);
	TextDrawSetOutline(InGameTD[22], 1);
	TextDrawBackgroundColor(InGameTD[22], 51);
	TextDrawFont(InGameTD[22], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[22], 1);

	InGameTD[23] = TextDrawCreate(98.666702, 435.652008, ".");
	TextDrawLetterSize(InGameTD[23], 0.222000, 1.060740);
	TextDrawAlignment(InGameTD[23], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[23], 255);
	TextDrawSetShadow(InGameTD[23], 0);
	TextDrawSetOutline(InGameTD[23], 1);
	TextDrawBackgroundColor(InGameTD[23], 51);
	TextDrawFont(InGameTD[23], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[23], 1);

	InGameTD[24] = TextDrawCreate(99.000015, 432.089019, ".");
	TextDrawLetterSize(InGameTD[24], 0.207666, 1.027555);
	TextDrawAlignment(InGameTD[24], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[24], 255);
	TextDrawSetShadow(InGameTD[24], 0);
	TextDrawSetOutline(InGameTD[24], 1);
	TextDrawBackgroundColor(InGameTD[24], 51);
	TextDrawFont(InGameTD[24], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[24], 1);

	InGameTD[25] = TextDrawCreate(136.666687, 437.385284, "REKORD");
	TextDrawLetterSize(InGameTD[25], 0.124000, 0.616888);
	TextDrawAlignment(InGameTD[25], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[25], -2139062017);
	TextDrawSetShadow(InGameTD[25], 0);
	TextDrawSetOutline(InGameTD[25], 1);
	TextDrawBackgroundColor(InGameTD[25], 51);
	TextDrawFont(InGameTD[25], TEXT_DRAW_FONT_2);
	TextDrawSetProportional(InGameTD[25], 1);

	InGameTD[26] = TextDrawCreate(185.666641, 434.725982, ".");
	TextDrawLetterSize(InGameTD[26], 0.253666, 1.040000);
	TextDrawAlignment(InGameTD[26], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[26], -1);
	TextDrawSetShadow(InGameTD[26], 0);
	TextDrawSetOutline(InGameTD[26], 1);
	TextDrawBackgroundColor(InGameTD[26], 51);
	TextDrawFont(InGameTD[26], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[26], 1);

	InGameTD[27] = TextDrawCreate(190.666625, 434.896362, ".");
	TextDrawLetterSize(InGameTD[27], 0.253666, 1.040000);
	TextDrawAlignment(InGameTD[27], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[27], -1);
	TextDrawSetShadow(InGameTD[27], 0);
	TextDrawSetOutline(InGameTD[27], 1);
	TextDrawBackgroundColor(InGameTD[27], 51);
	TextDrawFont(InGameTD[27], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[27], 1);

	InGameTD[28] = TextDrawCreate(195.999984, 435.066772, ".");
	TextDrawLetterSize(InGameTD[28], 0.253666, 1.040000);
	TextDrawAlignment(InGameTD[28], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[28], -1);
	TextDrawSetShadow(InGameTD[28], 0);
	TextDrawSetOutline(InGameTD[28], 1);
	TextDrawBackgroundColor(InGameTD[28], 51);
	TextDrawFont(InGameTD[28], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[28], 1);

	InGameTD[29] = TextDrawCreate(186.333389, 432.651977, "/");
	TextDrawLetterSize(InGameTD[29], 0.293999, 0.571259);
	TextDrawAlignment(InGameTD[29], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[29], boja);
	TextDrawSetShadow(InGameTD[29], 0);
	TextDrawSetOutline(InGameTD[29], 1);
	TextDrawBackgroundColor(InGameTD[29], 51);
	TextDrawFont(InGameTD[29], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[29], 1);

	InGameTD[30] = TextDrawCreate(197.000061, 432.822296, "/");
	TextDrawLetterSize(InGameTD[30], 0.293999, 0.571259);
	TextDrawAlignment(InGameTD[30], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[30], boja);
	TextDrawSetShadow(InGameTD[30], 0);
	TextDrawSetOutline(InGameTD[30], 1);
	TextDrawBackgroundColor(InGameTD[30], 51);
	TextDrawFont(InGameTD[30], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[30], 1);

	InGameTD[31] = TextDrawCreate(196.666732, 443.777893, "\\");
	TextDrawLetterSize(InGameTD[31], 0.293999, 0.571259);
	TextDrawAlignment(InGameTD[31], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[31], boja);
	TextDrawSetShadow(InGameTD[31], 0);
	TextDrawSetOutline(InGameTD[31], 1);
	TextDrawBackgroundColor(InGameTD[31], 51);
	TextDrawFont(InGameTD[31], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[31], 1);

	InGameTD[32] = TextDrawCreate(185.666778, 443.948211, "\\");
	TextDrawLetterSize(InGameTD[32], 0.293999, 0.571259);
	TextDrawAlignment(InGameTD[32], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[32], boja);
	TextDrawSetShadow(InGameTD[32], 0);
	TextDrawSetOutline(InGameTD[32], 1);
	TextDrawBackgroundColor(InGameTD[32], 51);
	TextDrawFont(InGameTD[32], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[32], 1);

	InGameTD[33] = TextDrawCreate(274.333282, 438.044372, "spisak_svih_komandi_imate_na_/komande");
	TextDrawLetterSize(InGameTD[33], 0.089333, 0.579555);
	TextDrawAlignment(InGameTD[33], TEXT_DRAW_ALIGN_CENTER);
	TextDrawColor(InGameTD[33], -1);
	TextDrawSetShadow(InGameTD[33], 0);
	TextDrawSetOutline(InGameTD[33], 1);
	TextDrawBackgroundColor(InGameTD[33], 51);
	TextDrawFont(InGameTD[33], TEXT_DRAW_FONT_2);
	TextDrawSetProportional(InGameTD[33], 1);

	InGameTD[34] = TextDrawCreate(352.333282, 433.651916, ".");
	TextDrawLetterSize(InGameTD[34], 0.253666, 1.040000);
	TextDrawAlignment(InGameTD[34], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[34], -1);
	TextDrawSetShadow(InGameTD[34], 0);
	TextDrawSetOutline(InGameTD[34], 1);
	TextDrawBackgroundColor(InGameTD[34], 51);
	TextDrawFont(InGameTD[34], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[34], 1);

	InGameTD[35] = TextDrawCreate(361.000000, 433.822296, ".");
	TextDrawLetterSize(InGameTD[35], 0.253666, 1.040000);
	TextDrawAlignment(InGameTD[35], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[35], -1);
	TextDrawSetShadow(InGameTD[35], 0);
	TextDrawSetOutline(InGameTD[35], 1);
	TextDrawBackgroundColor(InGameTD[35], 51);
	TextDrawFont(InGameTD[35], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[35], 1);

	InGameTD[36] = TextDrawCreate(369.999969, 433.992645, ".");
	TextDrawLetterSize(InGameTD[36], 0.253666, 1.040000);
	TextDrawAlignment(InGameTD[36], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[36], -1);
	TextDrawSetShadow(InGameTD[36], 0);
	TextDrawSetOutline(InGameTD[36], 1);
	TextDrawBackgroundColor(InGameTD[36], 51);
	TextDrawFont(InGameTD[36], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[36], 1);

	InGameTD[37] = TextDrawCreate(350.000030, 442.363311, "/");
	TextDrawLetterSize(InGameTD[37], 0.293999, 0.571259);
	TextDrawAlignment(InGameTD[37], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[37], boja);
	TextDrawSetShadow(InGameTD[37], 0);
	TextDrawSetOutline(InGameTD[37], 1);
	TextDrawBackgroundColor(InGameTD[37], 51);
	TextDrawFont(InGameTD[37], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[37], 1);

	InGameTD[38] = TextDrawCreate(368.000030, 442.948486, "/");
	TextDrawLetterSize(InGameTD[38], 0.293999, 0.571259);
	TextDrawAlignment(InGameTD[38], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[38], boja);
	TextDrawSetShadow(InGameTD[38], 0);
	TextDrawSetOutline(InGameTD[38], 1);
	TextDrawBackgroundColor(InGameTD[38], 51);
	TextDrawFont(InGameTD[38], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[38], 1);

	InGameTD[39] = TextDrawCreate(350.333374, 432.503814, "\\");
	TextDrawLetterSize(InGameTD[39], 0.293999, 0.571259);
	TextDrawAlignment(InGameTD[39], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[39], boja);
	TextDrawSetShadow(InGameTD[39], 0);
	TextDrawSetOutline(InGameTD[39], 1);
	TextDrawBackgroundColor(InGameTD[39], 51);
	TextDrawFont(InGameTD[39], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[39], 1);

	InGameTD[40] = TextDrawCreate(368.666809, 432.674194, "\\");
	TextDrawLetterSize(InGameTD[40], 0.293999, 0.571259);
	TextDrawAlignment(InGameTD[40], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[40], boja);
	TextDrawSetShadow(InGameTD[40], 0);
	TextDrawSetOutline(InGameTD[40], 1);
	TextDrawBackgroundColor(InGameTD[40], 51);
	TextDrawFont(InGameTD[40], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[40], 1);

	InGameTD[41] = TextDrawCreate(391.000122, 437.799987, "00:00:00_-_00.00.0000");
	TextDrawLetterSize(InGameTD[41], 0.095333, 0.641777);
	TextDrawAlignment(InGameTD[41], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[41], -2139062017);
	TextDrawSetShadow(InGameTD[41], 0);
	TextDrawSetOutline(InGameTD[41], 1);
	TextDrawBackgroundColor(InGameTD[41], 51);
	TextDrawFont(InGameTD[41], TEXT_DRAW_FONT_2);
	TextDrawSetProportional(InGameTD[41], 1);

	InGameTD[42] = TextDrawCreate(443.666656, 437.385162, "t");
	TextDrawLetterSize(InGameTD[42], 0.175333, 0.720592);
	TextDrawAlignment(InGameTD[42], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[42], -1);
	TextDrawSetShadow(InGameTD[42], 0);
	TextDrawSetOutline(InGameTD[42], 1);
	TextDrawBackgroundColor(InGameTD[42], 51);
	TextDrawFont(InGameTD[42], TEXT_DRAW_FONT_3);
	TextDrawSetProportional(InGameTD[42], 1);

	InGameTD[43] = TextDrawCreate(455.666625, 433.237213, "particle:lamp_shad_64");
	TextDrawLetterSize(InGameTD[43], 0.000000, 0.000000);
	TextDrawTextSize(InGameTD[43], 21.000007, 14.933343);
	TextDrawAlignment(InGameTD[43], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[43], boja);
	TextDrawSetShadow(InGameTD[43], 0);
	TextDrawSetOutline(InGameTD[43], 0);
	TextDrawFont(InGameTD[43], TEXT_DRAW_FONT_SPRITE_DRAW);

	InGameTD[44] = TextDrawCreate(463.666687, 437.214752, "$");
	TextDrawLetterSize(InGameTD[44], 0.251000, 0.898962);
	TextDrawAlignment(InGameTD[44], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[44], boja);
	TextDrawSetShadow(InGameTD[44], 0);
	TextDrawSetOutline(InGameTD[44], 1);
	TextDrawBackgroundColor(InGameTD[44], 51);
	TextDrawFont(InGameTD[44], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[44], 1);

	InGameTD[45] = TextDrawCreate(518.333312, 432.163177, "particle:lamp_shad_64");
	TextDrawLetterSize(InGameTD[45], 0.000000, 0.000000);
	TextDrawTextSize(InGameTD[45], 21.000007, 14.933343);
	TextDrawAlignment(InGameTD[45], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[45], boja);
	TextDrawSetShadow(InGameTD[45], 0);
	TextDrawSetOutline(InGameTD[45], 0);
	TextDrawFont(InGameTD[45], TEXT_DRAW_FONT_SPRITE_DRAW);

	InGameTD[46] = TextDrawCreate(526.333190, 436.555541, "G");
	TextDrawLetterSize(InGameTD[46], 0.251000, 0.898962);
	TextDrawAlignment(InGameTD[46], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[46], boja);
	TextDrawSetShadow(InGameTD[46], 0);
	TextDrawSetOutline(InGameTD[46], 1);
	TextDrawBackgroundColor(InGameTD[46], 51);
	TextDrawFont(InGameTD[46], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[46], 1);

	InGameTD[47] = TextDrawCreate(594.333312, 431.747955, "\\");
	TextDrawLetterSize(InGameTD[47], 0.656666, 1.392592);
	TextDrawAlignment(InGameTD[47], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[47], -1);
	TextDrawSetShadow(InGameTD[47], 0);
	TextDrawSetOutline(InGameTD[47], 1);
	TextDrawBackgroundColor(InGameTD[47], 51);
	TextDrawFont(InGameTD[47], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[47], 1);

	InGameTD[48] = TextDrawCreate(600.333251, 431.577819, "\\");
	TextDrawLetterSize(InGameTD[48], 0.656666, 1.392592);
	TextDrawAlignment(InGameTD[48], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[48], boja);
	TextDrawSetShadow(InGameTD[48], 0);
	TextDrawSetOutline(InGameTD[48], 1);
	TextDrawBackgroundColor(InGameTD[48], 51);
	TextDrawFont(InGameTD[48], TEXT_DRAW_FONT_1);
	TextDrawSetProportional(InGameTD[48], 1);

	InGameTD[49] = TextDrawCreate(561.3332, 7.0666, "V");
	TextDrawLetterSize(InGameTD[49], 0.6526, 3.1514);
	TextDrawAlignment(InGameTD[49], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[49], boja);
	TextDrawBackgroundColor(InGameTD[49], 255);
	TextDrawFont(InGameTD[49], TEXT_DRAW_FONT_2);
	TextDrawSetProportional(InGameTD[49], 1);
	TextDrawSetShadow(InGameTD[49], 0);

	InGameTD[50] = TextDrawCreate(572.0000, 0.0148, "-");
	TextDrawLetterSize(InGameTD[50], 2.3713, 3.3546);
	TextDrawAlignment(InGameTD[50], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[50], boja);
	TextDrawBackgroundColor(InGameTD[50], 255);
	TextDrawFont(InGameTD[50], TEXT_DRAW_FONT_2);
	TextDrawSetProportional(InGameTD[50], 1);
	TextDrawSetShadow(InGameTD[50], 0);

	InGameTD[51] = TextDrawCreate(575.0001, 17.0222, "IBE");
	TextDrawLetterSize(InGameTD[51], 0.4000, 1.6000);
	TextDrawAlignment(InGameTD[51], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColor(InGameTD[51], -1);
	TextDrawBackgroundColor(InGameTD[51], 255);
	TextDrawFont(InGameTD[51], TEXT_DRAW_FONT_2);
	TextDrawSetProportional(InGameTD[51], 1);
	TextDrawSetShadow(InGameTD[51], 0);

	for(new i = 0; i < 52; i++)
	{
    	TextDrawShowForPlayer(playerid, InGameTD[i]);
	}

	PlayerTextDrawShow(playerid, BankaTD[playerid]);
	PlayerTextDrawShow(playerid, ZlatoTD[playerid]);
	UpdateBanka(playerid);
	UpdateZlato(playerid);
	return 1;
}

CheckQuestDone(playerid, broj)
{
    if(QuestInfo[playerid][quest_done][broj-1] == true) return 1;
    if(Ulogovan[playerid] != 1) return 1;
    new query[256];
    format(query, sizeof(query), "SELECT `Ime` FROM `quests` WHERE `Ime` = '%s'", ReturnPlayerName(playerid));
    mysql_tquery(SQL, query, "CheckQuestDone2", "id", playerid,broj);
    return 1;
}

UnistiTDs(playerid)
{
    for(new i = 0; i < 52; i++)
	{
		if(InGameTD[i] != Text:INVALID_TEXT_DRAW)
		{
	        TextDrawDestroy(InGameTD[i]);
	        InGameTD[i] = Text:INVALID_TEXT_DRAW;
	    }
   	}
	PlayerTextDrawHide(playerid, BankaTD[playerid]);
	PlayerTextDrawHide(playerid, ZlatoTD[playerid]);
	return 1;
}

KreirajRent(rentid)
{
    RentObjekat[rentid] = CreateDynamicObject(4639, RentInfo[rentid][ObjekatX], RentInfo[rentid][ObjekatY], RentInfo[rentid][ObjekatZ], 0.0, 0.0, RentInfo[rentid][ObjekatR], -1, -1, -1, 300.0, 300.0);
	if(RentInfo[rentid][PickupX] != 0 || RentInfo[rentid][PickupY] != 0)
	{
		new str[256];
		format(str, sizeof(str), "{1b71bc}> {FFFFFF}RENT {1b71bc}<\n{FFFFFF}RentID: {1b71bc}%d\n{FFFFFF}Da iznajmite vozilo {1b71bc}/rent", rentid);
		RentLabel[rentid] = CreateDynamic3DTextLabel(str, -1, RentInfo[rentid][PickupX], RentInfo[rentid][PickupY], RentInfo[rentid][PickupZ]+0.1, 15.0,_,_,_, 0, 0,_,_);
    	RentPickup[rentid] = CreateDynamicPickup(19131, 1, RentInfo[rentid][PickupX], RentInfo[rentid][PickupY], RentInfo[rentid][PickupZ]);
    }
	return 1;
}

UnistiRent(rentid)
{
    DestroyDynamicObject(RentObjekat[rentid]);
	if(RentInfo[rentid][PickupX] != 0 || RentInfo[rentid][PickupY] != 0)
	{
		if(IsValidDynamic3DTextLabel(RentLabel[rentid])) DestroyDynamic3DTextLabel(RentLabel[rentid]);
		if(IsValidDynamicPickup(RentPickup[rentid])) DestroyDynamicPickup(RentPickup[rentid]);
    }
	return 1;
}

UpdateRent(rentid)
{
    if(RentInfo[rentid][PickupX] != 0 || RentInfo[rentid][PickupY] != 0)
	{
	    if(IsValidDynamic3DTextLabel(RentLabel[rentid])) DestroyDynamic3DTextLabel(RentLabel[rentid]);
		if(IsValidDynamicPickup(RentPickup[rentid])) DestroyDynamicPickup(RentPickup[rentid]);
		new str[256];
		format(str, sizeof(str), "{1b71bc}> {FFFFFF}RENT {1b71bc}<\n{FFFFFF}RentID: {1b71bc}%d\n{FFFFFF}Da iznajmite vozilo {1b71bc}/rent", rentid);
		RentLabel[rentid] = CreateDynamic3DTextLabel(str, -1, RentInfo[rentid][PickupX], RentInfo[rentid][PickupY], RentInfo[rentid][PickupZ]+0.1, 15.0,_,_,_, 0, 0,_,_);
    	RentPickup[rentid] = CreateDynamicPickup(19131, 1, RentInfo[rentid][PickupX], RentInfo[rentid][PickupY], RentInfo[rentid][PickupZ]);
    }
	return 1;
}

KreirajRentVozilo(playerid, model, rentid)
{
    new rentStr[64];

    RentVeh[playerid] = AddStaticVehicleEx(model, RentInfo[rentid][VoziloX], RentInfo[rentid][VoziloY], RentInfo[rentid][VoziloZ], RentInfo[rentid][VoziloR], 2, 2, 2400);
    Fuel[RentVeh[playerid]] = 45;
    format(rentStr, sizeof(rentStr), "{1b71bc}[ RENT ]\n{FFFFFF}%s", ReturnPlayerName(playerid));
	RentVehLabel[RentVeh[playerid]] = CreateDynamic3DTextLabel(rentStr, -1 , RentInfo[rentid][VoziloX], RentInfo[rentid][VoziloY], RentInfo[rentid][VoziloZ], 15.0,_, RentVeh[playerid],_, 0, 0,_,_);
    PutPlayerInVehicle(playerid, RentVeh[playerid], 0);
	TipVozila[RentVeh[playerid]] = 1;
	IznajmioVozilo[playerid] = GetPlayerVehicleID(playerid);
	return 1;
}

GetNearestRent(playerid)
{
	for(new rentid = 1; rentid < MAX_RENT; rentid++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 10.0, RentInfo[rentid][ObjekatX], RentInfo[rentid][ObjekatY], RentInfo[rentid][ObjekatZ]))
		{
			return rentid;
		}
	}
	return -1;
}

GetNearestRentPickup(playerid)
{
	for(new rentid = 1; rentid < MAX_RENT; rentid++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 10.0, RentInfo[rentid][PickupX], RentInfo[rentid][PickupY], RentInfo[rentid][PickupZ]))
		{
			return rentid;
		}
	}
	return -1;
}

DaljinaIgraca(Float:radius, playerid, targetid)
{
	new Float:posx, Float:posy, Float:posz;
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	GetPlayerPos(targetid, posx, posy, posz);
	tempposx = (oldposx -posx);
	tempposy = (oldposy -posy);
	tempposz = (oldposz -posz);
	if (((tempposx < radius) && (tempposx > -radius)) && ((tempposy < radius) && (tempposy > -radius)) && ((tempposz < radius) && (tempposz > -radius)))
	{
		return 1;
	}
	return 0;
}

KreirajAtm(i)
{
	if(AtmInfo[i][aPostavljen] == 1)
	{
	    AtmInfo[i][aAtmLabel] = CreateDynamic3DTextLabel("{1b71bc}[BANKOMAT]\n{FFFFFF}Da koristite bankomat\nKomanda: {1b71bc}/bankomat", 0x1b71bcFF, AtmInfo[i][aX], AtmInfo[i][aY], AtmInfo[i][aZ]+1.0, 15.0,_,_,_, AtmInfo[i][aVW], AtmInfo[i][aInt],_,_);
		AtmInfo[i][aObjekat] = CreateDynamicObject(ATM_OBJEKAT, AtmInfo[i][aX], AtmInfo[i][aY], AtmInfo[i][aZ], 0.0, 0.0, AtmInfo[i][aAngle], AtmInfo[i][aVW], AtmInfo[i][aInt],_,_);
	}
	else printf("Bankomat ID: %d nije kreiran jer mu je var postavljen nije na 1.", i);
	return 1;
}

OrgLabel(id)
{
    DestroyDynamic3DTextLabel(Org3D[id]); DestroyDynamic3DTextLabel(OrgIzlaz3D[id]);
	DestroyDynamicPickup(OrgPickup[id]); DestroyDynamicPickup(OrgIzlazPickup[id]);
    new	string[256];
	OrgPickup[id] = CreateDynamicPickup(19135, 1, OrgInfo[id][oPozExtX], OrgInfo[id][oPozExtY], OrgInfo[id][oPozExtZ]);
	format(string ,sizeof(string),"{FF0000}[ {FFFFFF}%s {FF0000}]\n{FFFFFF}Da udjete koristite tipku {FF0000}[ F ]", OrgInfo[id][oIme]);
	Org3D[id] = CreateDynamic3DTextLabel(string, -1, OrgInfo[id][oPozExtX], OrgInfo[id][oPozExtY], OrgInfo[id][oPozExtZ], 25.0,_,_,_, 0, 0,_,_);
 	OrgIzlazPickup[id] = CreateDynamicPickup(19135, 1, OrgInfo[id][oPozIntX], OrgInfo[id][oPozIntY], OrgInfo[id][oPozIntZ],OrgInfo[id][oVw], OrgInfo[id][oInt]);
	format(string, sizeof(string),"{FF0000}[ {FFFFFF}%s {FF0000}]\n{FFFFFF}Da izadjete koristite tipku {FF0000}[ F ]", OrgInfo[id][oIme]);
	OrgIzlaz3D[id] = CreateDynamic3DTextLabel(string, -1, OrgInfo[id][oPozIntX], OrgInfo[id][oPozIntY], OrgInfo[id][oPozIntZ], 10.0,_,_,_, OrgInfo[id][oVw], OrgInfo[id][oInt],_,_);
	if(OrgInfo[id][oSef] == 1)
	{
		if(OrgInfo[id][oDrzavni_Sef] == 1)
		{
		    DestroyDynamic3DTextLabel(OrgSefLabel[id]);
			DestroyDynamicPickup(OrgSefPickup[id]);
  			format(string ,sizeof(string),"{FF0000}[ Sef ]\n\nNovac: {FFFFFF}%d\n\nDa otvorite sef {FF0000}[ H ]", OrgInfo[id][oSefNovac]);
			OrgSefLabel[id] = CreateDynamic3DTextLabel(string, -1, OrgInfo[id][oSefPozX], OrgInfo[id][oSefPozY], OrgInfo[id][oSefPozZ], 6.0,_,_,_, OrgInfo[id][oVw], OrgInfo[id][oInt],_,_);
   			OrgSefPickup[id] = CreateDynamicPickup(1252, 1, OrgInfo[id][oSefPozX], OrgInfo[id][oSefPozY], OrgInfo[id][oSefPozZ], OrgInfo[id][oVw]);
		}
		else if(OrgInfo[id][oDrzavni_Sef] == 0)
		{
		    DestroyDynamic3DTextLabel(OrgSefLabel[id]);
			DestroyDynamicPickup(OrgSefPickup[id]);
  			format(string ,sizeof(string),"{FF0000}[ Sef ]\n\nNovac: {FFFFFF}%d\n{FF0000}Droga: {FFFFFF}%d\n{FF0000}Materijali: {FFFFFF}%d\n\nDa otvorite sef {FF0000}[ H ]", OrgInfo[id][oSefNovac], OrgInfo[id][oSefDroga], OrgInfo[id][oSefMats]);
	    	OrgSefLabel[id] = CreateDynamic3DTextLabel(string, -1, OrgInfo[id][oSefPozX], OrgInfo[id][oSefPozY], OrgInfo[id][oSefPozZ], 6.0,_,_,_, OrgInfo[id][oVw], OrgInfo[id][oInt],_,_);
      		OrgSefPickup[id] = CreateDynamicPickup(1252, 1, OrgInfo[id][oSefPozX], OrgInfo[id][oSefPozY], OrgInfo[id][oSefPozZ], OrgInfo[id][oVw]);
		}
	}
	return 1;
}

KuceLP(idkuce)
{
	new string[500];
	if(KucaInfo[idkuce][kProveraVlasnika] == 0)
	{
		DestroyDynamic3DTextLabel(KucaLabel[idkuce]);
		DestroyDynamicPickup(KucaPickup[idkuce]);
        format(string,sizeof(string),"{04CC29}[ KUCA NA PRODAJU ]\nBroj kuce: {FFFFFF}%d\n{04CC29}Vrsta: {FFFFFF}%s\n{04CC29}Cena: {FFFFFF}%d$\n{04CC29}Level: {FFFFFF}%d\n{04CC29}Za kupovinu kuce /kupikucu",idkuce,Vrsta_Kuce(KucaInfo[idkuce][kVrsta]),KucaInfo[idkuce][kCena],KucaInfo[idkuce][kLevel]);
        KucaLabel[idkuce] = CreateDynamic3DTextLabel(string ,0x33CCFFAA,KucaInfo[idkuce][kUlazX],KucaInfo[idkuce][kUlazY],KucaInfo[idkuce][kUlazZ], 10);
        KucaPickup[idkuce] = CreateDynamicPickup(1273, 1, KucaInfo[idkuce][kUlazX], KucaInfo[idkuce][kUlazY], KucaInfo[idkuce][kUlazZ]);
	}
	else if(KucaInfo[idkuce][kProveraVlasnika] == 1)
	{
		DestroyDynamic3DTextLabel(KucaLabel[idkuce]);
		DestroyDynamicPickup(KucaPickup[idkuce]);
        if(KucaInfo[idkuce][kRent] == 0)
		{
			format(string,sizeof(string),"{04CC29}[ KUCA ]\nBroj kuce: {FFFFFF}%d\n{04CC29}Vlasnik: {FFFFFF}%s\n{04CC29}Vrsta: {FFFFFF}%s\n{04CC29}Level: {FFFFFF}%d\n{04CC29}Cena: {FFFFFF}%d$",idkuce,KucaInfo[idkuce][kVlasnik],Vrsta_Kuce(KucaInfo[idkuce][kVrsta]),KucaInfo[idkuce][kLevel],KucaInfo[idkuce][kCena]);
		}
		else if(KucaInfo[idkuce][kRent] == 1)
		{
			format(string,sizeof(string),"{04CC29}[ KUCA ]\nBroj kuce: {FFFFFF}%d\n{04CC29}Vlasnik: {FFFFFF}%s\n{04CC29}Vrsta: {FFFFFF}%s\n{04CC29}Level: {FFFFFF}%d\n{04CC29}Cena: {FFFFFF}%d$\n{04CC29}Cena Renta: {FFFFFF}%d$\n{04CC29}Za rent kuce /rentajkucu",idkuce,KucaInfo[idkuce][kVlasnik],Vrsta_Kuce(KucaInfo[idkuce][kVrsta]),KucaInfo[idkuce][kLevel],KucaInfo[idkuce][kCena],KucaInfo[idkuce][kCenaRenta]);
		}
        KucaLabel[idkuce] = CreateDynamic3DTextLabel(string ,0x33CCFFAA, KucaInfo[idkuce][kUlazX],KucaInfo[idkuce][kUlazY],KucaInfo[idkuce][kUlazZ],10);
        KucaPickup[idkuce] = CreateDynamicPickup(19522, 1, KucaInfo[idkuce][kUlazX], KucaInfo[idkuce][kUlazY], KucaInfo[idkuce][kUlazZ]);
	}
	return 1;
}

StanLP(s)
{
	new string[300];
    if(StanInfo[s][sProveraVlasnika] == 0)
	{
	    DestroyDynamic3DTextLabel(StanLabel[s]);
		DestroyDynamicPickup(StanPickup[s]);
		format(string,sizeof(string),"{56dc7d}[ STAN NA PRODAJU ]\nBroj stana: {FFFFFF}%d\n{56dc7d}Cena: {FFFFFF}%d$\n{56dc7d}Level: {FFFFFF}%d\nZa kupovinu {56dc7d}/kupistan", s, StanInfo[s][sCena], StanInfo[s][sLevel]);
		StanLabel[s] = CreateDynamic3DTextLabel(string, -1, StanInfo[s][sUlazX], StanInfo[s][sUlazY], StanInfo[s][sUlazZ], 10);
		StanPickup[s] = CreateDynamicPickup(19524, 1, StanInfo[s][sUlazX], StanInfo[s][sUlazY], StanInfo[s][sUlazZ]);
	}
	else if(StanInfo[s][sProveraVlasnika] == 1)
	{
	    DestroyDynamic3DTextLabel(StanLabel[s]);
		DestroyDynamicPickup(StanPickup[s]);
		format(string,sizeof(string),"{56dc7d}[ STAN ]\nVlasnik: {FFFFFF}%s\n{56dc7d}Cena: {FFFFFF}%d$\n{56dc7d}Level: {FFFFFF}%d\n{56dc7d}Broj stana: {FFFFFF}%d", StanInfo[s][sVlasnik], StanInfo[s][sCena], StanInfo[s][sLevel], s);
		StanLabel[s] = CreateDynamic3DTextLabel(string, -1, StanInfo[s][sUlazX], StanInfo[s][sUlazY], StanInfo[s][sUlazZ], 10);
		StanPickup[s] = CreateDynamicPickup(19523, 1, StanInfo[s][sUlazX], StanInfo[s][sUlazY], StanInfo[s][sUlazZ]);
	}
	return 1;
}

Vrsta_Kuce(ku_id)
{
	new string[15];
	switch(ku_id)
	{
		case MALA_KUCA: string = "Mala Kuca";
		case SREDNJA_KUCA: string = "Srednja Kuca";
		case VELIKA_KUCA: string = "Velika Kuca";
		case VILLA: string = "Vila";
		default: string = "Nepoznata";
	}
	return string;
}

GetNearestAtm( playerid )
{
	for(new i = 1; i < MAX_ATM; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5, AtmInfo[i][aX], AtmInfo[i][aY], AtmInfo[i][aZ]))
		{
			return i;
		}
	}
	return -1;
}

GetNearestRadar( playerid )
{
	for(new i = 1; i < MAX_RADARA; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5, RadarInfo[i][raPozX], RadarInfo[i][raPozY], RadarInfo[i][raPozZ]))
		{
			return i;
		}
	}
	return -1;
}

GetNearestPlant( playerid )
{
	for(new i = 1; i < MAX_PLANTAZA; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5, PlantazaInfo[i][PlantazaX], PlantazaInfo[i][PlantazaY], PlantazaInfo[i][PlantazaZ]))
		{
			return i;
		}
	}
	return -1;
}

getNearestSlut(playerid) {
    for(new i = 1; i < MAX_SLUTS; i++) {

        if(IsPlayerInRangeOfPoint(playerid, 3.0, ProstitutkaInfo[i][PozX], ProstitutkaInfo[i][PozY], ProstitutkaInfo[i][PozZ])) return i;
    }
    return -1;
}

Update_Teritoriju(id)
{
	new string[300];
	if(id != -1)
	{
		if(IsValidDynamic3DTextLabel(TeritorijeInfo[id][t_Label])) { DestroyDynamic3DTextLabel(TeritorijeInfo[id][t_Label]); }
		if(IsValidDynamicPickup(TeritorijeInfo[id][t_Pickup])) { DestroyDynamicPickup(TeritorijeInfo[id][t_Pickup]); }
		if(!TeritorijeInfo[id][t_Zauzeta])
		{
			TeritorijeInfo[id][t_Pickup] = CreateDynamicPickup(1313, 1, TeritorijeInfo[id][t_PickupPos][0], TeritorijeInfo[id][t_PickupPos][1], TeritorijeInfo[id][t_PickupPos][2], 0, 0);
			format(string, sizeof(string), "{6aaee9}[ TERITORIJA - %d ]\nVlasnistvo: {00FF00}Slobodna\n{FFFFFF}Ukoliko zelite da je zauzmete kucajte\n{6aaee9}[ /zauzmiteritoriju ]", id);
			TeritorijeInfo[id][t_Label] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, TeritorijeInfo[id][t_PickupPos][0], TeritorijeInfo[id][t_PickupPos][1], TeritorijeInfo[id][t_PickupPos][2], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
		}
		else if(TeritorijeInfo[id][t_Zauzeta])
		{
			TeritorijeInfo[id][t_Pickup] = CreateDynamicPickup(1313, 1, TeritorijeInfo[id][t_PickupPos][0], TeritorijeInfo[id][t_PickupPos][1], TeritorijeInfo[id][t_PickupPos][2], 0, 0);
			format(string, sizeof(string), "{6aaee9}[ TERITORIJA - %d ]\nVlasnistvo: {FF0000}%s\n{6aaee9}Zauzeta Datuma: {FF0000}%s\n{FFFFFF}Ukoliko zelite da je zauzmete kucajte\n{6aaee9}[ /zauzmiteritoriju ]", id, OrgInfo[TeritorijeInfo[id][t_Org_ID]][oIme], TeritorijeInfo[id][t_Datum]);
			TeritorijeInfo[id][t_Label] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, TeritorijeInfo[id][t_PickupPos][0], TeritorijeInfo[id][t_PickupPos][1], TeritorijeInfo[id][t_PickupPos][2], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
		}
	}
	return 1;
}

FirmaLabelIPickup(idfirme)
{
	new string[256];
	if(FirmaInfo[idfirme][fImaVlasnika] == 0)
	{
		DestroyDynamic3DTextLabel(FirmaLabel[idfirme]);
		DestroyDynamicPickup(FirmaPickup[idfirme]);
		format(string,sizeof(string),"{49d07b}[ FIRMA NA PRODAJU ]\n\n{49d07b}[ {FFFFFF}%s {49d07b}]\nBroj firme: {FFFFFF}%d\n{49d07b}Cena: {FFFFFF}%d$\n{49d07b}Level: {FFFFFF}%d\n{49d07b}Vrsta: {FFFFFF}%s\n{49d07b}Za kupovinu /kupifirmu",FirmaInfo[idfirme][fNaziv],idfirme,FirmaInfo[idfirme][fCena],FirmaInfo[idfirme][fLevel],Vrsta_Firme(FirmaInfo[idfirme][fVrsta]));
		FirmaLabel[idfirme] = CreateDynamic3DTextLabel(string, -1, FirmaInfo[idfirme][fUlazX], FirmaInfo[idfirme][fUlazY], FirmaInfo[idfirme][fUlazZ], 10);
		FirmaPickup[idfirme] = CreateDynamicPickup(1274, 1, FirmaInfo[idfirme][fUlazX], FirmaInfo[idfirme][fUlazY], FirmaInfo[idfirme][fUlazZ]);
	}
	else if(FirmaInfo[idfirme][fImaVlasnika] == 1)
	{
		DestroyDynamic3DTextLabel(FirmaLabel[idfirme]);
		DestroyDynamicPickup(FirmaPickup[idfirme]);
		format(string,sizeof(string),"{49d07b}[ FIRMA ]\n\n{49d07b}[ {FFFFFF}%s {49d07b}]\nBroj firme: {FFFFFF}%d\n{49d07b}Vlasnik: {FFFFFF}%s\n{49d07b}Level: {FFFFFF}%d\n{49d07b}Cena: {FFFFFF}%d$\n{49d07b}Vrsta: {FFFFFF}%s",FirmaInfo[idfirme][fNaziv],idfirme,FirmaInfo[idfirme][fVlasnik],FirmaInfo[idfirme][fLevel],FirmaInfo[idfirme][fCena],Vrsta_Firme(FirmaInfo[idfirme][fVrsta]));
		FirmaLabel[idfirme] = CreateDynamic3DTextLabel(string, -1, FirmaInfo[idfirme][fUlazX], FirmaInfo[idfirme][fUlazY], FirmaInfo[idfirme][fUlazZ], 10);
		FirmaPickup[idfirme] = CreateDynamicPickup(1239, 1, FirmaInfo[idfirme][fUlazX], FirmaInfo[idfirme][fUlazY], FirmaInfo[idfirme][fUlazZ]);
	}
	return 1;
}

Vrsta_Firme(idfirme)
{
	new string[15];
	switch(idfirme)
	{
		case VRSTA_MARKET: string = "Market 24/7";
		case VRSTA_BURG: string = "Burg";
		case VRSTA_CLUCKIN: string = "Cluckin Bell";
		case VRSTA_PIZZA: string = "Picerija";
		case VRSTA_PIGPEN: string = "Pig Pen";
		case VRSTA_BAR: string = "Kafana";
		case VRSTA_GYM: string = "Teretana";
		case VRSTA_SEXSHOP: string = "Sex Shop";
		case VRSTA_BINCO: string = "Butik";
		case VRSTA_GUNSHOP: string = "Oruzaonica";
		case VRSTA_DISCO: string = "Diskoteka";
		case VRSTA_RESTORAN: string = "Restoran";
		case VRSTA_ZIP: string = "Butik";
		case VRSTA_VICTIM: string = "Butik";
		case VRSTA_SUBURBAN: string = "Butik";
		case VRSTA_KLADIONICA: string = "Kladionica";
		case VRSTA_POSAO: string = "Posao Firma";
		default: string = "Nepoznata";
	}
	return string;
}

OnePlayAnim(playerid, const animlib[], const animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
    gPlayerUsingLoopingAnim[playerid] = true;
	ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
}

LoopingAnim(playerid, const animlib[], const animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
    gPlayerUsingLoopingAnim[playerid] = true;
    ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
}

StopLoopingAnim(playerid)
{
    gPlayerUsingLoopingAnim[playerid] = false;
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
}

PreloadAnimLib(playerid, const animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,false,false,false,false,0, SYNC_NONE);
}

TicketWhat(const what[])
{
    if(strfind("1", what, true) != -1) return 1;
    else if(strfind("-1", what, true) != -1) return -1;
    else if(strfind("2", what, true) != -1) return 2;
    else if(strfind("X", what, true) != -1) return 3;
    return 0;
}

GetTicketPlay( vrsta )
{
    new gorivostring[20];

    if( vrsta == 1 ) gorivostring = "KI 1";
    else if( vrsta == 2 ) gorivostring = "KI 2";
    else if( vrsta == 3 ) gorivostring = "KI X";
    else if( vrsta == 4 ) gorivostring = "UK 3+";
    else if( vrsta == 5 ) gorivostring = "UK 4+";
    else if( vrsta == 6 ) gorivostring = "GG&3+";
    else if( vrsta == 0 ) gorivostring = "Ceka se";
    else gorivostring = "Unknown";
    return gorivostring;
}

GetTicketPlay2( rezultat, odigrao )
{
    new gorivostring[20];
    if( rezultat == -1 ) gorivostring = "Odgodjeno";
    else if( rezultat == 0 ) gorivostring = "Ceka se";
    else if(odigrao < 4)
    {
    if( rezultat == 1 ) gorivostring = "KI 1";
    else if( rezultat == 2 ) gorivostring = "KI 2";
    else if( rezultat == 3 ) gorivostring = "KI X";
    }
    else if( odigrao == 4 && rezultat >= 3) gorivostring = "Pogodak";//3+
    else if( odigrao == 4) gorivostring = "Promasaj";//3+
    else if( odigrao == 5 && rezultat >= 4 ) gorivostring = "Pogodak";
    else if( odigrao == 5 ) gorivostring = "Promasaj";
    else if( rezultat == 6 ) gorivostring = "Pogodak";//gg&3+
    else if( rezultat == 7 ) gorivostring = "Promasaj";//gg&3+
    //else if( rezultat == 0 ) gorivostring = "Ceka se";
    else gorivostring = "Unknown";
    return gorivostring;
}

GetPlayerIdFromName(const playername[])
{
	foreach(new i : Player)
	{
		new playername2[MAX_PLAYER_NAME];
		format(playername2, sizeof(playername2), "%s", ReturnPlayerName(i));
		if(strcmp(playername2, playername, true, strlen(playername)) == 0)
		{
			return i;
		}
	}
	return INVALID_PLAYER_ID;
}

PolicijaVozila(carid)
{
	for(new i = 0; i < sizeof(vPD); i++)
	{
		if(carid == vPD[i]) return 1;
	}
	return 0;
}

SAJVozila(carid)
{
	for(new i = 0; i < sizeof(vSAJ); i++)
	{
		if(carid == vSAJ[i]) return 1;
	}
	return 0;
}

GSFVozila(carid)
{
	for(new i = 0; i < sizeof(vGSF); i++)
	{
		if(carid == vGSF[i]) return 1;
	}
	return 0;
}

BallasVozila(carid)
{
	for(new i = 0; i < sizeof(vBallas); i++)
	{
		if(carid == vBallas[i]) return 1;
	}
	return 0;
}

MS13Vozila(carid)
{
	for(new i = 0; i < sizeof(vMS13); i++)
	{
		if(carid == vMS13[i]) return 1;
	}
	return 0;
}

BDTVozila(carid)
{
	for(new i = 0; i < sizeof(vBDT); i++)
	{
		if(carid == vBDT[i]) return 1;
	}
	return 0;
}

LCNVozila(carid)
{
	for(new i = 0; i < sizeof(vLCN); i++)
	{
		if(carid == vLCN[i]) return 1;
	}
	return 0;
}

ZatvoriRK(id)
{
	if(id == 1)
	{
	    ozpdkapija = 0; MoveDynamicObject(kapijapd,1590.4000244141, -1638, 15.199999809265, 2.00);
	}
	else if(id == 2)
	{
	    ozpdrampa = 0; MoveDynamicObject(pdrampa, 1544.6932373,-1630.9000244,13.1000004, 0.02, 0.0000000, 90.0000000, 90.0000000);
	}
	else if(id == 3)
	{
	    sajkapijaoz = 0; MoveDynamicObject(sajkapija, 1286.158325, -1646.239257, 15.306025, 2.00);
	}
	else if(id == 4)
	{
	    pijacakapijaoz = 0; MoveDynamicObject(pijacakapija, 1104.65845, -1747.14478, 14.88000, 2.00);
	}
	else if(id == 5)
	{
	    bdtkapijaoz = 0; MoveDynamicObject(bdtkapija, 1251.437255, -767.287841, 93.825714, 2.0);
	}
	return 1;
}

ClanDB(playerid)
{
	if(PI[playerid][Clan] == 1) return 1;
	else if(PI[playerid][Lider] == 1) return 1;
	if(PI[playerid][Clan] == 2) return 1;
	else if(PI[playerid][Lider] == 2) return 1;
	return 0;
}

LiderDB(playerid)
{
	if(PI[playerid][Lider] == 1) return 1;
	else if(PI[playerid][Lider] == 2) return 1;
	return 0;
}

ClanIlegalca(playerid)
{
	if(PI[playerid][Clan] == 3) return 1;
	else if(PI[playerid][Lider] == 3) return 1;

	else if(PI[playerid][Clan] == 4) return 1;
	else if(PI[playerid][Lider] == 4) return 1;

	else if(PI[playerid][Clan] == 5) return 1;
	else if(PI[playerid][Lider] == 5) return 1;

	else if(PI[playerid][Clan] == 6) return 1;
	else if(PI[playerid][Lider] == 6) return 1;
	
	else if(PI[playerid][Clan] == 7) return 1;
	else if(PI[playerid][Lider] == 7) return 1;
	return 0;
}

ClanBande(playerid)
{
	if(PI[playerid][Clan] == 3) return 1;
	else if(PI[playerid][Lider] == 3) return 1;

	else if(PI[playerid][Clan] == 4) return 1;
	else if(PI[playerid][Lider] == 4) return 1;

	else if(PI[playerid][Clan] == 5) return 1;
	else if(PI[playerid][Lider] == 5) return 1;
	return 0;
}

ClanMafije(playerid)
{
	if(PI[playerid][Clan] == 6) return 1;
	else if(PI[playerid][Lider] == 6) return 1;
	
	else if(PI[playerid][Clan] == 7) return 1;
	else if(PI[playerid][Lider] == 7) return 1;
	return 0;
}

randomExx(const iMin, const iMax) {
	return random(iMax - iMin) + iMin;
}

PostaviWanted(playerid, const zlocin[], const prijavio[])
{
	if(Ulogovan[playerid] == 1)
	{
		new string[256];
		if(Trazeni_Level[playerid] > 6) { Trazeni_Level[playerid] = 6; }
		va_SendClientMessage(playerid, -1, "Pocinili ste zlocin: {FF0000}%s {FFFFFF}| Prijavio: {FF0000}%s!", zlocin, prijavio);
		format(string, sizeof(string), "HQ: {FFFFFF}Svim jedinicama {168ff8}%s {FFFFFF}je osumljicen za: {168ff8}%s {FFFFFF}| {168ff8}Prijavio: {FFFFFF}%s.", ReturnPlayerName(playerid), zlocin, prijavio);
		PDMessage(0x168ff8FF, string);
		strmid(ZlocinInfo[playerid][zPrijavio], prijavio, 0, strlen(prijavio), 255);
		strmid(ZlocinInfo[playerid][zPocinio], ReturnPlayerName(playerid), 0, strlen(ReturnPlayerName(playerid)), 255);
		strmid(ZlocinInfo[playerid][zZlocin], zlocin, 0, strlen(zlocin), 255);
	}
	return 1;
}

PostaviVLabel(i)
{
	if(PrivatnoVozilo(i))
	{
		if(VoziloInfo[i][vImaVlasnika] == 0)
		{
  			new string[256];
     		format(string, sizeof(string), "{1b71bc}[ VOZILO NA PRODAJU ]\nModel: {FFFFFF}%s\n{1b71bc}Cena: {FFFFFF}$%d\n{FFFFFF}Za kupovinu {1b71bc}/kupivozilo", ImenaVozila[VoziloInfo[i][vModel] - 400], VoziloInfo[i][vCena]/2);
			VoziloInfo[i][v3DText] = CreateDynamic3DTextLabel(string, -1 , 0.0, 0.0, 0.0, 10.0,_, VoziloInfo[i][vID],_, 0, 0,_,_);
   		}
	    else if(VoziloInfo[i][vImaVlasnika] == 1)
		{
			new stringg[128];
   			format(stringg, sizeof(stringg), "{1b71bc}[ VLASNIK: {FFFFFF}%s {1b71bc}]", VoziloInfo[i][vVlasnik]);
			VoziloInfo[i][v3DText] = CreateDynamic3DTextLabel(stringg, -1 , 0.0, 0.0, 0.0, 10.0,_, VoziloInfo[i][vID],_, 0, 0,_,_);
   		}
	}
	return 1;
}

NoviRekord()
{
	if(ServerInfo[sRekord] < NumberOfConnectedPlayers())
	{
	    ServerInfo[sRekord] = NumberOfConnectedPlayers();
        mysql_tqueryEx(SQL, "UPDATE `server` SET `Rekord` = '%d' WHERE `SQLID` = '1'", ServerInfo[sRekord]);
	    va_SendClientMessageToAll(0x1b71bcFF, "#VIBE: {FFFFFF}Novi rekord servera sada iznosi {1b71bc}%d {FFFFFF}igraca.", ServerInfo[sRekord]);
	}
}

NumberOfConnectedPlayers( ) {
	new Connected = 0;
	foreach( new i: Player ) if( IsPlayerConnected( i ) && !IsPlayerNPC( i ) ) Connected++;
	return Connected;
}

KonvertujVreme(vreme)
{
	new minuti, sekunde, string[128];
	if(vreme > 59)
	{
		minuti = floatround(vreme/60);
		sekunde = floatround(vreme - minuti*60);
		if(sekunde > 9) format(string, sizeof(string), "%d:%d", minuti, sekunde);
		else format(string, sizeof(string), "%d:0%d", minuti, sekunde);
	}
	else
	{
		sekunde = floatround(vreme);
		if(sekunde > 9) format(string, sizeof(string), "0:%d", sekunde);
		else format(string, sizeof(string), "0:0%d", sekunde);
	}
	return string;
}

PlantazaLabelUpdate(plant)
{
    DestroyDynamic3DTextLabel(Plantaza3D[plant]);
    new string[256];
    if(PlantazaInfo[plant][PlantazaVreme] == 0)
	{
		format(string, sizeof(string), "{1b71bc}[ {FFFFFF}BILJKA DROGE - %d {1b71bc}]\nVlasnik: {FFFFFF}%s\nDroga je {04CC29}spremna za branje\n{FFFFFF}Komanda: /oberidrogu", plant, PlantazaInfo[plant][PlantazaPosadio]);
		DestroyDynamicObject(PlantazaObjekat[plant]);
		PlantazaObjekat[plant] = CreateDynamicObject(824, PlantazaInfo[plant][PlantazaX], PlantazaInfo[plant][PlantazaY], PlantazaInfo[plant][PlantazaZ]-1, 0.0, 0.0, 0.0);
	}
	else if(PlantazaInfo[plant][PlantazaVreme] > 0)
	{
		format(string, sizeof(string), "{1b71bc}[ {FFFFFF}BILJKA DROGE - %d {1b71bc}]\nVlasnik: {FFFFFF}%s\nPreostalo : %d sekundi\nDroga {FF0000}nije spremna za branje", plant, PlantazaInfo[plant][PlantazaPosadio], PlantazaInfo[plant][PlantazaVreme]);
	}
    Plantaza3D[plant] = CreateDynamic3DTextLabel(string, 0x33CCFFAA, PlantazaInfo[plant][PlantazaX], PlantazaInfo[plant][PlantazaY], PlantazaInfo[plant][PlantazaZ], 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 30.0, -1, 0);
    return 1;
}

KodDrugeTeritorije(Float:x, Float:y)
{
    for(new id = 1; id < MAX_TERITORIJA; id ++)
	{
		if(x <= TeritorijeInfo[id][t_MaxX] && x >= TeritorijeInfo[id][t_MinX] && y <= TeritorijeInfo[id][t_MaxY] && y >= TeritorijeInfo[id][t_MinY])
		{
			return id;
		}
	}
	return -1;
}

KoordinateTeritorije(id, Float:x, Float:y)
{
	if(x <= TeritorijeInfo[id][t_MaxX] && x >= TeritorijeInfo[id][t_MinX] && y <= TeritorijeInfo[id][t_MaxY] && y >= TeritorijeInfo[id][t_MinY])
	{
		return id;
	}
	return -1;
}

// - > Timeri
task Deset_Sekundi[10000]()
{
    foreach(new i: Player)
 	{
		TextDrawSetString(InGameTD[33], RandomSPoruke[random(sizeof(RandomSPoruke))]);
	}
	return 1;
}

task PayPoeni[60000]()
{
    new sat, minut, sekund, godina, mesec, dan;
	gettime(sat, minut, sekund);
	getdate(godina, mesec, dan);
	foreach(new i: Player)
 	{
        if(minut >= 0 && minut <= 3)
		{
			if(DobioPay[i] == 0)
			{
				PayDay(i);
			}
		}
		else if(minut > 3) DobioPay[i] = 0;
	}
	return 1;
}

task GorivoDole[70000]()
{
	foreach(new i: Player)
 	{
		new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(GetPlayerVehicleID(i), engine, lights, alarm, doors, bonnet, boot, objective);
		if(engine == 1)
		{
	        Fuel[GetPlayerVehicleID(i)] --;
			if(Fuel[GetPlayerVehicleID(i)] < 1)
			{
				Fuel[GetPlayerVehicleID(i)] = 0;
			    SetVehicleParamsEx(GetPlayerVehicleID(i), 0, lights, alarm, doors, bonnet, boot, objective);
				GameTextForPlayer(i, "~w~Nema vise ~r~goriva ~w~u vozilu!", 5000, 3);
				va_SendClientMessage(i, 0x1b71bcFF, "#Info: {FFFFFF}Nema vise goriva u vozilu, pa ga ne mozete upaliti!");
			}
			new string[10];
			format(string, sizeof(string), "%dL", Fuel[GetPlayerVehicleID(i)]);
			PlayerTextDrawSetString(i, BrzinaTD[i][10], string);
		}
	}
	return 1;
}

task PolaSekundTimer[500]()
{
	foreach(new i: Player)
	{
		for(new ra_id = 1; ra_id < MAX_RADARA; ra_id++)
		{
		 	if(IsPlayerInRangeOfPoint(i, RadarInfo[ra_id][raDistanca], RadarInfo[ra_id][raPozX], RadarInfo[ra_id][raPozY], RadarInfo[ra_id][raPozZ]))
	   		{
	   			if(GetPlayerState(i) == PLAYER_STATE_DRIVER && IsPlayerInAnyVehicle(i))
	   			{
	   				if(!VoziloJeBicikla(GetVehicleModel(GetPlayerVehicleID(i))))
	   				{
	   					if(PolicijaDuznost[i] == 0 && PI[i][Admin] < 1)
	   					{
							if(GetSpeed(i) > RadarInfo[ra_id][raBrzina] && Radar_Uhvacen[i] <= 0)
							{
								Radar_Uhvacen[i] = 10;
							    if(Ima_Radar_TD[i] == 0)
							    {
							    	KreirajRadarTD(i);
							    }
								new brzina = GetSpeed(i);
								new kazna = brzina * 1500 / 100;
								PI[i][NovacBanka] -= kazna;
								OrgInfo[1][oSefNovac] += kazna; OrgInfo[2][oSefNovac] += kazna;
								mysql_tqueryEx(SQL, "UPDATE `organizations` SET `SefNovac` = '%d' WHERE `SQLID` = '%d'", OrgInfo[1][oSefNovac], OrgInfo[1][SQLID]);
								mysql_tqueryEx(SQL, "UPDATE `organizations` SET `SefNovac` = '%d' WHERE `SQLID` = '%d'", OrgInfo[2][oSefNovac], OrgInfo[2][SQLID]);
								UpdateBanka(i);
								mysql_tqueryEx(SQL, "UPDATE `users` SET `NovacBanka` = '%d' WHERE `SQLID` = '%d'", PI[i][NovacBanka], PI[i][SQLID]);
								va_SendClientMessage(i, 0xFF0000FF, "#RADAR: {FFFFFF}Radar Vas je uslikao, vozili ste brzinom od {FF0000}%d {FFFFFF}km/h!", GetSpeed(i));
								va_SendClientMessage(i, 0xFFFFFFFF, "Dok dozvoljena brzina je {FF0000}%d {FFFFFF}km/h, Platili ste kaznu od {FF0000}%d{FFFFFF}$!", RadarInfo[ra_id][raBrzina], kazna);
							}
						}
					}
				}
			}
		}
	}
	return 1;
}

task Pola_Sata_Timer[1800000]()
{
	for(new t_id = 1; t_id < MAX_TERITORIJA; t_id ++)
	{
	    if(TeritorijeInfo[t_id][t_Org_ID] != -1)
		{
		    OrgInfo[TeritorijeInfo[t_id][t_Org_ID]][oSefNovac] += TeritorijeInfo[t_id][t_Novac];
            OrgInfo[TeritorijeInfo[t_id][t_Org_ID]][oSefDroga] += TeritorijeInfo[t_id][t_Droga];
            OrgInfo[TeritorijeInfo[t_id][t_Org_ID]][oSefMats] += TeritorijeInfo[t_id][t_Mats];
			mysql_tqueryEx(SQL, "UPDATE `organizations` SET `SefNovac` = '%d', `SefDroga` = '%d', `SefMats` = '%d' WHERE `SQLID` = '%d'", 
				OrgInfo[TeritorijeInfo[t_id][t_Org_ID]][oSefNovac], OrgInfo[TeritorijeInfo[t_id][t_Org_ID]][oSefDroga], OrgInfo[TeritorijeInfo[t_id][t_Org_ID]][oSefMats], OrgInfo[TeritorijeInfo[t_id][t_Org_ID]][SQLID]);
	    }
	}
	return 1;
}

task GlobalTimer[1000]()
{
    new sat, minut, sekund, godina, mesec, dan;
	gettime(sat, minut, sekund);
	getdate(godina, mesec, dan);
	foreach(new i: Player)
	{
		if(Radar_Uhvacen[i] > 0) { Radar_Uhvacen[i] --; }
        if(PI[i][ZatvorVreme] > 0)
		{
			new zatvor_s[80];
			PI[i][ZatvorVreme]--;
			format(zatvor_s,sizeof(zatvor_s), "~n~~n~~n~~n~~n~~n~~n~~w~Zatvoreni ste ~n~~w~jos ~b~%s ~w~sekundi...", KonvertujVreme(PI[i][ZatvorVreme]));
			GameTextForPlayer(i, zatvor_s, 2000, 3);
			mysql_tqueryEx(SQL, "UPDATE `users` SET `ZatvorVreme` = '%d' WHERE `SQLID` = '%d'", PI[i][ZatvorVreme], PI[i][SQLID]);
		}
		if(PI[i][ZatvorVreme] <= 0 && PI[i][Zatvor] > 0)
		{
			PI[i][Zatvor] = 0; PI[i][ZatvorVreme] = 0;
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Zatvor` = '%d', `ZatvorVreme` = '%d' WHERE `SQLID` = '%d'", PI[i][Zatvor], PI[i][ZatvorVreme], PI[i][SQLID]);
			SetPlayerWorldBounds(i, 20000.0000,-20000.0000,20000.0000,-20000.0000);
			SetPlayerInterior(i, 0); SetPlayerVirtualWorld(i, 0);
			SetPlayerPos(i, 1802.7881, -1577.6869, 13.4119);
			SetPlayerFacingAngle(i, 281.0);
			SetCameraBehindPlayer(i);
			va_SendClientMessage(i, 0x1b71bcFF, "#Info: {FFFFFF}Pusteni ste iz zatvora, pokusajte biti bolji gradjanin!");
			GameTextForPlayer(i, "~g~Pusteni ste iz zatvora...", 5000, 3);
			SetPlayerSpecialAction(i, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(i, 0);
		}

		new str[30];
		format(str, sizeof(str), "%02d:%02d:%02d_-_%02d.%02d.%02d", sat, minut, sekund, dan, mesec, godina);
		TextDrawSetString(InGameTD[41], str);
	
	    if(PI[i][Level] < 4) SetPlayerChatBubble(i, "[ POCETNIK ]", 0x1b71bcFF, 30.0, 60000);
	    if(PI[i][Mutiran] != 0) SetPlayerChatBubble(i, "[ MUTIRAN ]", 0xd46161FF, 30.0, 60000);
	    if(Trazeni_Level[i] != 0) SetPlayerChatBubble(i, "[ WANTED ]", 0xf45935FF, 30.0, 60000);
	    if(PI[i][MTeam] != 0) SetPlayerChatBubble(i, "[ MARKETING TEAM ]", 0x1fde5eFF, 30.0, 60000);
	    if(Trazeni_Level[i] != 0)
		{
			if(Trazeni_Level[i] == 1)
			{
				GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~r~Trazeni ste~n~Juri vas ~b~Policija~n~~r~/dosije~n~~y~]", 2000, 3);
			}
			else if(Trazeni_Level[i] == 2)
			{
				GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~r~Trazeni ste~n~Juri vas ~b~Policija~n~~r~/dosije~n~~y~]]", 2000, 3);
			}
			else if(Trazeni_Level[i] == 3)
			{
				GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~r~Trazeni ste~n~Juri vas ~b~Policija~n~~r~/dosije~n~~y~]]]", 2000, 3);
			}
			else if(Trazeni_Level[i] == 4)
			{
				GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~r~Trazeni ste~n~Juri vas ~b~Policija~n~~r~/dosije~n~~y~]]]]", 2000, 3);
			}
			else if(Trazeni_Level[i] == 5)
			{
				GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~r~Trazeni ste~n~Juri vas ~b~Policija~n~~r~/dosije~n~~y~]]]]]", 2000, 3);
			}
			else if(Trazeni_Level[i] == 6)
			{
				GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~r~Trazeni ste~n~Juri vas ~b~Policija~n~~r~/dosije~n~~y~]]]]]]", 2000, 3);
			}
		}
	    switch(PI[i][Admin])
	    {
	        case 1..3: SetPlayerChatBubble(i, "[ ADMIN ]", 0xFF0000FF, 20.0, 30000);
	        case 4: SetPlayerChatBubble(i, "[ HEAD ADMIN ]", 0xFF0000FF, 20.0, 30000);
	        case 5: SetPlayerChatBubble(i, "[ DIREKTOR ]", 0xFF0000FF, 20.0, 30000);
	        case 6: SetPlayerChatBubble(i, "[ VLASNIK ]", 0xFF0000FF, 20.0, 30000);
	    }
	    switch(PI[i][Vip])
	    {
	        case 1..4: SetPlayerChatBubble(i, "[ VIP ]", 0x1fde79FF, 20.0, 30000);
	    }
	}
    return 1;
}

task MinutTimer[60000]()
{
    foreach(new i : Player)
	{
		new sat, minut;
		gettime(sat, minut);
		if(minut == 0)
		{
			if(satinfo == 0)
			{
				va_SendClientMessageToAll(0x1b71bcFF, "#VIBE: {FFFFFF}Ugodnu igru zeli vam {1b71bc}'Vibe Community'. {FFFFFF}Trenutno je {1b71bc}%02d:00 {FFFFFF}sati.", sat);
                SetWorldTime(sat);
                SetTimerEx("LottoIzvlacenje", 3000, false, "d", 1);
				satinfo = 1;
			}
		}
		else if(minut != 0) { satinfo = 0; }
		if(PI[i][Mutiran] > 0)
		{
			PI[i][Mutiran] --;
			mysql_tqueryEx(SQL, "UPDATE `users` SET `Mutiran` = '%d' WHERE `SQLID` = '%d'", PI[i][Mutiran], PI[i][SQLID]);
   			if(PI[i][Mutiran] < 1)
			{
				PI[i][Mutiran] = 0;
				mysql_tqueryEx(SQL, "UPDATE `users` SET `Mutiran` = '%d' WHERE `SQLID` = '%d'", PI[i][Mutiran], PI[i][SQLID]);
				va_SendClientMessage(i, 0x1fde79FF, "#Sloboda govora: {FFFFFF}Vreme kazne za govor je isteklo, ponovo mozete pricati.");
			}
		}
		if(PI[i][ZVreme] > 0)
		{
			PI[i][ZVreme] --;
			mysql_tqueryEx(SQL, "UPDATE `users` SET `ZVreme` = '%d' WHERE `SQLID` = '%d'", PI[i][ZVreme], PI[i][SQLID]);
			if(PI[i][ZVreme] < 1) PI[i][ZVreme] = 0, mysql_tqueryEx(SQL, "UPDATE `users` SET `ZVreme` = '%d' WHERE `SQLID` = '%d'", PI[i][ZVreme], PI[i][SQLID]);
		}
		for(new t_id = 1; t_id < MAX_TERITORIJA; t_id ++)
		{
	   		if(TeritorijeInfo[t_id][t_Time] != 0)
			{
				TeritorijeInfo[t_id][t_Time] --;
				if(TeritorijeInfo[t_id][t_Time] <= 0)
				{
	                TeritorijeInfo[t_id][t_Time] = 0;
				}
				mysql_tqueryEx(SQL, "UPDATE `zones` SET `Time` = '%d' WHERE `SQLID` = '%d'", TeritorijeInfo[t_id][t_Time], TeritorijeInfo[t_id][SQLID]);
			}
		}
	}
	return 1;
}

task PetMinutaTimer[300000]()
{
    StartMatematika();
	foreach(new i: Player)
	{
	    if(Trazeni_Level[i] < 0)
		{
			Trazeni_Level[i] = 0;
			BojaIgraca(i);
		}
		if(Trazeni_Level[i] > 0)
		{
  			if(PI[i][Zatvor] > 0 || GetPlayerVirtualWorld(i) > 0 || GetPlayerInterior(i) > 0) return 1;
	    	Trazeni_Level[i] --;
		    if(Trazeni_Level[i] >= 1)
		    {
				va_SendClientMessage(i, 0x1b71bcFF, "#Info: {FFFFFF}Opao Vam je jedan Wanted Level, preostalo wl-a: %d.",Trazeni_Level[i]);
			}
   			else if(Trazeni_Level[i] == 0)
		    {
				va_SendClientMessage(i, 0x1b71bcFF, "#Info: {FFFFFF}Opao Vam je posljednji Wanted Level, vise niste trazena osoba!");
		 		BojaIgraca(i);
			}
		}
		if(PI[i][DrogaOvisan] == 1)
		{
			new Float:Helti;
			GetPlayerHealth(i, Helti);
			SetPlayerHealth(i, Helti - 8.0);
		    GameTextForPlayer(i, "~r~Kriza~n~ ~w~Niste uzeli svoju dozu droge", 5000, 4);
		    va_SendClientMessage(i, 0x1b71bcFF, "#Info: {FFFFFF}Niste uzeli svoju dozu droge, Vase telo trazi drogu (-8 HP)!");
		    va_SendClientMessage(i, -1, "Ukoliko imate cvrstu odluku da izlijecite zavisnost idite u bolnicu.");
		}
	}
	return 1;
}

timer DrogaPlantazaTimer[1000](plant)
{
	if(PlantazaInfo[plant][PlantazaVreme] > 0) 
	{
		PlantazaInfo[plant][PlantazaVreme]--;
        mysql_tqueryEx(SQL, "UPDATE `plants` SET `PlantazaVreme` = '%d' WHERE `SQLID` = '%d'", PlantazaInfo[plant][PlantazaVreme], PlantazaInfo[plant][SQLID]);
        PlantazaLabelUpdate(plant);
        defer DrogaPlantazaTimer(plant);
    }
    else return PlantazaLabelUpdate(plant);
    return 1;
}

timer slutBlowJobTimer[10000](playerid, id) 
{
	ClearDynamicActorAnimations(ProstitutkaAktor[id]);
    ProstitutkaVrsi[id] = false;
    TogglePlayerControllable(playerid, 1);
    ClearAnimations(playerid);
    va_SendClientMessage(playerid, 0x1b71bcFF, "#Info: {FFFFFF}Prostitutka je zavrsila posao i naplatila vam 1000$!");
    return 1;
}

// - //
AntiDeAMX()
{
    new a[][] =
    {
        "Unarmed (Fist)",
        "Brass K"
    };
    #pragma unused a
}
